{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "cyancynic", "created_utc": "1192651053", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029un9", "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426133, "score": 3, "score_hidden": false, "body": "Yup.  In a language that supports subtype polymorphism, static typing is like a suit of clothes that never quite fits.", "author": "martoo", "created_utc": "1192711535", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029qet", "id": "c029un9", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "foldl", "created_utc": "1192739212", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "cyancynic", "created_utc": "1192776723", "children": [{"controversiality": 0, "retrieved_on": 1427426034, "subreddit_id": "t5_2fwo", "created_utc": "1192800006", "name": "t1_c02a29n", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 1, "score_hidden": false, "body": " But dropping the requirement to type variables wouldn't get rid of the inconsistencies here. Whatever type inference engine you have is ultimately going to have to assign types to everything, and you'll end up with the same problems. To avoid the paradox you'd have to change the type system.", "author": "foldl", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02a14d", "id": "c02a29n", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02a14d", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426049, "score_hidden": false, "body": "the point is that you can eliminate the inconsistencies by simply dropping the requirement to type variables.  It doesnt' work when you have subtypes.  There is always some paradox that arises.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029y1b", "id": "c02a14d", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426089, "body": "Eh? What has the manifestness of the types got to do with it? You would get the same problem if C# had type inference.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029y1b", "parent_id": "t1_c029qet", "id": "c029y1b", "author_flair_css_class": null}], "subreddit": "programming", "ups": 8, "name": "t1_c029qet", "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426188, "score_hidden": false, "id": "c029qet", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yism", "body": "Lovely example of the kind of paradoxes that manifest typing inevitably leads to.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029qpo", "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426184, "score": 15, "body": " [One step ahead](http://www.scala-lang.org/intro/variances.html )", "author": "[deleted]", "created_utc": "1192653364", "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "ups": 15, "parent_id": "t3_5yism", "score_hidden": false, "id": "c029qpo"}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "[deleted]", "created_utc": "1192659317", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192661694", "ups": 1, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426172, "score": 1, "id": "c029rmv", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029rmv", "parent_id": "t1_c029rdp", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -5, "author": "[deleted]", "created_utc": "1192666635", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "xenon", "created_utc": "1192708074", "children": [{"controversiality": 0, "retrieved_on": 1427426133, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029un3", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 2, "score_hidden": false, "body": "Didn't you get the memo?  Any comment complaining about the dilution of programming.reddit gets instant kudos, regardless of content or circumstance.\n\nI'll make sure you get a copy.", "author": "nuclear_eclipse", "created_utc": "1192711490", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029uf1", "id": "c029un3", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029uf1", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 4, "link_id": "t3_5yism", "retrieved_on": 1427426136, "id": "c029uf1", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c029s32", "body": "Do you have several accounts or something? edtek raises an interesting point, you don't even argue against him but instead call him a \"fucking idiot\", and you have been upvoted to +3? I don't get it.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029s32", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -5, "link_id": "t3_5yism", "retrieved_on": 1427426166, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029rdp", "id": "c029s32", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426143, "subreddit_id": "t5_2fwo", "created_utc": "1192694359", "ups": 2, "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 2, "body": " That's Microsoft for you. I think it's one of those problems where intuition goes completely wrong (\"a Giraffe[] is *clearly* an Animal[]\"), and also where the correct solution (generics that include both co- and contravariant types depending an what you do with the array) is substantially more complex. Probably neither the first version of Java nor that of C# were designed with the help of an expert on type systems.", "author": "xenon", "archived": true, "distinguished": null, "edited": true, "id": "c029tvn", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029tvn", "parent_id": "t1_c029rdp", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029rdp", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 8, "link_id": "t3_5yism", "retrieved_on": 1427426175, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yism", "id": "c029rdp", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1192663798", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "sterling2505", "created_utc": "1192665110", "children": [{"controversiality": 0, "retrieved_on": 1427426148, "subreddit_id": "t5_2fwo", "archived": true, "ups": 4, "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 4, "id": "c029tg3", "author": "KayEss", "created_utc": "1192685888", "distinguished": null, "edited": false, "body": "I think dmh2000 agrees with you - he was being ironic. This gives it away:\n\n&gt;And why would you want the compiler to help you when the runtime can do it in front of the customer?\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029tg3", "parent_id": "t1_c029ryj", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "Gotebe", "created_utc": "1192696822", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "LaurieCheers", "created_utc": "1192703453", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029zcq", "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426072, "score": 1, "score_hidden": false, "id": "c029zcq", "author": "grauenwolf", "created_utc": "1192752043", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029u8q", "body": "but VB must be like Java cause, you know, they both use objects and such.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029u8q", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426138, "score_hidden": false, "body": "Not necessarily. Visual Basic is not very Java-like. Neither is brainfuck.\r\n\r\nhttp://code.google.com/p/brainfucker/\r\n\r\n_Edit: hmm, explicit hyperlinks no longer work in comments?_   ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029tz5", "id": "c029u8q", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "stormandstress", "created_utc": "1192706202", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192708764", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192751921", "ups": 2, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426072, "score": 2, "id": "c029zcc", "author": "grauenwolf", "archived": true, "distinguished": null, "edited": false, "body": "Take a look at the DLR. That is a hell of a lot more support than you'll find on any other platform.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029zcc", "parent_id": "t1_c029ugx", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426136, "body": ";-) means \"I am winking\"\n\nYes, I know there are dozens (hundreds?) of languages running on top of JVM or CLI.\n\nBut there are also numerous complaints about language X not fitting the VM or vice-versa. That's what I was hinting at: when paradigms are too different, it doesn't fit. You can shoehorn it, though, and that's what's happening.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c029ugx", "parent_id": "t1_c029uc9", "id": "c029ugx", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c029uc9", "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426137, "score_hidden": false, "id": "c029uc9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029tz5", "body": "Yeah. Because F#, Python, SML, and even [Scheme](http://www-sop.inria.fr/mimosa/Manuel.Serrano/publi/jot04/jot04.html) are so very \"Java-like\". ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029tz5", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yism", "retrieved_on": 1427426141, "body": ";-)\n\n&gt;The CLR is flexible enough to support multiple different languages on top of it.\n\nSurely you meant \"... as long as it's Java-like\"?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ryj", "id": "c029tz5", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029ryj", "controversiality": 0, "author_flair_text": null, "ups": 8, "link_id": "t3_5yism", "retrieved_on": 1427426168, "body": "I'll feed the troll:\r\n\r\nTo your first point, if you're writing a class library, you can't anticipate every possible input. And even in cases where you can do whole program analysis, the combinatorics might make it simply intractible to unit test every scenario. If you can eliminate the need for those particular unit tests entirely, then you get to spend that time making your software better in other ways.\r\n\r\nTo your second point, the issue is whether you should burden everyone with those costs. The CLR is flexible enough to support multiple different languages on top of it. A language designer which wants those kinds of features could build it in for those programmers who want it, without adding performance cost to everyone else. Whereas if the underlying array implementation in the CLR has to include these checks all the time, then everyone has to pay those costs even in scenarios where they would otherwise be completely unnecessary.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ruv", "id": "c029ryj", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c029ruv", "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426169, "score_hidden": false, "id": "c029ruv", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yism", "body": "[deleted]", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "foonly", "created_utc": "1192677138", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192891423", "ups": 2, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427425943, "score": 2, "score_hidden": false, "id": "c02a9br", "author": "daltonlp", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a9br", "parent_id": "t1_c029suj", "body": "Ach!  Save C# from the wee turtles!", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029suj", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426156, "score_hidden": false, "id": "c029suj", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yism", "body": "If C# won't save the wee turtles, who will?", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192683018", "children": [{"controversiality": 0, "retrieved_on": 1427426147, "subreddit_id": "t5_2fwo", "created_utc": "1192686957", "name": "t1_c029tiq", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 5, "score_hidden": false, "id": "c029tiq", "author": "GuyWithLag", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 5, "parent_id": "t1_c029t8r", "body": "Most emphatically not. \u0391rrays, like objects, have an actual type. Variables have a declared type. The compiler will check that operations against the declared type are correct, but the runtime will check objects against the actual type, hence ArrayStoreException may be thrown.\n\nIt's the same issue as with generics, only that they made the correct decision, and a List&lt;Object&gt; is no longer assignable from a List&lt;String&gt;.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 0, "name": "t1_c029t8r", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426151, "score_hidden": false, "body": "As I understand it, in Java, an array of Giraffe is an array of (implicit) object pointers.  Your Giraffe[] becomes de facto an Animal[] after the assignment.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yism", "id": "c029t8r", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -9, "author": "danielsoneg", "created_utc": "1192684010", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "LaurieCheers", "created_utc": "1192703292", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192705500", "ups": 0, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426137, "score": 0, "id": "c029ubm", "author": "lbruno", "archived": true, "distinguished": null, "edited": false, "body": "And he even got upmodded for missing the point.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029ubm", "parent_id": "t1_c029u8j", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426138, "body": "Er... did you read the article? Seemed pretty clear to me.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c029u8j", "parent_id": "t1_c029tbf", "id": "c029u8j", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -9, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426150, "body": "Dude, can someone tell me what the fuck is going on here?  What am I missing that makes that sentence not complete nonsense?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029tbf", "parent_id": "t3_5yism", "id": "c029tbf", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 11, "author": "[deleted]", "created_utc": "1192684546", "children": [{"controversiality": 0, "retrieved_on": 1427426123, "subreddit_id": "t5_2fwo", "created_utc": "1192719112", "ups": -2, "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": -2, "body": "?????", "author": "almost", "archived": true, "distinguished": null, "edited": false, "id": "c029vei", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029vei", "parent_id": "t1_c029tcq", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 11, "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426150, "id": "c029tcq", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029tcq", "parent_id": "t3_5yism", "body": "thank god for C++.  C++'s ugly syntax hides beautiful semantics.", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "japple", "created_utc": "1192685130", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192708311", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "japple", "created_utc": "1192731664", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192732886", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192737722", "ups": -1, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426091, "score": -1, "body": "When I say \"by the covariance of function arguments\", I mean that for all functions f that take an argument b and return an a:\n\na f(b)\n\nand for all types c &lt;: b, f(c) is well-typed.\n\nIn many languages, this is what subtyping means.", "author": "japple", "archived": true, "distinguished": null, "edited": false, "id": "c029xu2", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029xu2", "parent_id": "t1_c029x5m", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 0, "name": "t1_c029x5m", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426100, "score_hidden": false, "body": " &gt; In this case, by Liskov substitution and the covariance of function arguments, I should be able to pass an Array&lt;Animal&gt; to pop and get a Turtle out.\n\nYes, but you didn't say \"Turtle pop(Array&lt;Animal&gt;)\" -- you said \"Turtle pop(Array&lt;Turtle&gt;)\".  Hence my suspicion that you have a typo, and meant the former while spelling the latter.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029wyt", "id": "c029x5m", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c029wyt", "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426103, "score_hidden": false, "id": "c029wyt", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029ufv", "body": "The latter statement, as you will see, was predicated on \"Array&lt;Animal&gt; &lt;: Array&lt;Turtle&gt;\" where \"&lt;:\" is pronounced \"is a subtype of\".\n\nIn this case, by Liskov substitution and the covariance of function arguments, I should be able to pass an Array&lt;Animal&gt; to pop and get a Turtle out.\n\nSadly, no.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029ufv", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426136, "score_hidden": false, "body": "You've gotten upmods, but your latter statement seems largely incoherent.  Did you perhaps have a typo?  How could it ever be ill-typed to pop a Turtle from an Array&lt;Turtle&gt;?  Perhaps you meant that it's ill-typed to pop a Turtle from an Array&lt;Animal&gt;, in which case you're right, at least at compile time: a dynamic downcast should be necessary to resolve the issue.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029tej", "id": "c029ufv", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "LaurieCheers", "created_utc": "1192788579", "children": [{"controversiality": 0, "retrieved_on": 1427426041, "subreddit_id": "t5_2fwo", "created_utc": "1192789959", "name": "t1_c02a1qc", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 0, "score_hidden": false, "id": "c02a1qc", "author": "LaurieCheers", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c02a1o4", "body": "Write-only arrays. Hmm.... an interesting concept.\r\n\r\nThinking about this further, if you're treating an Array&lt;Animal&gt; as an Array&lt;Turtle&gt;, then it ought to be legal to get the length of it, delete it, clear it, etc - basically anything you could do to a generic Array&lt;foo&gt; should be legal.\r\n\r\nThe only thing you _can't_ do is get a Turtle out of it (because you might unexpectedly get an Elephant instead).\r\n\r\nPerhaps Array&lt;writeonly Turtle&gt; is a good notation for this? The Array itself is not writeonly, only the elements are.   ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a1o4", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5yism", "retrieved_on": 1427426042, "id": "c02a1o4", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c029tej", "body": "Having waded through the thread, yes, you're right. But your weird notation isn't doing you any favours.\r\n\r\nTo paraphrase:\r\n\r\n&gt; Array&lt;Turtle&gt; can't be a subtype of\r\n&gt; Array&lt;Animal&gt;, because then it's not\r\n&gt; necessarily legal to insert an Elephant\r\n&gt; into an Array&lt;Animal&gt;.\r\n\r\n&gt; And Array&lt;Animal&gt; can't be a subtype of\r\n&gt; Array&lt;Turtle&gt;, because then you can't\r\n&gt; guarantee that popping an Array&lt;Turtle&gt;\r\n&gt; will give you Turtles. \r\n\r\nWhich is fair enough.\r\n\r\nMy conclusion: Array&lt;Turtle&gt; is only a subtype of Array&lt;Animal&gt; if it's read-only. And Array&lt;Animal&gt; is only a subtype of Array&lt;Turtle&gt; if it's write-only.   ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426149, "body": "It was my understanding that if you're going to put a type in both covariant and contravariant positions, the type constructor must be invariant.\n\nIn other words, if Array&lt;Turtle&gt; &lt;: Array &lt;Animal&gt;, then \n\nvoid insertElephant(Array&lt;Animal&gt;)\n\nis ill-typed, and if Array&lt;Animal&gt; &lt;: Array&lt;Turtle&gt; then\n\nTurtle pop(Array&lt;Turtle&gt;)\n\nis ill-typed.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029tej", "parent_id": "t3_5yism", "id": "c029tej", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "Gotebe", "created_utc": "1192696615", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "lanzkron", "created_utc": "1192697561", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192699852", "children": [{"controversiality": 0, "retrieved_on": 1427426138, "subreddit_id": "t5_2fwo", "created_utc": "1192703148", "ups": 3, "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 3, "body": "They want the cost for people to start using .NET to be as low as possible. If all your old Java code just works (and is intercompatible with your C# code), then that's a big advantage. ", "author": "LaurieCheers", "archived": true, "distinguished": null, "edited": true, "id": "c029u8c", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029u8c", "parent_id": "t1_c029u42", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426133, "subreddit_id": "t5_2fwo", "created_utc": "1192712158", "name": "t1_c029uoo", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": 4, "score_hidden": false, "id": "c029uoo", "author": "beedee", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t1_c029u42", "body": "Umm technically J# is Java for .net ;)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426140, "id": "c029u42", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029u42", "parent_id": "t1_c029u0d", "body": "It's not that, as they were going to support C++, too (and they *do*).\n\nBTW... Java in .NET, what for!? C# is \"Java for .net\". It really makes them look stomping around in the dark. Strange, seeing achieved platform quality (on par with Java).", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029uke", "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426134, "score": 3, "body": "  I'd say the bad design decision was bringing the broken-ness into C#.  I think the expected utility of making it possible to support Java was probably deemed worth the small damage to the platform.  The bad decision was that the damage was treated like a feature when C# was designed!  ", "id": "c029uke", "author": "alexander", "created_utc": "1192710495", "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029u0d", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 4, "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426141, "id": "c029u0d", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029u0d", "parent_id": "t1_c029tyt", "body": "He says explicitly that they were planning to support Java as a .NET language. \n\nGreat design decision, break the platform so as to be able to accept a language that got left out in the end.", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "newton_dave", "created_utc": "1192799313", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "Gotebe", "created_utc": "1192800467", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192806293", "ups": 1, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426027, "score": 1, "body": "Oh, duh; I didn't even read your whole message I guess :/", "id": "c02a2wc", "author": "newton_dave", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a2wc", "parent_id": "t1_c02a2b0", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 0, "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426034, "id": "c02a2b0", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02a2b0", "parent_id": "t1_c02a27l", "body": " No, no, since we are talking about reference types of C#, *Type[]* in C# is kind-of equivalent to Type_*_* in C++. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a27l", "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426035, "score_hidden": false, "id": "c02a27l", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029tyt", "body": "You mean Giraffe\\[\\] and Animal\\[\\]?", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5yism", "retrieved_on": 1427426142, "id": "c029tyt", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c029tyt", "parent_id": "t3_5yism", "body": "MS precedent: Java. Another precedent: C++, where Giraffe_*_* isn't compatible with Animal_*_*. Why MS didn't copy this behavior, but rather the broken Java one?\n\nAnd it's not only broken, but also less efficient, as clearly there's a type check that's avoided with C++ type treatment.\n\nedit: markdown.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192713342", "ups": 7, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426131, "score": 7, "body": "I like turtles", "id": "c029usb", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029usb", "parent_id": "t3_5yism", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192713984", "ups": 0, "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427426130, "score": 0, "body": "I would like to be able to put turtles, chemises, coin collections, medical curiosities, garden rakes, breakfast cereal, large dogs, and Corsican snake-handlers in my arrays.\n\nThus my preference for Python lists, unless I really need the extra grief, and cognitive load, of static typing.", "id": "c029uuj", "author": "kefex", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029uuj", "parent_id": "t3_5yism", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426127, "subreddit_id": "t5_2fwo", "created_utc": "1192717280", "name": "t1_c029v5p", "gilded": 0, "link_id": "t3_5yism", "downs": 0, "score": -4, "score_hidden": false, "id": "c029v5p", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -4, "parent_id": "t3_5yism", "body": "[deleted]", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "sbrown123", "created_utc": "1192718514", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "sjs", "created_utc": "1192733383", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "sbrown123", "created_utc": "1192734422", "children": [{"distinguished": null, "controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02a6ib", "gilded": 0, "link_id": "t3_5yism", "retrieved_on": 1427425980, "score": 3, "score_hidden": false, "id": "c02a6ib", "author": "psyno", "created_utc": "1192839911", "author_flair_text": null, "edited": false, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029xdv", "body": "`Giraffe` is a subtype of `Animal` in this example.  That's kind of the point.  He's talking about array covariance.  C# (apparently) considers `Giraffe[]` as a subtype of `Animal[]`.\r\n\r\nWhat he's saying though is that `Giraffe[]` is _not_ a subtype of `Animal[]`--if it were, it would be substitutable for `Animal[]` and safe to put any subtype of `Animal` in it, but as it is, it's not even safe to put an instance of class `Animal` in it!\r\n\r\nSo I think what he means by bigger/smaller is to capture what C# considers to be the subtype/supertype relationship, while defining his own such relationship to consist solely of explicit inheritance.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426097, "body": " You mean re-read since the author later included a paragraph to try and clarify his statement.  But this in turn did not improve anything:\n\n&gt;And by \u201cbigger than\u201d and \u201csmaller than\u201d I explicitly do NOT mean \u201cis a supertype of\u201d and \u201cis a subtype of\u201d.\n\nThat being the case you should always get a type exception when attempting the line the author wrote.  How can you make an array of Animals be an array of Giraffe if Giraffe is not a sub of Animal?", "archived": true, "distinguished": null, "edited": true, "name": "t1_c029xdv", "parent_id": "t1_c029x8g", "id": "c029xdv", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029x8g", "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5yism", "retrieved_on": 1427426099, "body": "Keep reading...", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029vbq", "id": "c029x8g", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 0, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yism", "retrieved_on": 1427426124, "body": "     Animal[] animals = new Giraffe[10];\n\n&gt;Since Giraffe is **smaller** than Animal...\n\nWhat?   ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c029vbq", "parent_id": "t3_5yism", "id": "c029vbq", "author_flair_css_class": null}