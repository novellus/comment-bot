{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 13, "author": "schwarzedrache", "created_utc": "1192729951", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192819795", "gilded": 0, "link_id": "t3_5yllq", "retrieved_on": 1427426006, "score": 1, "score_hidden": false, "id": "c02a4fz", "author": "jimbobhickville", "archived": true, "distinguished": null, "edited": false, "body": "Yeah, I was wondering the same thing.  I didn't disagree with his comments, they just weren't anything I hadn't heard a million times before.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a4fz", "parent_id": "t1_c029wpp", "ups": 1, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029wpp", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 13, "link_id": "t3_5yllq", "retrieved_on": 1427426106, "id": "c029wpp", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yllq", "body": "How is this comment interesting? He's just stating an opinion (I think documentation is nifty!) not telling me anything I dobn't already know. ", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "dsk", "created_utc": "1192732189", "children": [{"controversiality": 0, "retrieved_on": 1427426048, "subreddit_id": "t5_2fwo", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yllq", "downs": 0, "score": 3, "body": " The developers *already know* the API. That's what makes it hard to write documentation for it: They don't know what the users will need to know.\n\nFor example, \u201cSets the frobnitzer to foo\u201d is a good *start* on documenting a hypothetical setter method. But why would you want to do that? What effects would setting it to foo have on the frobnitzer? What benefits would other objects reap from the frobnitzer being set to foo? What risks are run by setting it to that, or in fact by setting it at all?\n\nThe best way to get your API documented, IMO, is to enlist somebody who does not already know the API and wants to write code using it. Ask that person to either write the documentation itself, or at least keep notes that can be digested later into the documentation.\n\nIt works for the subject, as well: Documenting an API is a good way to learn it. I've actually learned a couple of the Adium internal APIs by writing their documentation. You may be able to get the same effect by writing unit tests.", "author": "boredzo", "created_utc": "1192778184", "distinguished": null, "edited": true, "id": "c02a16y", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a16y", "parent_id": "t1_c029x1l", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029x1l", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5yllq", "retrieved_on": 1427426103, "id": "c029x1l", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yllq", "body": "100% agree. The problem is that to developers their code or api makes 100% sense and is trivially easy to pick-up. \n\nNot..even..close.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "okvol", "created_utc": "1192733212", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192753940", "name": "t1_c029zhm", "gilded": 0, "link_id": "t3_5yllq", "retrieved_on": 1427426070, "score": 2, "score_hidden": false, "id": "c029zhm", "author": "bluGill", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029x7k", "body": "Dec documentation used to be great - if you wanted a wall of books that all looked a like someplace.   It also told you everything you needed to do, in the exact order.  (But by the time I started they will just extra machines in the test lab and not used for anything more complex than ping)", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029x7k", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 5, "link_id": "t3_5yllq", "retrieved_on": 1427426100, "body": "There is an old story about how to test documentation:\n\nDEC was testing their instructions for setting up a new VAX computer with VMS (1980's timeshare mid-range system). They got a college student that was a music major, set her down with the docs, hardware, and installation tapes. She was able to build the system, and her feedback pointed out where information was missing that wasn't obvious to her. ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yllq", "id": "c029x7k", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426080, "subreddit_id": "t5_2fwo", "created_utc": "1192745628", "ups": 4, "gilded": 0, "link_id": "t3_5yllq", "downs": 0, "score": 4, "id": "c029yqf", "author": "snifty", "archived": true, "distinguished": null, "edited": true, "body": "For an example of a project with great docs, check out jquery.com. Those guys have built documentation *and* testing into the source code. The docs are always up to date.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029yqf", "parent_id": "t3_5yllq", "score_hidden": false, "author_flair_css_class": null}