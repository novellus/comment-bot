{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 15, "author": "derekg", "created_utc": "1192453994", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "harryf", "created_utc": "1192455672", "children": [{"controversiality": 0, "retrieved_on": 1427426400, "subreddit_id": "t5_2fwo", "created_utc": "1192458691", "ups": 3, "gilded": 0, "link_id": "t3_5ybaa", "downs": 0, "score": 3, "body": "it is part of a production setup. it has worked out rather well so far.", "author": "derekg", "archived": true, "distinguished": null, "edited": false, "id": "c029a1h", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029a1h", "parent_id": "t1_c0299ru", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c0299ru", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426403, "score_hidden": false, "body": "Are you using it in serving public requests? How well has it worked out?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c0299mg", "id": "c0299ru", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 10, "author": "chime", "created_utc": "1192460517", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "derekg", "created_utc": "1192460785", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "chime", "created_utc": "1192461024", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "derekg", "created_utc": "1192461187", "children": [{"controversiality": 0, "retrieved_on": 1427426382, "subreddit_id": "t5_2fwo", "created_utc": "1192469789", "ups": 2, "gilded": 0, "link_id": "t3_5ybaa", "downs": 0, "score": 2, "body": "I know with DB2 you have the ability to view the execution plan and get a cost estimate.  \n\nNot 100% on how you'd get that from an explain statement in MySQL, but it's just a thought that if you could rapidly parse through that you could somehow cap the select statements performance cost so you don't hang the DB as chime pointed out.", "author": "rainman_104", "archived": true, "distinguished": null, "edited": false, "id": "c029bej", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029bej", "parent_id": "t1_c029adw", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "name": "t1_c029adw", "controversiality": 0, "archived": true, "link_id": "t3_5ybaa", "retrieved_on": 1427426395, "score_hidden": false, "id": "c029adw", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029ad9", "body": "we do plan on adding some simple security but i think you would still want to run everything in a trusted environment. If set privileges for a user to just stored procs then it might be okay but I would be wary of it. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029ad9", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5ybaa", "retrieved_on": 1427426396, "id": "c029ad9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029abw", "body": "True. Well, my trusted environment DBs can run off a 286 because I work in a small company. Maybe some day...", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "hhh333", "created_utc": "1192478227", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192493925", "name": "t1_c029e6j", "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426346, "score": 2, "score_hidden": false, "id": "c029e6j", "author": "joelhardi", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029cgx", "body": "I don't understand what you mean. You just run your database/dbslayer daemons on a private network with nonroutable addresses like 192.168.0.0/24, on a different set of interfaces from your public-facing addresses (i.e. eth0 for public, eth1 for private or something like that).\n\nWhich is what you do with all your database servers, anyway. They never listen on public IPs, unless you want them easily hacked. And for performance/security reasons, you would never want to have your public (HTTP) and private (MySQL, iSCSI, whatever) traffic run on the same network.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029cgx", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5ybaa", "retrieved_on": 1427426368, "id": "c029cgx", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029abw", "body": "Which .. is not really useful for most developers, it pretty much kill the scaling advantages (if there is).", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5ybaa", "retrieved_on": 1427426396, "id": "c029abw", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029abw", "parent_id": "t1_c029aak", "body": "yep. you need to run it in a trusted environment. ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029aak", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 10, "link_id": "t3_5ybaa", "retrieved_on": 1427426397, "id": "c029aak", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c0299mg", "body": "Good stuff. My concern is avoiding relatives of [Bobby Tables](http://www.xkcd.com/327/).\n\nYour security page says:\n\n&gt; The account DBSlayer uses to access the MySQL database should not be allowed to execute dangerous operations like dropping tables or deleting rows. Ideally, the account would only be able to run selects and/or certain stored procedures.\n\nThat still doesn't prevent someone from completely locking up my DB and rendering it useless by doing nested subselects and all that. If I have a public-facing site and someone can just run:\n\n    SELECT z1.*, z2.*, z3.*, z4.* FROM zipcode AS z1, zipcode AS z2, zipcode AS z3, zipcode AS z4\n\nThen my DB will indeed be hosed. Now you gotta worry about MySQL timeouts and all that. Hmmm.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 15, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426405, "body": "I wrote it and even months later - I still like many parts of it. ", "archived": true, "distinguished": null, "edited": false, "name": "t1_c0299mg", "parent_id": "t3_5ybaa", "id": "c0299mg", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "cgod", "created_utc": "1192457096", "children": [{"controversiality": 0, "retrieved_on": 1427426399, "subreddit_id": "t5_2fwo", "archived": true, "ups": 5, "gilded": 0, "link_id": "t3_5ybaa", "downs": 0, "score": 5, "body": "sqlrelay using a pre-fork model while dbslayer is threaded which for high traffic sites makes a performance difference. This also forces users into a stateless model (ie don't mess then the connection attributes, or run transactions accross multiple requests), which might feel uncomfortable at first but we believe is a better model. HTTP reduces the client side burden since no specialized libs are required. ", "author": "derekg", "created_utc": "1192459309", "distinguished": null, "edited": false, "id": "c029a43", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029a43", "parent_id": "t1_c0299wa", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c0299wa", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5ybaa", "retrieved_on": 1427426402, "body": "HTTP/JSON layer aside, how does this differ from [sqlrelay](http://sqlrelay.sourceforge.net/)?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ybaa", "id": "c0299wa", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "jerf", "created_utc": "1192458319", "children": [{"controversiality": 0, "retrieved_on": 1427426399, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029a2s", "gilded": 0, "link_id": "t3_5ybaa", "downs": 0, "score": 1, "score_hidden": false, "body": "I've been using a similar setup for a few months...  It simplifies things a LOT and gets around either having to dream up your own data transport encoding or having to use XML...\n\nPersonally I always recommend (to others) having an abstraction layer between your back end storage and your business logic...  (Actually I usually use 2 layers for various reasons)", "author": "slurpme", "created_utc": "1192459021", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029a05", "id": "c029a2s", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "shaft0rz", "created_utc": "1192459058", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192459455", "ups": 2, "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426399, "score": 2, "body": "We have some folks looking at ORM mapping that would live in dbslayer. Also having the ability to do some data manipulation in lua in dbslayer very much like mysqlrelay is being worked on. ", "author": "derekg", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029a4y", "parent_id": "t1_c029a32", "score_hidden": false, "id": "c029a4y"}], "subreddit": "programming", "name": "t1_c029a32", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5ybaa", "retrieved_on": 1427426399, "body": "I wonder if the abstraction would start to \"leak\" if a non-database were used on the other end. It seems pretty geared towards tabular data.\n\nThat being said, I wonder if the syntax could be tweaked to have this return POJO/POCOs from an object database.\n\nInteresting indeed.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029a05", "id": "c029a32", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "derekg", "created_utc": "1192459069", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "jonhohle", "created_utc": "1192459995", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192461010", "ups": 2, "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426396, "score": 2, "body": "yep. we want to create a backend for apr-util db so it will map to postgres,sqlite, and oracle in addition to mysql. should be fairly straight forward if people are interested in helping out. ", "id": "c029ad7", "author": "derekg", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029ad7", "parent_id": "t1_c029a7k", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5ybaa", "retrieved_on": 1427426398, "id": "c029a7k", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029a7k", "parent_id": "t1_c029a33", "body": "Say you decided to swap out the DB backend in place of something else, still returning JSON in the same format. Your app is still requesting query strings with raw SQL, right? So now the new system you have put in its place either has to a) parse SQL, or b) have the query mapped to some other functionality? Or am I missing something?\n\nI would imaging migration wouldn't be as simple replacing DBSlayer with a service that took the same URLs but provided results in a different manner.\n\nIt still looks like an awesome project.  Any plans on extending it to other database engines?", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "jerf", "created_utc": "1192460799", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029act", "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426396, "score": 2, "score_hidden": false, "body": "cool glad to hear other share the same idea. ", "author": "derekg", "created_utc": "1192460918", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029ac1", "id": "c029act", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029ac1", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 6, "link_id": "t3_5ybaa", "retrieved_on": 1427426396, "body": " By way of feedback, the one I'd be most interested in is providing DBSlayer with a function specification, such as \"get\\_current\\_users(domain, since\\_time)\", which it can _either_ convert to SQL _or_ do something else entirely.\n\nI'm _sure_ you've thought of this, I'm not trying to pretend this is an original idea. I'm just feeding back to say it's the one that most intrigues me. ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029a33", "id": "c029ac1", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "lennox125", "created_utc": "1192469906", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029bfe", "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426382, "score": 5, "score_hidden": false, "body": "yeah. very interested to see how that develops. ", "author": "derekg", "created_utc": "1192469974", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 5, "parent_id": "t1_c029bf4", "id": "c029bfe", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029bf4", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426382, "score_hidden": false, "body": "Have you guys taken a look at CouchDB?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029a33", "id": "c029bf4", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 8, "name": "t1_c029a33", "controversiality": 0, "archived": true, "link_id": "t3_5ybaa", "retrieved_on": 1427426399, "score_hidden": false, "id": "c029a33", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029a05", "body": "amen brother. the name was intentional - we want to slay the db. we have a whole host of ideas of how we might take this abstraction further. ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029a05", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 8, "link_id": "t3_5ybaa", "retrieved_on": 1427426400, "body": "I think this deserves some serious examination.\n\nOne of the interesting things about extracting your DB access out to JSON over HTTP is that you can later then exchange something else that does JSON over HTTP that perhaps isn't an SQL database. Or, perhaps best of all, you can easily mix and match, once you're no longer tied to being on a \"SQL database connection\".\n\nWhich is making interesting wheels spin in my mind.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ybaa", "id": "c029a05", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "niller8p", "created_utc": "1192468393", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "derekg", "created_utc": "1192468566", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192469098", "ups": 2, "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426383, "score": 2, "body": "Ah yes, I see now. I read more of the documentation and now I get it. Oops. :)\n\nPretty sweet project you have here. I might play with it for the software I work on, we have an immense number of small selects in most cases.", "id": "c029bbf", "author": "niller8p", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029bbf", "parent_id": "t1_c029b91", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426384, "body": "i would shiver. mainly php,python,ruby, even c code is used to consume the JSON. ", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029b91", "parent_id": "t1_c029b89", "id": "c029b91", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029b89", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5ybaa", "retrieved_on": 1427426384, "id": "c029b89", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5ybaa", "body": "Does anyone else shiver with fear at the idea of having SQL anywhere near the presentation layer (the browser)? Or am I the only one? \n\nIt's also possible I don't fully grok how DBSlayer is used in a production environment but to me is just seems evil.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029bny", "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426379, "score": 3, "score_hidden": false, "body": "It is funny, how DBSlayer provides strictly tabular data, completely ignoring OO aspect of javascript, DOM and xml.\n\nPushing impedance mismatch to the client ? :))\n", "author": "vagif", "created_utc": "1192471897", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t3_5ybaa", "id": "c029bny", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "gnuvince", "created_utc": "1192477828", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "joelhardi", "created_utc": "1192495344", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192538826", "ups": 2, "gilded": 0, "link_id": "t3_5ybaa", "retrieved_on": 1427426313, "score": 2, "body": "Connection pooling is a big win but having a common abstraction layer that can cross multiple languages is also pretty helpful. \nBeing pure textual representation offers easier caching scenarios. ", "id": "c029gpj", "author": "derekg", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029gpj", "parent_id": "t1_c029eay", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029eay", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5ybaa", "retrieved_on": 1427426345, "body": "I *think* the idea is that it's threaded and written in C so it's much faster/scalable than doing similar using a scripting language and cgi/fastcgi/mod_whatever.\n\nBut that's only if you're exposing it directly to, say, client requests in an AJAX application. Versus doing the sane thing, which would be to have a server end of your AJAX app validate user input, construct a query, and send it to the database. Then it just seems like an unnecessary SQL-over-HTTP proxy, adding a bottleneck/POF. So I guess I agree with you. :)\n\nMost of the things on the \"Why Use It\" page -- DB abstraction, round-robin DB servers, and failover when a DB server is down -- are trivially and better implemented in your app. The big one that isn't is connection pooling (unless your app is multithreaded, 99% of LAMP-style apps aren't and just blindly fork apache/fastcgi children), so to me that's probably the big win.\n\nIf you are rewriting your MySQL app to work with something like this though, the time might be right to make the switch to NDB. :)", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029cf5", "id": "c029eay", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426369, "body": "I keep reading the two first paragraphs, and I can't figure out what the fuck it's supposed to do.  Returns a queryset as a JSON object.  Yeah, so what?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029cf5", "parent_id": "t3_5ybaa", "id": "c029cf5", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "[deleted]", "created_utc": "1192526050", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "derekg", "created_utc": "1192538580", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192609461", "children": [{"controversiality": 0, "retrieved_on": 1427426211, "subreddit_id": "t5_2fwo", "created_utc": "1192637553", "score": 2, "link_id": "t3_5ybaa", "downs": 0, "name": "t1_c029olo", "score_hidden": false, "body": "i can respect that ;)", "author": "derekg", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029mq7", "id": "c029olo", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c029mq7", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426235, "score_hidden": false, "id": "c029mq7", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029gpb", "body": "&gt; Thanks for reminding us and feel free to \r\n&gt; come help out.\r\n\r\nNahh thanks for the offer, but I like bitching and whining a lot better than actually helping out. ;-)  ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029gpb", "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426313, "score_hidden": false, "body": "I agree. The thing is the real world doesn't always match the theory. Since there is not a feasiable way of getting out of 1 thread per mysql connection and the db query is the slowest part, multiplexing the io offers only a small advantage. Also slow clients are dropped  - [ using apr_socket_timeout_set ](granted on a per thread basis but the timeout is user defined at runtime) so if this is an issue there are ways to attempt to deal with.  \n\nAlso, I can tell you in the billions and billions of queries that have passed thru dbslayer on a pretty large site, we have never seen the problem of numerous slow clients degrading dbslayer performance. \n\nRegardless of all the comments above, we would welcome submissions. It shouldn't be to difficult. I had started on this before but it never rose to being a real issue. \n\nThanks for reminding us and feel free to come help out. \n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029g6r", "id": "c029gpb", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ybaa", "retrieved_on": 1427426320, "body": "  From the site: \"Written in C for performance\"\r\n\r\nThis is a *classic* example why using C doesn't automatically mean great performance. For the people interested, look at dbslayer.c lines 207 - 214 -- it's a loop that reads data from a connection after a connection has been received. This is a big anti-pattern when designing high performance servers -- this means that, if there is one slow client with a slow connection, one thread will remain busy reading data from that slow client while he could have done *many* other things in that time.\r\n\r\nThe correct way is to just wait for events (as in, data from the socket) from certain clients (using for example, /dev/epoll), demultiplex that to the correct client handler, and when the request was fully received (as in, the parsing was complete), handle this request.\r\n\r\nThis way, you can handle hundreds of clients with only 4 threads, without having the risk of one client slowing down a thread.  ", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029g6r", "parent_id": "t3_5ybaa", "id": "c029g6r", "author_flair_css_class": null}