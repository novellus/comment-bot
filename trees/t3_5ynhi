{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "awkward", "created_utc": "1192808230", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192812837", "ups": 2, "gilded": 0, "link_id": "t3_5ynhi", "retrieved_on": 1427426016, "score": 2, "body": "  &gt; I'm sure there's some case out there where a debugger is the most useful way to fix something, but I really can't come up with it.\n\nYou can get some ideas here: http://programming.reddit.com/info/5yle2/comments", "author": "Tommah", "archived": true, "distinguished": null, "edited": true, "id": "c02a3n8", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a3n8", "parent_id": "t1_c02a355", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02a46q", "gilded": 0, "link_id": "t3_5ynhi", "retrieved_on": 1427426009, "score": 7, "score_hidden": false, "body": "&gt; read the documentation\r\n\r\nWhat documentation? I find most of the documentation for libaries to be quite poor, especially when dealing with edge cases. Often the only way to figure out what is going on is to explore using the debugger.", "author": "grauenwolf", "created_utc": "1192817881", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 7, "parent_id": "t1_c02a355", "id": "c02a46q", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Kolibri", "created_utc": "1192821825", "children": [{"controversiality": 0, "retrieved_on": 1427426001, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02a4u9", "gilded": 0, "link_id": "t3_5ynhi", "downs": 0, "score": 0, "score_hidden": false, "body": "GUIs can still have logs, and probably should.\n\nHuge logs of poorly documented code are a pretty good case for a debugger. They're also a good case for one off programs to find your edge cases without filling your project with even more code you don't understand.\n\nMy point was that in my experience, my time spent in the debugger was more often wasted than my time spent analyzing the problem outside of it. Likewise, I don't get paid for delivering something that doesn't work.\n\nI don't think that debuggers are useless, but I have found plenty cases where improperly using one has wasted my time. \n\nMost of those cases have been in Java or .net. Maybe I'm just using crappy debuggers?", "author": "awkward", "created_utc": "1192823474", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c02a4o1", "id": "c02a4u9", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a4o1", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5ynhi", "retrieved_on": 1427426003, "body": "What if you are debugging a bug in a GUI?\r\n\r\nWhat if you have a tens of thousands lines library with undocumented behaviour?\r\n\r\nWhat if the documentation is non-existant or very sparce?\r\n\r\nWhat if you don't have time to \"give up, read the documentation, etc.\"?\r\n\r\nWhat if you are actually paid for your time and spending time immersing yourself in the problem isn't what you are getting paid for?\r\n\r\nEtc.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a355", "id": "c02a4o1", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -1, "name": "t1_c02a355", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ynhi", "retrieved_on": 1427426023, "score_hidden": false, "body": "Debuggers always seemed like a solution looking for a problem to me. \n\nMost of the bugs I make are the result of incomplete understandings of language features and library functions. Because of that, I go into the debugger with incorrect preconceptions of what I'm supposed to be doing, beat at the problem for a while, give up, read the documentation, isolate the problem in a unit test or dummy program, and then fix it. It took me a while to realize that the first step in that process almost never tells me what I need to fix.\n\nI'm sure there's some case out there where a debugger is the most useful way to fix something, but I really can't come up with it.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ynhi", "id": "c02a355", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1192816041", "children": [{"controversiality": 0, "retrieved_on": 1427426002, "subreddit_id": "t5_2fwo", "created_utc": "1192822401", "ups": 3, "gilded": 0, "link_id": "t3_5ynhi", "downs": 0, "score": 3, "body": "IF you use them for a short time and then drop out to think they are great.  They can tell you what happens at the moment of failure.  However debuggers make it far to easy to stop thinking and just start stepping through code, modifying variables to what they should be, without getting any closer to understanding or fixing what is wrong.\r\n\r\nUse a debugger wisely, and they are great.  Abuse them, and they are a waste of time.", "author": "bluGill", "archived": true, "distinguished": null, "edited": false, "id": "c02a4q9", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a4q9", "parent_id": "t1_c02a3yr", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c02a3yr", "controversiality": 0, "archived": true, "link_id": "t3_5ynhi", "retrieved_on": 1427426012, "score_hidden": false, "id": "c02a3yr", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5ynhi", "body": " What's wrong with debuggers?  Think of a debugger as a REPL (yes, a REPL even for C, C++, and Java) that can crack open a problem by allowing precious visibility into a running process.", "author_flair_css_class": null}