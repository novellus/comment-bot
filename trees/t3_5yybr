{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1193166727", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "d166e8", "created_utc": "1193173068", "children": [{"controversiality": 0, "retrieved_on": 1427425330, "subreddit_id": "t5_2fwo", "archived": true, "score": 2, "link_id": "t3_5yybr", "downs": 0, "name": "t1_c02bf5a", "created_utc": "1193377273", "score_hidden": false, "id": "c02bf5a", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": true, "gilded": 0, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02avvd", "body": "Thanks -- Fair enough. It does though mean that the language is no longer purely concatenative, which is something of a shame. (Perhaps it wasn't before either due to some restriction I'm not aware of?) ", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02avvd", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yybr", "retrieved_on": 1427425651, "score_hidden": false, "id": "c02avvd", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02auzc", "body": "\"dup apply\" is valid within a context where the argument types can be inferred, it is not allowed as a stand-alone combinator, because there is no longer a way for the type system to express the recursion.\r\n\r\nSo I can say: \"[12] dup apply\" or even \"[dup] dup apply\" but I can't say: \"[dup apply]\" or \"define m { dup apply }\".\r\n\r\nBasically, this fixes a lot of old bugs and simplifies the code base, and disallows a handful of esoteric programs. ", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5yybr", "retrieved_on": 1427425662, "id": "c02auzc", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02auzc", "parent_id": "t3_5yybr", "body": " Why the change regarding equirecursive types? Is \"dup apply\" no longer valid in any case, or just independently as a combinator? Or is it handled dynamically?", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425659, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02av86", "gilded": 0, "link_id": "t3_5yybr", "downs": 0, "score": 4, "score_hidden": false, "id": "c02av86", "author": "amoore", "created_utc": "1193168380", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t3_5yybr", "body": "This is not \"cat\" found in the GNU coreutils or textutils that you may know as /bin/cat. It's evidently about a language.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193170216", "ups": -2, "gilded": 0, "link_id": "t3_5yybr", "retrieved_on": 1427425655, "score": -2, "body": "tuna leech !\n\n:)", "id": "c02avh4", "author": "zmonk2", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02avh4", "parent_id": "t3_5yybr", "score_hidden": false, "author_flair_css_class": null}