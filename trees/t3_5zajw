{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 19, "author": "onmytoes", "created_utc": "1193583939", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "redditnoob", "created_utc": "1193591083", "children": [{"controversiality": 0, "retrieved_on": 1427425142, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02btlh", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 4, "score_hidden": false, "body": "Of course. I trust you've never programmed Forth on the Atari?\n\n(Kidding aside, while I don't have Floegel's book, I *have* held it in my hands once, and I *did* some Forth on the Amiga...)", "author": "eleitl", "created_utc": "1193597521", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 4, "parent_id": "t1_c02bt71", "id": "c02btlh", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "ayrnieu", "created_utc": "1193614864", "children": [{"controversiality": 0, "retrieved_on": 1427425062, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bzsj", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 2, "score_hidden": false, "body": "With those muscles, what *can't* you access in Forth on Atari?", "author": "taejo", "created_utc": "1193679118", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02buyt", "id": "c02bzsj", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02buyt", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5zajw", "retrieved_on": 1427425125, "body": "&gt; Could you access it in Forth?\r\n\r\nYes.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bt71", "id": "c02buyt", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bt71", "ups": 8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425147, "score_hidden": false, "body": "Could you access it in Forth?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bspd", "id": "c02bt71", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425137, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bu2f", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 8, "score_hidden": false, "id": "c02bu2f", "author": "sketerpot", "created_utc": "1193602855", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 8, "parent_id": "t1_c02bspd", "body": "According to [this article](http://www.atarimagazines.com/v7n11/randomatari.html), the Atari had a true random number generator that measured noise in an analog circuit somewhere.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 19, "name": "t1_c02bspd", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425154, "score_hidden": false, "id": "c02bspd", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5zajw", "body": "The Atari 8-bit computers had hardware random number generation.  It was a pseudo-random circuit that updated every clock cycle, and you could grab a value from it by reading a memory address.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193584706", "name": "t1_c02bsr6", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425153, "score": 2, "score_hidden": false, "id": "c02bsr6", "author": "killerstorm", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t3_5zajw", "body": "if they add it they will have to be sure it's really random (and has uniform distribution), so additional headache for chip-makers..\r\n\r\nthey say there's cryptoprocessor in Niagara II, does it have fast RNG?", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "curtisw", "created_utc": "1193586890", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 12, "author": "api", "created_utc": "1193587682", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "theeth", "created_utc": "1193608220", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "deepcleansingguffaw", "created_utc": "1193622883", "children": [{"controversiality": 0, "retrieved_on": 1427425115, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bvpm", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 3, "score_hidden": false, "id": "c02bvpm", "author": "theeth", "created_utc": "1193624173", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02bvly", "body": "Absolutely. Which is why I think comparing the speed of /dev/random to Mersene Twister is a bit loaded. They don't have the same field of application.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425116, "id": "c02bvly", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bvly", "parent_id": "t1_c02buhu", "body": "True, but simulations and cryptography have different requirements for random numbers.\n\nCryptography primarily needs unpredictability. Simulation primarily needs equidistribution.\n\nMT is very good at equidistribution, making it ideal for simulation.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "name": "t1_c02buhu", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425131, "score_hidden": false, "id": "c02buhu", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bsx0", "body": "Mersenne Twister is not cryptography safe.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 12, "name": "t1_c02bsx0", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425151, "score_hidden": false, "body": "Very poorly compared to something CPU-level. Much worse than Mersenne Twister.\n\nYou can use /dev/random in combination with a good RNG like MT to get good almost-natural randomness, but it doesn't help with the 20-40% overhead problem for RNG-intensive simulations and EC and stuff.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bsvm", "id": "c02bsx0", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "finix", "created_utc": "1193594657", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193601288", "name": "t1_c02btww", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425138, "score": 3, "score_hidden": false, "id": "c02btww", "author": "ovi256", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c02btfb", "body": "He meant fare.  \n\nErrare humanum est.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425144, "body": "How does it *what*?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02btfb", "parent_id": "t1_c02bsvm", "id": "c02btfb", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "frutiger", "created_utc": "1193596270", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "frutiger", "created_utc": "1193599859", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "nathanj", "created_utc": "1193601663", "children": [{"controversiality": 0, "retrieved_on": 1427425137, "subreddit_id": "t5_2fwo", "created_utc": "1193602678", "ups": 6, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 6, "id": "c02bu1f", "author": "frutiger", "archived": true, "distinguished": null, "edited": false, "body": "So? Since when did people stop caring about spelling/grammar? We have many beautiful languages at our disposal, and we should adhere to the rules of them (or if we break them, at least we should know why/how we are breaking them).", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bu1f", "parent_id": "t1_c02bty4", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "name": "t1_c02bty4", "controversiality": 0, "archived": true, "ups": 5, "link_id": "t3_5zajw", "retrieved_on": 1427425138, "id": "c02bty4", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btsf", "body": "Perhaps people are downmodding you not because your post is incorrect, but because it adds nothing to the discussion (just like this post :)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02btsf", "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425141, "score_hidden": false, "id": "c02btsf", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02bti9", "body": "*sigh*. To the downmodders:\n\nFourth definition in [here](http://www.google.co.uk/search?hl=en&amp;defl=en&amp;q=define:fare&amp;sa=X&amp;oi=glossary_definition&amp;ct=title). None of the definitions in [here](http://www.google.co.uk/search?hl=en&amp;q=define:fair&amp;btnG=Search&amp;meta=).\n\nEdit: marked those URLs down.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193626447", "name": "t1_c02bvwn", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425112, "score": 1, "score_hidden": false, "id": "c02bvwn", "author": "curtisw", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bti9", "body": "Whoops, yep. Good catch.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bti9", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 8, "link_id": "t3_5zajw", "retrieved_on": 1427425143, "id": "c02bti9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bsvm", "body": "I think you meant *fare*.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193605083", "name": "t1_c02bu9b", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425136, "score": 2, "score_hidden": false, "id": "c02bu9b", "author": "IHaveAnIdea", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02bsvm", "body": "Depends if you have custom hardware feeding it;)", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425125, "score": 1, "body": "&gt; How does /dev/random fair in terms of speed?\r\n\r\nWhat, OpenBSD's /dev/random?  That's reserved for hardware RNGs, so it'd depend.  Of [the devices that it offers](http://www.openbsd.org/cgi-bin/man.cgi?query=arandom), the outlier is /dev/srandom, which will block when it runs out of entropy. ", "author": "ayrnieu", "created_utc": "1193614756", "distinguished": null, "edited": true, "id": "c02buyj", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02buyj", "parent_id": "t1_c02bsvm", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "kscaldef", "created_utc": "1193620582", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "taejo", "created_utc": "1193679709", "children": [{"controversiality": 0, "retrieved_on": 1427424918, "subreddit_id": "t5_2fwo", "archived": true, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 1, "score_hidden": false, "body": "Yes, it was a very naive solution to the problem and quickly replaced with a more sensible approach.  I was just trying to demonstrate how slow generating random numbers is.  Although, it was actually the case that an LFSR was still slower than the real server.  ", "author": "kscaldef", "created_utc": "1193803255", "distinguished": null, "edited": false, "id": "c02caw1", "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bzv1", "name": "t1_c02caw1", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02bzv1", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425061, "score_hidden": false, "body": "Why do you need /dev/random for that? /dev/urandom is your friend. From man urandom(4):\n\n&gt; A read from the /dev/urandom device will not block waiting for more entropy.  As a result, if there is not sufficient entropy in the entropy pool, the  returned  values are theoretically vulnerable to a cryptographic attack on the algorithms used by the driver.  Knowledge of how to do this is not available in the current non-classified literature, but it is theoretically possible that such an attack may exist.  If this is a  concern  in\nyour application, use /dev/random instead.\n\n/dev/random gives trouble especially in headless environments, and worse if you aren't spinning disks (because, for example, you're using randomly generated data instead of on-disk data), due to a lack of entropy sources.\n\nYou probably shouldn't even use /dev/urandom in this situation, since you're wasting entropy that might be needed for cryptographic purposes. Why doesn't an LFSR suffice?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bvez", "id": "c02bzv1", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bvez", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5zajw", "retrieved_on": 1427425119, "body": "Pretty poorly.  In one of our distributed applications, we created a lot of stub servers to allow some level of testing while the real servers were in development.  We found that stub servers returning random results were actually slower than the real servers which did several database lookups and lots of business logic.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bsvm", "id": "c02bvez", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425152, "id": "c02bsvm", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bsvm", "parent_id": "t3_5zajw", "body": "How does /dev/random fare in terms of speed?", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "morner", "created_utc": "1193588255", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425144, "score": 1, "body": " There is an example working with NVIDIA CUDA:  \n\nhttp://developer.download.nvidia.com/compute/cuda/sdk/website/samples.html#MersenneTwister  \n  \n[(Whitepaper)](http://developer.download.nvidia.com/compute/cuda/sdk/website/projects/MersenneTwister/doc/MersenneTwister.pdf)\n ", "author": "thamer", "created_utc": "1193595332", "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02btfy", "parent_id": "t1_c02bsys", "score_hidden": false, "id": "c02btfy"}], "subreddit": "programming", "score_hidden": false, "ups": 8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425150, "body": "Pseudorandom numbers are nice, sometimes. It's often useful to be able to simply put the same seed in across different runs of a program, rather than store a bazillion true-random digits on file somewhere.\n\nIt might be interesting to try taking the middle ground, and implement the Mersenne Twister as a GPU shader; that'd be nice and fast, and come with all of the benefits of any other software PRNG.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bsys", "parent_id": "t3_5zajw", "id": "c02bsys", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1193588682", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "MarlonBain", "created_utc": "1193591056", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193620649", "name": "t1_c02bvf9", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425119, "score": 1, "score_hidden": false, "id": "c02bvf9", "author": "scott", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bt6z", "body": "hmm", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425147, "id": "c02bt6z", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bt6z", "parent_id": "t1_c02bt04", "body": "On the desire not to see people end anything with the single-word sentence: \"Thoughts?\"\r\n\r\nThoughts?", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 0, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425150, "id": "c02bt04", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bt04", "parent_id": "t3_5zajw", "body": "On the desire to see people not abuse the 'on' phrase in titles of trivial blog posts, further tarnishing such great works as On Liberty.", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 22, "author": "MarshallBanana", "created_utc": "1193590039", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "api", "created_utc": "1193590403", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 8, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425147, "score": 8, "body": "Not sure about how useful a vector unit would be, but something like a Tausworthe generator would be extremely easy to implement in hardware with very few transistors, but there's not all that much point.", "author": "MarshallBanana", "created_utc": "1193591262", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bt7j", "parent_id": "t1_c02bt4z", "score_hidden": false, "id": "c02bt7j"}], "subreddit": "programming", "ups": 2, "name": "t1_c02bt4z", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425149, "score_hidden": false, "body": "... or implement a software PRNG as part of a vector unit like Altivec or SSE. Then you could run them many times faster. A one clock cycle pseudo-random number generator is probably feasible.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bt3w", "id": "c02bt4z", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 10, "author": "fredrikj", "created_utc": "1193596112", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Xiphorian", "created_utc": "1193603738", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "IHaveAnIdea", "created_utc": "1193604885", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "Xiphorian", "created_utc": "1193611273", "children": [{"controversiality": 0, "retrieved_on": 1427425109, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bw66", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": -5, "score_hidden": false, "id": "c02bw66", "author": "IHaveAnIdea", "created_utc": "1193630270", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": -5, "parent_id": "t1_c02bupj", "body": " In the CPU == New hardware in the CPU.\n\nWhat the fuck. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425128, "body": "I agree you can make a whole separate device dedicated to anything you want.  I could make a PCI card whose job is just to send email. Let me repeat the title:\n\n&gt; On the need for a very fast true random number generator in modern CPUs \n\nThe key concepts here are \"very fast\" and \"in the CPU\".  Hardware random number generators already exist and have for some time.  You can buy a [PCI card version here](http://www.idquantique.com/products/quantis.htm).  You couldn't get near 1 random number per CPU cycle from a PCI card, which is what the author says would be useful.\n\nIf you interpret the article to say \"we should have hardware RND\", then it's not saying anything useful or new and would be outdated by 20 years.  The author here is specifically discussing the value of a *CPU instruction* and I'm addressing the hurtles to that.\n\nMy feeling is that he's right: a CPU instruction would be significantly different in terms of speed and ubiquity.  I doubt it will be cheap or easy to put this on the CPU, hence my post.\n\nMy post in fact implicitly suggests you might need a dedicated hardware component because it is so complicated.     ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02bupj", "parent_id": "t1_c02bu8v", "id": "c02bupj", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bu8v", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5zajw", "retrieved_on": 1427425136, "body": " Hardware can do lots of fast calculations. You're saying that graphics cards shouldn't exist either because it's impossible for custom hardware to do tons of calculations faster than using a generic cpu?? ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02bu5f", "id": "c02bu8v", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425086, "subreddit_id": "t5_2fwo", "created_utc": "1193662733", "ups": 1, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 1, "id": "c02bxy5", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "The problem is not the speed of processing the random bits. You can pipeline the processing. The problem is how to generate true random bits fast enough. ", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bxy5", "parent_id": "t1_c02bu5f", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02bu5f", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425135, "score_hidden": false, "id": "c02bu5f", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02bthq", "body": "The problem is that you need to do lots of calculations to re-scale the actual hardware probability to something that looks like a uniform distribution.\n\nImagine the waves made in a funny-shaped pond when you drop a rock into it.  Now pretend those waves correspond to a 3D function where the probability of a particle being in any place (the height of the wave) is a function of position.\n\nIf you can measure a particle as possibly in one of those places, you can get random numbers.  However, you have to do significant processing for something like `rand(10)` to generate uniform results.\n\nOf course you can try to use a simpler physical process -- say radioactive decay -- but even that requires elaborate calibration.  The point many others have made in this thread is that it's hard to get a hardware device to have physical probability anything like 50/50.  The first difficulty would be making sure your distribution doesn't vary through time! (heat, EM interference, subtle effects)", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "Slipgrid", "created_utc": "1193632312", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Taladar", "created_utc": "1193665378", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "Slipgrid", "created_utc": "1193667209", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "LaurieCheers", "created_utc": "1193671500", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "Slipgrid", "created_utc": "1193672532", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "rye419", "created_utc": "1193685553", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "Slipgrid", "created_utc": "1193689501", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "MarshallBanana", "created_utc": "1193708312", "children": [{"controversiality": 0, "retrieved_on": 1427425019, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02c34f", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 1, "score_hidden": false, "body": "Yep, but in the good way.", "author": "Slipgrid", "created_utc": "1193712070", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02c2t0", "id": "c02c34f", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425023, "id": "c02c2t0", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c2t0", "parent_id": "t1_c02c10w", "body": "You're kind of insane, you know that?", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -3, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425047, "id": "c02c10w", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c10w", "parent_id": "t1_c02c0k8", "body": "LOL.  Wish I could.  Let's just say, if P&lt;&gt;NP, the Universe would fall apart.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425052, "body": "Prove it.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02c0k8", "parent_id": "t1_c02byy7", "id": "c02c0k8", "author_flair_css_class": null}], "subreddit": "programming", "ups": -2, "name": "t1_c02byy7", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425073, "score_hidden": false, "body": "True one way functions don't exist.  P=NP.  I am not a troll.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02byto", "id": "c02byy7", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193770477", "name": "t1_c02c7kc", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427424961, "score": 1, "score_hidden": false, "body": "I don't think he's trolling, I think he's ignorant. The only type of random number he's ever seen is that created by a mathematical function, such as the Merseinne(sp?) twister. He is probably not aware of hardware RND generation that uses entropy from outside sources to create random numbers.\n\nArguing from a position of ignorance, he thinks that all random number generators are deterministic and reversible.\n\nCan't fix stupid people.", "author": "MyrddinE", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02byto", "id": "c02c7kc", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425075, "id": "c02byto", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02byto", "parent_id": "t1_c02byba", "body": "If you have philosophical objections to the phrase 'true random', try 'nonrepeatable'.\r\n\r\nA pseudo-random number generator is a deterministic, so (given the same seed) it generates the same sequence of random-looking numbers every time.\r\n\r\nA 'true' random number generator doesn't. If you insist that it must have a seed, then the seed is the entire universe. So if you want to see it generate the same sequence twice, get a time machine.\r\n\r\n(Assuming you're right and the universe is deterministic, that is.)\r\n\r\n\r\nAnyway, you're clearly trolling here. Your original comment was that \"every new CPU [would] generate the same random numbers\", which would only happen if it was using a pseudo-random number generator with a specific seed, and it's not, regardless of whether the universe is deterministic.  ", "author_flair_css_class": null}], "subreddit": "programming", "ups": -2, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425081, "body": "What are you talking about?  You have to seed it with something.  One person is talking about using the \"measured noise in an analog circuit somewhere.\"  Someone else is talking about using radiation decay.\n\nI may be a classical physicist, because I think you are using the word \"true\" a bit liberally.  What is truly random?  Do you not thing that the noise of an analog circuit is somehow predictable?  Or do you think that radiation decay is contrary to the laws of the Universe?  Is there really randomness in quantum mechanics, or is there some driving force that we can't and don't see?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02byba", "parent_id": "t1_c02by5o", "id": "c02byba", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02by5o", "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425083, "score_hidden": false, "id": "c02by5o", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bwbf", "body": "True random generators, not pseudo-random.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bwbf", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -1, "link_id": "t3_5zajw", "retrieved_on": 1427425107, "body": "&gt;The RAND instruction doesn't require any input\n\nDoesn't it require a seed, unless you want every new CPU to generate the same random numbers?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bthq", "id": "c02bwbf", "author_flair_css_class": null}], "subreddit": "programming", "ups": 10, "name": "t1_c02bthq", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425144, "score_hidden": false, "body": "&gt; A one-cycle instruction with a perfectly random distribution is a ridiculous thing to ask for.\n\nThe RAND instruction doesn't require any input, so shouldn't it be possible to generate a random number as soon as the last one has been fetched, and store it until the next fetch? This would easily cut it down to one clock cycle unless you're reading several consecutive numbers without doing any work in between (and then, you could still get it down to one cycle by using several generators in parallel).", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bt3w", "id": "c02bthq", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425142, "subreddit_id": "t5_2fwo", "created_utc": "1193597685", "ups": 12, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 12, "body": "Hey, the Nehemiah and the Geode LX certainly have whitened entropy generators to easily flood your memory bandwidth. It's only a question of time before the mainstream CPUs will get it.", "id": "c02btlv", "author": "eleitl", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02btlv", "parent_id": "t1_c02bt3w", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -11, "author": "IHaveAnIdea", "created_utc": "1193604791", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -4, "author": "MarshallBanana", "created_utc": "1193606356", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -5, "author": "IHaveAnIdea", "created_utc": "1193630454", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "MarshallBanana", "created_utc": "1193663661", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "IHaveAnIdea", "created_utc": "1193675006", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "MarshallBanana", "created_utc": "1193692946", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "IHaveAnIdea", "created_utc": "1193693290", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "MarshallBanana", "created_utc": "1193693988", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "IHaveAnIdea", "created_utc": "1193694200", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "MarshallBanana", "created_utc": "1193694421", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "IHaveAnIdea", "created_utc": "1193698806", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "MarshallBanana", "created_utc": "1193707898", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "IHaveAnIdea", "created_utc": "1193708221", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "MarshallBanana", "created_utc": "1193708353", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193708577", "name": "t1_c02c2u0", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425023, "score": 1, "score_hidden": false, "id": "c02c2u0", "author": "IHaveAnIdea", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02c2t6", "body": "The mentioned instruction could be added to many CPUs and be executed in one clock cycle without adding significant cost to the chip.\n\nAnd I think it's safe to say that by \"one clock cycle\". the original author meant something along the lines of \"same speed as fastest meaningful instruction the cpu can execute\", but well, ah well.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02c2t6", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5zajw", "retrieved_on": 1427425023, "id": "c02c2t6", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c2sn", "body": "What could what?", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02c2sn", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425023, "score_hidden": false, "body": "Well, it could on many CPUs.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02c2rp", "id": "c02c2sn", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425023, "id": "c02c2rp", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c2rp", "parent_id": "t1_c02c1zr", "body": "What I read was this:\n\n&gt; I don't see why you couldn't have a hardware RAND instruction that did it in only one clock cycle, which would be ideal.\n\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02c1zr", "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425033, "score_hidden": false, "id": "c02c1zr", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c1kh", "body": "Well you read it as \"one clock cycle\" whereas what is relevant is whether the memory bandwidth could be saturated.\n\nI'll concede that I assumed you were referring to the later/ or that you were making this statement of all cpu architectures.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02c1kh", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425039, "score_hidden": false, "id": "c02c1kh", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c1jj", "body": "Yeah, because I'm writing a fucking scientific paper here.\n\nAbout internet crazies.\n\nLook, how about you instead tell me where the hell you found this insane statement you seem to think I have made?", "author_flair_css_class": null}], "subreddit": "programming", "ups": 0, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425039, "body": "If you could just clarify your position or back it up with some sources then this would be so much more professional.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02c1jj", "parent_id": "t1_c02c1ij", "id": "c02c1jj", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 0, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425040, "body": "You seem to be reading some kind of comments that only exist in your head, so excuse me if I don't really care all that much.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02c1ij", "parent_id": "t1_c02c1g3", "id": "c02c1ij", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02c1g3", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425041, "score_hidden": false, "id": "c02c1g3", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c1eo", "body": "hey how about you go fuck yourself and your long, incorrect comments.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425041, "id": "c02c1eo", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c1eo", "parent_id": "t1_c02bz8m", "body": "My level of interest in answering idiotic question by random loons on the internet is pretty much sitting steady at zero.", "author_flair_css_class": null}], "subreddit": "programming", "ups": -1, "name": "t1_c02bz8m", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425069, "score_hidden": false, "id": "c02bz8m", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02by00", "body": "So how about that question. What the fuck.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02by00", "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425085, "score_hidden": false, "body": "Are you retarded or something?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bw6o", "id": "c02by00", "author_flair_css_class": null}], "subreddit": "programming", "ups": -5, "name": "t1_c02bw6o", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425109, "score_hidden": false, "body": "Answer the question:\n\n&gt; You claim that parallelized hardware implementations cannot be faster than software implementations of an algorithm?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bud3", "id": "c02bw6o", "author_flair_css_class": null}], "subreddit": "programming", "ups": -4, "name": "t1_c02bud3", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425132, "score_hidden": false, "id": "c02bud3", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bu8j", "body": "&gt; Not following, at all.\n\nNot surprised, when you're apparently not capable of reading what I write.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -11, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425136, "body": "You claim that parallelized hardware implementations cannot be faster than software implementations of an algorithm?\n\nNot following, at all.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bu8j", "parent_id": "t1_c02bt3w", "id": "c02bu8j", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425042, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02c1am", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 3, "score_hidden": false, "body": "&gt; Hey, why not just ask people to make processors a hundred times faster, so his code doesn't run so slow?\r\n\r\nI've been asking for this for decades! What's so hard about simply making them faster?! ", "author": "ayrnieu", "created_utc": "1193691888", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02bt3w", "id": "c02c1am", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 22, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425149, "body": "This guy *really* doesn't understand how hardware random numbers are generated. A one-cycle instruction with a perfectly random distribution is a ridiculous thing to ask for. Hey, why not just ask people to make processors a hundred times faster, so his code doesn't run so slow?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bt3w", "parent_id": "t3_5zajw", "id": "c02bt3w", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "redditnoob", "created_utc": "1193591019", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "notfancy", "created_utc": "1193593064", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "api", "created_utc": "1193593443", "children": [{"controversiality": 0, "retrieved_on": 1427425128, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02buqa", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 3, "score_hidden": false, "id": "c02buqa", "author": "wnoise", "created_utc": "1193611518", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02btdx", "body": "Repeatability is important so that others can duplicate your work, not just for debugging.\n\n&gt; hardware acceleration instructions not for a PRNG per se but for the types of operations that PRNGs do.\n\nNow that _is_ useful.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425146, "id": "c02btdx", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02btdx", "parent_id": "t1_c02btcz", "body": " Repeatability can be achieved by using a PRNG, then you can switch to the hardware RNG once you're debugged.\n\nOr what you said... maybe in hardware you could build a very very very fast chained PRNG sequence that executed in only a few cycles and produced excellent statistical quality (much better than software can produce in a reasonable amount of time) but still repeatable random sequences.\n\nAnother possibility would be to implement hardware acceleration instructions not for a PRNG per se but for the *types of operations* that PRNGs do. That way you could greatly accelerate software PRNGs and possibly also crypto and other similar algorithms too. This would be a more general solution that would still greatly improve PRNG performance and quality.\n", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "MarshallBanana", "created_utc": "1193595688", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "spliznork", "created_utc": "1193598691", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "MarshallBanana", "created_utc": "1193598851", "children": [{"controversiality": 0, "retrieved_on": 1427425141, "subreddit_id": "t5_2fwo", "created_utc": "1193599428", "ups": 2, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 2, "id": "c02btr9", "author": "spliznork", "archived": true, "distinguished": null, "edited": true, "body": "Yeah, I was just addressing the particular point.  But more broadly, in the original article the author has trouble separating his two requirements: 1) speed, 2) true randomness.  Speed is addressable without creating a specialized machine instruction.  And, he only theorizes that true randomness will benefit various algorithms -- before extending an instruction set, the first step is to benchmark his and other algorithms against existing true random number generators. ", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02btr9", "parent_id": "t1_c02btpk", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02btpk", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5zajw", "retrieved_on": 1427425142, "body": "Time constraints and cost, I'm thinking.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02btp5", "id": "c02btpk", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "name": "t1_c02btp5", "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5zajw", "retrieved_on": 1427425142, "body": "  What's preventing the hash function from being implemented in silicon, as well?  Put that together with your quantum noise and call *that* your RAND opcode.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02btgk", "id": "c02btp5", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "wnoise", "created_utc": "1193611460", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bv9m", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425121, "score": 1, "score_hidden": false, "body": "And being time-stable on short scales is not very easy when you're bathed in periodic EM noise, like the clock signal of a microprocessor.", "author": "MarshallBanana", "created_utc": "1193618623", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02buq6", "id": "c02bv9m", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02buq6", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425128, "score_hidden": false, "body": "No, you use the same source for both bits.\nNow, there's just the problem of making it time-stable.  And the question of how useful it is vs quick pseudo-random number generation.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02btgk", "id": "c02buq6", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "notfancy", "created_utc": "1193613465", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193618677", "ups": 1, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425121, "score": 1, "score_hidden": false, "id": "c02bv9u", "author": "MarshallBanana", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02bv9u", "parent_id": "t1_c02buvn", "body": "&gt; Suppose you generate zeros with probability p\n\nThis assumption will not hold in practice.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02buvn", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5zajw", "retrieved_on": 1427425126, "id": "c02buvn", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btgk", "body": "&gt; Assuming that the distributions for the first and second bits are *exactly* the same.\n\nSuppose you generate zeros with probability *p*, and the probabilities for zeros and ones are independent. Then, the probability of a zero followed by a one is equal to that of a one followed by zero, namely *p*(1-*p*). Feed the first of a pair of generated bits to a latch, and open it with the XOR of the pair. The resulting stream is unbiased.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02btgk", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5zajw", "retrieved_on": 1427425144, "id": "c02btgk", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btcz", "body": "&gt; Yes, But the circuitry needed to ensure that each bit is an unbiased coin toss is trivial (an XOR, plus a latch).\n\nAssuming that the distributions for the first and second bits are *exactly* the same. That won't be the case in practice.\n\nWhat you *actually* want to do is feed all bits through some kind of hash function, and extract fewer bits than you use. But then your generator is no longer fast, which was the whole point of the original posting.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425146, "id": "c02btcz", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02btcz", "parent_id": "t1_c02bt6w", "body": "Yes, But the circuitry needed to ensure that each bit is an unbiased coin toss is trivial (an XOR, plus a latch). You must generate bits at a rate at most double in order to come up with enough bits after rejection.\n\nThe problem is that the sequence is not repeatable. A good cascade of LFSRs would be \"as random\" (for practical purposes) but seedable.\n\n*Edit:* I made a gross mistake. It is necessary to pump the latch *at least* at double speed. Obviously, as the bias goes to 1, the required pumping goes up to infinity.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425149, "body": "Wouldn't it be extremely hard to verify that all you get is \"quantum noise\"? I could imagine someone building this and then discovering that it produces 0.001% more 1s than 0s when the computer is heating up, or something like that.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bt6w", "parent_id": "t3_5zajw", "id": "c02bt6w", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425147, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bt84", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 3, "score_hidden": false, "id": "c02bt84", "author": "[deleted]", "created_utc": "1193591397", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t3_5zajw", "body": "This calls for LavaRand http://www.wired.com/wired/archive/11.08/random.html - good old school lavalamp random numbers. Yes I know this isn't what the guy is after, but none the less, good randomness. ", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425146, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02btax", "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 5, "score_hidden": false, "body": "Sounds more like something that should start appearing in the Chipsets of motherboards, so at least a source of one unique random number can be drawn from, before starting the psuedo-random generators. About the time I'm posting this, the number 1193592426* is being used around the world to seed their randomizers.\n\n* Number taken from http://www.unixtimestamp.com/", "author": "inmatarian", "created_utc": "1193592435", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 5, "parent_id": "t3_5zajw", "id": "c02btax", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193592766", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "eleitl", "created_utc": "1193597771", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "[deleted]", "created_utc": "1193598111", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "eleitl", "created_utc": "1193599375", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "[deleted]", "created_utc": "1193604024", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "eleitl", "created_utc": "1193608320", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 13, "author": "pabs", "created_utc": "1193610427", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": -1, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425118, "score": -1, "id": "c02bvgk", "author": "[deleted]", "created_utc": "1193620947", "distinguished": null, "edited": false, "body": "Even I'll mod you up because you're 50% right. 100% if I didn't know myself and just went off that asinine argument.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02bvgk", "parent_id": "t1_c02bung", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bung", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 13, "link_id": "t3_5zajw", "retrieved_on": 1427425130, "body": "Personally I think you're both assholes.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bui7", "id": "c02bung", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bui7", "ups": 4, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425131, "score_hidden": false, "id": "c02bui7", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bu6a", "body": "You're still comprehension-challenged. Look up ad hominem.\n\nLet me educate you: I care shit about RNGs in chipsets, which was my original point of inquiry. You claimed there was a RNG in Xeons, failed to back up your claim, grew all condescending in the bargain.\n\nSorry, if anything that's wrong with reddit it's you, not me.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bu6a", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -3, "link_id": "t3_5zajw", "retrieved_on": 1427425135, "id": "c02bu6a", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02btr1", "body": "The Intel 82845G Northbridge, a revision of the i845 chipset, has the 82802AB/82802AC Firmware Hub - on which there there is an optional RNG.\n\nYou can find the full documentation and specs from Intel at http://www.intel.com/design/chipsets/manuals/298029.htm .\n\nHere is a photo and reference links http://www.scheibli.com/papers/IntelRng/index.html \n", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425141, "id": "c02btr1", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02btr1", "parent_id": "t1_c02btn7", "body": "800 is a chipset. There are still no RNG (not even crypto primitives) in Intel CPUs.\n\nSo dude, get yer shit straight before you contribute to an otherwise clue-impaired audience. Am I bitching again that reddit has gone to shit? I guess I am.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -3, "name": "t1_c02btn7", "controversiality": 0, "archived": true, "link_id": "t3_5zajw", "retrieved_on": 1427425142, "score_hidden": false, "id": "c02btn7", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btma", "body": "Dude I even put the Google link for you to follow. It would take less time than writing your comment", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02btma", "ups": 5, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425142, "score_hidden": false, "body": "Do they now? Last time I looked there were only some select chipsets to do that. Are you absolutely, positively sure?\n\nGeode LX and Nehemiah (e.g. VIA C7) do have it, though.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02btca", "id": "c02btma", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zajw", "retrieved_on": 1427425146, "body": "Apparently this guy needs to buy a Xeon since they have hardware RNG now. \n\nhttp://www.google.ca/search?q=Intel+800-series+chips+RNG", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02btca", "parent_id": "t3_5zajw", "id": "c02btca", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02btlp", "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425142, "score": 17, "score_hidden": false, "body": "Someone else figured it out a long time ago.\n\nhttp://xkcd.com/221/", "author": "[deleted]", "created_utc": "1193597591", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 17, "parent_id": "t3_5zajw", "id": "c02btlp", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193613531", "ups": 6, "gilded": 0, "link_id": "t3_5zajw", "retrieved_on": 1427425126, "score": 6, "body": "[deleted]", "id": "c02buvu", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "name": "t1_c02buvu", "parent_id": "t3_5zajw", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425115, "subreddit_id": "t5_2fwo", "created_utc": "1193623910", "ups": 2, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 2, "body": "I want to see the benchmarks which demonstrate that his code gets stuck in local optima worse with the low-quality RNGs.  It sounds like wishful thinking to me.  ", "id": "c02bvow", "author": "throwaway", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02bvow", "parent_id": "t3_5zajw", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425111, "subreddit_id": "t5_2fwo", "created_utc": "1193628472", "ups": 1, "gilded": 0, "link_id": "t3_5zajw", "downs": 0, "score": 1, "id": "c02bw11", "author": "speciousfool", "archived": true, "distinguished": null, "edited": false, "body": "Really, I'd take any working alternative to the dreaded \"not enough random bytes available\" dialog:\n\nhttp://bentham.k2.t.u-tokyo.ac.jp/notebook/?p=241", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bw11", "parent_id": "t3_5zajw", "score_hidden": false, "author_flair_css_class": null}