{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "cowardlydragon", "created_utc": "1193156705", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "NastyConde", "created_utc": "1193157306", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "9jack9", "created_utc": "1193164060", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "newton_dave", "created_utc": "1193183825", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "9jack9", "created_utc": "1193202373", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "newton_dave", "created_utc": "1193226361", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "9jack9", "created_utc": "1193230871", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "newton_dave", "created_utc": "1193232417", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "9jack9", "created_utc": "1193233714", "children": [{"controversiality": 0, "retrieved_on": 1427425584, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "id": "c02b10f", "author": "newton_dave", "created_utc": "1193234629", "distinguished": null, "edited": false, "body": "I do, and I am suspicious of anybody that thinks otherwise.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02b10f", "parent_id": "t1_c02b0x1", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02b0x1", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425585, "score_hidden": false, "body": "If you say so.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b0r4", "id": "c02b0x1", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02b0r4", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 0, "link_id": "t3_5yxf3", "retrieved_on": 1427425587, "body": "Re-formatting doesn't change anything. Well, I mean, except the format.\n\nYou said the code was mostly the same except for method name length, I said that didn't make any sense, since the counter-example used completely different ways of accomplishing the same result. The counter-example used three methods, the original one. They're pretty different, these two chunks of code.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b0mi", "id": "c02b0r4", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425589, "body": "&gt; Structurally it's rather different.\n\nThe two code samples are very similar especially when compared with the native DOM methods. How about if I reorganise the code?\n\n    new Element('div',{'class':'button',\n      events:{click:doSomething}})\n    .injectInside('someElementId');", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02b0mi", "parent_id": "t1_c02b0cg", "id": "c02b0mi", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02b0cg", "controversiality": 0, "author_flair_text": null, "ups": 0, "link_id": "t3_5yxf3", "retrieved_on": 1427425592, "body": "      new Element('div', {\n      'class': 'button',\n      'events': {\n        'click': doSomething\n      }\n    }).injectInside('some_elemet_id');\n\nvs.\n\n    $('&lt;div class=\"button\"&gt;')\n      .appendTo('#someElementId')\n      .click(doSomething);\n\nthis code? I guess I don't see the method name length changing much. Structurally it's rather different.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02azal", "id": "c02b0cg", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02azal", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yxf3", "retrieved_on": 1427425607, "id": "c02azal", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02awxh", "body": "&gt; Which code are you talking about?\n\nThe code that NastyConde posted in a previous thread.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 0, "name": "t1_c02awxh", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425637, "score_hidden": false, "body": "What? The first example only used one method (injectInside), the counter-example used two different ones, a different way to create the injected object, etc.\n\nWhich code are you talking about?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aukz", "id": "c02awxh", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02aukz", "controversiality": 0, "archived": true, "link_id": "t3_5yxf3", "retrieved_on": 1427425667, "score_hidden": false, "id": "c02aukz", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ato8", "body": "&gt; Notice that the jQuery example I posted takes less code to do the same thing.\n\nThe jQuery code you posted is almost identical to the original code. The difference being mainly the length of the method names.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ato8", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 9, "link_id": "t3_5yxf3", "retrieved_on": 1427425679, "body": "The verbosity of the framework (and the skill of the programmer) determines the number of lines of code required to get the job done. Notice that the jQuery example I posted takes less code to do the same thing.\n\nPlus, the goal of Unobtrusive Javascript isn't shorter pages, it's more usable pages. The HTML should provide the content and the Javascript/CSS should enhance the look and usability. Wherever possible, though, the page should be usable without the Javascript.\n\nTarget stores just lost a court case over the accessibility of their web site. If that holds up, I think you'll be hearing a lot more about UOJS and progressive enhancement.\n", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02atlm", "id": "c02ato8", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02auu5", "gilded": 0, "link_id": "t3_5yxf3", "retrieved_on": 1427425664, "score": 5, "body": " The \"25\" lines of code includes two separate methods of doing it and a definition for `doSomething`. The important part is:\n\n    window.addEvent('load', function(){\n      $$('.linkClass', '#linkID').addEvent('click', doSomething);\n    }) ", "author": "bct", "created_utc": "1193165746", "distinguished": null, "edited": true, "id": "c02auu5", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 5, "parent_id": "t1_c02atlm", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02atlm", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -3, "link_id": "t3_5yxf3", "retrieved_on": 1427425680, "body": "Okay. \n\nHis link example is self-defeating:\n\nHey! Don't use one line of code! Use 25! See how much better that is?\n\nUm, no. \n\nIf that represents any degree of desired degradation on the part of the W3C, they have fucked up beyond all recognition. ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yxf3", "id": "c02atlm", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "NastyConde", "created_utc": "1193156848", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "9jack9", "created_utc": "1193163311", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193175809", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "9jack9", "created_utc": "1193246891", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193248464", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "9jack9", "created_utc": "1193249112", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193275462", "children": [{"controversiality": 0, "retrieved_on": 1427425521, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "body": "Memory leaks are reported fixed in IE7. Are you sure about your testing?\n\nEDIT: I'm going to contact Microsoft to confirm/deny this leak pattern.", "author": "9jack9", "created_utc": "1193275923", "distinguished": null, "edited": true, "id": "c02b5u2", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02b5u2", "parent_id": "t1_c02b5sb", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02b5sb", "controversiality": 0, "archived": true, "link_id": "t3_5yxf3", "retrieved_on": 1427425522, "score_hidden": false, "id": "c02b5sb", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02b2rt", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02b2rt", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yxf3", "retrieved_on": 1427425561, "body": "This is talking about the case where you create an element with an event handler attached using  an IE specific notation:\n\n    document.createElement(\"&lt;div onClick='foo()'&gt;\");\n\nThis is not the same as doing this:\n\n    document.createElement(\"div\");\n    document.onclick = foo;\n\nI downvoted you because you are spreading misinformation. In fairness, the MSDN documentation is not very clear.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b2p2", "id": "c02b2rt", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02b2p2", "controversiality": 0, "archived": true, "link_id": "t3_5yxf3", "retrieved_on": 1427425562, "score_hidden": false, "id": "c02b2p2", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02b2ga", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02b2ga", "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yxf3", "retrieved_on": 1427425565, "body": " Can you point out the particular reference? I can't see where it says not to attach event handlers before DOM insertion.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aw4h", "id": "c02b2ga", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aw4h", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5yxf3", "retrieved_on": 1427425647, "id": "c02aw4h", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02auh8", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02auh8", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -2, "link_id": "t3_5yxf3", "retrieved_on": 1427425669, "id": "c02auh8", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02atm6", "body": "Please explain how the original code will cause a memory leak.\n\n&gt; you shouldn't attach an event handler before putting the element in the DOM\n\nNonsense.", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "jonknee", "created_utc": "1193163340", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "9jack9", "created_utc": "1193164240", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "eurleif", "created_utc": "1193172542", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193180911", "ups": 1, "gilded": 0, "link_id": "t3_5yxf3", "retrieved_on": 1427425640, "score": 1, "body": "I don't see it being an issue. jQuery is not going to attach a new node to your document unless you explicitly call an append function. Even `append` wouldn't do it. You'd have to call `appendTo` so it knows where to attach it.", "id": "c02awoa", "author": "joshd", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02awoa", "parent_id": "t1_c02avsv", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425653, "body": "That sounds a bit dangerous. Isn't it possible to have it treat what you intended to be a selector as an HTML fragment, or vice-versa?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02avsv", "parent_id": "t1_c02aulx", "id": "c02avsv", "author_flair_css_class": null}], "subreddit": "programming", "ups": 6, "name": "t1_c02aulx", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425667, "score_hidden": false, "body": "&gt; I'd like to know why you used &lt;div class=\"button\"&gt; as the selector instead of just .button?\n\nIf jQuery recognises the string passed to it as an HTML fragment instead of a CSS selector then it will create an element based on that fragment.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02auhc", "id": "c02aulx", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425572, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02b1wy", "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "score_hidden": false, "id": "c02b1wy", "author": "crescentfresh", "created_utc": "1193242499", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02auhc", "body": "The jQuery magic function `$` branches off to about 13 different code paths depending on what you pass to it. Want to create a div element with class=\"button\"? Pass `'&lt;div class=\"button\"&gt;'`. Want to fetch div(s) with class=\"button\"? Pass `'div.button'`. \n\nThe code paths are related only by the fact that they all have something to do with the DOM in one way or another. Brilliant, isn't it? Good thing the documentation is stellar.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxf3", "retrieved_on": 1427425669, "body": "I have been doing a lot of jQuery lately and have *really* enjoyed it. The project I'm working on now doesn't need to be accessible (it's a video player for tutorials in Photoshop--you really need to see and hear to be able to follow along), but it's not difficult in most circumstances. \n\nI'm still new with jQuery, so I'd like to know why you used &lt;div class=\"button\"&gt; as the selector instead of just .button?\n", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02auhc", "parent_id": "t1_c02atm6", "id": "c02auhc", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425658, "subreddit_id": "t5_2fwo", "archived": true, "ups": 5, "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 5, "body": " Yeah, I was surprised the guy wasn't using JQuery in the article. It makes \"unobtrusive javascript\" way less painless. ", "author": "mcantelon", "created_utc": "1193168627", "distinguished": null, "edited": true, "id": "c02av9c", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02av9c", "parent_id": "t1_c02atm6", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02atm6", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 12, "link_id": "t3_5yxf3", "retrieved_on": 1427425680, "body": " From the article:\n\n    new Element('div', {\n      'class': 'button',\n      'events': {\n        'click': doSomething\n      }\n    }).injectInside('some_elemet_id');\n\nIn IE this will cause a [memory leak](http://msdn2.microsoft.com/en-us/library/Bb250448.aspx); you shouldn't attach an event handler before putting the element in the DOM. Here's how I would do that in jQuery:\n\n    $('&lt;div class=\"button\"&gt;')\n      .appendTo('#someElementId')\n      .click(doSomething);\n ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5yxf3", "id": "c02atm6", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "paternoster", "created_utc": "1193157529", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 2, "gilded": 0, "link_id": "t3_5yxf3", "retrieved_on": 1427425662, "score": 2, "id": "c02auyh", "author": "feces", "created_utc": "1193166506", "distinguished": null, "edited": false, "body": "That's how I always do it. This article makes stuff much too complicated.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02auyh", "parent_id": "t1_c02atpb", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425410, "subreddit_id": "t5_2fwo", "author_flair_text": null, "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "score_hidden": false, "body": " OK, now say you want to attach that behaviour to every link on your page. Why attach x number of onclick attributes when you can do it with one line of javascript (using something like jquery anyway)?\n\nLet's go back to writing inline CSS whilst we are at it. Far less complicated...", "author": "lukeredpath", "created_utc": "1193321613", "distinguished": null, "edited": true, "archived": true, "id": "c02b8wh", "subreddit": "programming", "ups": 1, "parent_id": "t1_c02atpb", "name": "t1_c02b8wh", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02atpb", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 6, "link_id": "t3_5yxf3", "retrieved_on": 1427425678, "body": "Yeah, whoa! \n\nLinking is better done like this, which *does* degrade nicely:\n\n&lt;a href=\"foo.bar\" onclick=\"function(this.href); return false\"&gt;this is my link&lt;/a&gt;", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yxf3", "id": "c02atpb", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425651, "subreddit_id": "t5_2fwo", "created_utc": "1193173028", "name": "t1_c02avv6", "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t3_5yxf3", "id": "c02avv6", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425423, "subreddit_id": "t5_2fwo", "created_utc": "1193310781", "ups": 1, "gilded": 0, "link_id": "t3_5yxf3", "downs": 0, "score": 1, "id": "c02b7xx", "author": "bart2019", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "score_hidden": false, "name": "t1_c02b7xx", "parent_id": "t3_5yxf3", "body": "  That's not \"unobstrusive\", that's \"non-portable\". the `addEvent` method only works in MSIE. In Firefox you have to use `addEventListener`, which requires a different syntax. Events are among the most non-portable things between browsers. I prefer to stay away from it as much as I can.\n\nBeside, I totally agree with one of the commenters, bobq, who calls the code \"close to unreadable\".  ", "author_flair_css_class": null}