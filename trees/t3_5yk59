{"controversiality": 0, "retrieved_on": 1427426134, "subreddit_id": "t5_2fwo", "created_utc": "1192709686", "ups": 6, "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": 6, "id": "c029uik", "author": "boredzo", "archived": true, "distinguished": null, "edited": false, "body": "&gt; (But you shouldn\u2019t use images for simple graphics like curves or gradients anyway; there are Cocoa drawing routines for that and NSBezierPath is your friend)\n\nBetter yet, use PDF files. A pure-vector PDF graphic is cheap to load in Mac OS X, and they're easy to make, [especially if you know PostScript](http://boredzo.org/blog/archives/2006-12-06/compiling-eps-files-to-pdf-files-using-xcode).\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029uik", "parent_id": "t3_5yk59", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "sickofthisshit", "created_utc": "1192709757", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "boredzo", "created_utc": "1192710742", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029yj6", "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426082, "score": 2, "body": "Building the same version of your application with debug symbols isn't guaranteed to put any functions at the same addresses.  The best approach is to build your release application with symbols enabled, archive the binaries containing symbols for future use, and then strip the binaries that will be shipped.  This process is made even simpler by the introduction of \"DWARF with dSYM\" debugging format in recent versions of Xcode, as the debugging symbols are stored separately from the binary itself.", "id": "c029yj6", "author": "bdash", "created_utc": "1192743565", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029uky", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5yk59", "retrieved_on": 1427426134, "id": "c029uky", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c029uky", "parent_id": "t1_c029uiq", "body": "You don't need to ship the debugging symbols to get a usable stack trace. When you get the crash log (without debug symbols) from the user, build the same version of your app with debug symbols, run it, note the PID, and then do something like this:\n\n\tatos -p $PID 0x0926ad37 0x0370f3f0 0x000c658f\n\nThe hex numbers are memory addresses from the stack trace.\n\natos translates each **a**ddress into a **s**ymbol\u2014a function name or method selector and a line number. For example:\n\n\t-[AIMessageEntryTextView concludeDragOperation:] (in Adium) (AIMessageEntryTextView.m:999)\n\t-[AIMessageEntryTextView menuForEvent:] (in Adium) (AIMessageEntryTextView.m:914)\n\t-[AIMessageEntryTextView menuForEvent:] (in Adium) (AIMessageEntryTextView.m:934)\n  ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029uiq", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 5, "link_id": "t3_5yk59", "retrieved_on": 1427426134, "body": "Yeah, god forbid you ship an app with debugging symbols. Someone might be able figure out where a crash happened! Or a universal binary---even the newest Windows-grandmother convert to MacOS understands how to choose between PPC and Intel downloads.\n\nThis is for (hopefully savvy) end users who want to remove extraneous bytes from the disk.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yk59", "id": "c029uiq", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "[deleted]", "created_utc": "1192714687", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "jasonhong", "created_utc": "1192715374", "children": [{"controversiality": 0, "retrieved_on": 1427426090, "subreddit_id": "t5_2fwo", "created_utc": "1192738490", "ups": 1, "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": 1, "id": "c029xxm", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029xxm", "parent_id": "t1_c029uyq", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -2, "name": "t1_c029uyq", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yk59", "retrieved_on": 1427426129, "score_hidden": false, "body": "This is a really great comment", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029uwc", "id": "c029uyq", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "codepoet", "created_utc": "1192734162", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "bdash", "created_utc": "1192743415", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426070, "score": 3, "created_utc": "1192753566", "body": "Yes and no.  Some apps can hide themselves from the Dock by changing their Info.plist, and others, like Adium, can change their own icon.  Others register themselves in the application itself so that it can go on disks and such (PodWorks comes to mind).\n\nIt's non-standard, and should have checks incase it fails, but there are uses for it that don't qualify as broken.", "author": "codepoet", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c029zgn", "subreddit_id": "t5_2fwo", "name": "t1_c029zgn", "parent_id": "t1_c029yip", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029yip", "controversiality": 0, "archived": true, "link_id": "t3_5yk59", "retrieved_on": 1427426083, "score_hidden": false, "id": "c029yip", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029xc9", "body": "If an application expects to be able to write to its own bundle then it's already broken.  Not every user of your application will be the administrator on their computer.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029xc9", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yk59", "retrieved_on": 1427426098, "body": "I actually think the disk image is the worst possible format for shipping an application.  You've wrapped the program in another file format that does nothing more than bundle everything together in a fake disk.  That's wasteful.  Combine that with the common developer's desire to include another 500K of background artwork and you're on the way to bloat.\n\nThen there's the issue of writability.  A lot of people open programs right off the disk image to test them.  That leads to errors in some programs that want to write to themselves or setup some form of automatic launching (which they cannot since the disk will not always be available).  It's a technical hurdle that requires code to solve, which is wasted time.\n\nWhat I do with Notae is very simple: I zip it up in the Finder and post the zip file.  When you download it, it unarchives into the program itself and you're done.  Everything you need is inside the application and you can install it wherever you want (or leave it in your downloads folder, whatever).\n\nSo, I'd say use a simple compression format if you can (zip, or tgz, or whatever the Finder can undo) or use an Installer package if you must.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029uwc", "id": "c029xc9", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 9, "name": "t1_c029uwc", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yk59", "retrieved_on": 1427426130, "score_hidden": false, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5yk59", "id": "c029uwc", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "oq2", "created_utc": "1192714700", "children": [{"controversiality": 0, "retrieved_on": 1427426109, "subreddit_id": "t5_2fwo", "created_utc": "1192728125", "name": "t1_c029wha", "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": 2, "score_hidden": false, "id": "c029wha", "author": "ot2", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029uwf", "body": "http://biolpc22.york.ac.uk/pub/linux-mac-cross/", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c029uwf", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yk59", "retrieved_on": 1427426129, "score_hidden": false, "body": "Is there an easy way to cross compile from a GNU/Linux based system, to target MacOSX universal binaries? There are a set of simple one-page OpenGL demos by Christophe Devine that would be ideal to base a sample off of.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yk59", "id": "c029uwf", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "jonknee", "created_utc": "1192715128", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "[deleted]", "created_utc": "1192723397", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029wbq", "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426111, "score": 2, "body": "If you're not downloading over a dial up modem the difference will only be a few seconds. Download time doesn't even enter my mind when I'm thinking about downloading new software.", "author": "jonknee", "created_utc": "1192726731", "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029vx0", "score_hidden": false, "id": "c029wbq"}], "subreddit_id": "t5_2fwo", "ups": 4, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5yk59", "retrieved_on": 1427426117, "id": "c029vx0", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029vx0", "parent_id": "t1_c029uxw", "body": "More importantly than saving hard drive space, it\u2019s also about speeding up downloads.\n\nBut it\u2019s a trade-off \u2014 I agree that in most cases providing a universal binary is better than halving download times.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192734331", "ups": 1, "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426097, "score": 1, "id": "c029xdf", "author": "codepoet", "archived": true, "distinguished": null, "edited": false, "body": "Universal binaries are a must, but there's a lot of other things in the shipped products that should be tuned for size as well.  Drives are getting bigger, yes, but data shouldn't go with it.\n\nIt will very soon be like processor speeds.  Things get faster, so developers get sloppier and do more things with brute force because they can.  In the end, any gains in technology are lost in normal use.  It's silly.\n\nWe need more people paying attention to code style and disk size so that our really powerful computers will actually be really powerful and not be drowning in bad software design.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029xdf", "parent_id": "t1_c029uxw", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yk59", "retrieved_on": 1427426129, "body": "Hard drive space is cheap, the number of apps an average user downloads is fairly low. Things like Universal binaries put user experience over more free disk space and I think that's fine.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029uxw", "parent_id": "t3_5yk59", "id": "c029uxw", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426128, "subreddit_id": "t5_2fwo", "created_utc": "1192716397", "ups": -12, "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": -12, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c029v2a", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029v2a", "parent_id": "t3_5yk59", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426128, "subreddit_id": "t5_2fwo", "created_utc": "1192716445", "ups": -13, "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": -13, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c029v2c", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029v2c", "parent_id": "t3_5yk59", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -3, "author": "niwde", "created_utc": "1192727034", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "niwde", "created_utc": "1192731709", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426097, "score": 1, "body": "Not at all.  You simply make a bad comparison.  It's the choice of the developers to make sloppy code, not the platform.", "author": "codepoet", "created_utc": "1192734475", "distinguished": null, "edited": false, "id": "c029xe5", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029xe5", "parent_id": "t1_c029wz7", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192735673", "ups": 1, "gilded": 0, "link_id": "t3_5yk59", "retrieved_on": 1427426096, "score": 1, "score_hidden": false, "id": "c029xjg", "author": "dsandler", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029xjg", "parent_id": "t1_c029wz7", "body": "Well, maybe not all of reddit, but redditors who click through to read Mac stories. Know your audience (subset).\n\n(Disclaimer: I do not approve of \u2b07ing comments you disagree with; I'm merely recognizing that others do.)", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -2, "controversiality": 0, "archived": true, "link_id": "t3_5yk59", "retrieved_on": 1427426103, "id": "c029wz7", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029wz7", "parent_id": "t1_c029wcu", "body": "Hm I guess reddit = OSX fanbase?", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426101, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029x29", "gilded": 0, "link_id": "t3_5yk59", "downs": 0, "score": 1, "score_hidden": false, "body": " &gt; If Mac OSX UI is so neat, user-friendly and good, why do we need another File explorer (Path Finder)?\n\nBecause some people prefer it and are willing to pay money for that UI. I mean, you might as well ask why Mac OS X needs a GUI at all given that it has a command line...\n\n&gt;If Mac OSX is a superior software/platform (and the devs are great), why do we need a tool to clean up mess (AppZaper)?\n\nYou don't actually need AppZapper. If a few apps leave things lying around after you uninstall them, it wastes a tiny amount of disk space and doesn't hurt anything. I don't actually uninstall anything to begin with -- why bother? It doesn't hurt anything having it there and the disk space is worth less than the time it'd take me to remove it.\n\n&gt;If OSX is so slim and cool, why are these apps become so much bloated?\n\nMac OS X doesn't exactly have a reputation for being \"slim and cool\" (whatever that's supposed to mean), but even if it did, third-party apps are not made by Apple, hence the term \"third-party apps.\" It's not as though developing for the Mac magically makes programmers perfect. Many Mac developers are small companies (often one person) whose testing philosophy boils down to \"it runs on my Mac, ship it.\" Same as on Windows, really. ", "author": "kindall", "created_utc": "1192732344", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029wcu", "id": "c029x29", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029wcu", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -3, "link_id": "t3_5yk59", "retrieved_on": 1427426111, "id": "c029wcu", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yk59", "body": "It's weird to see those apps (AppZaper, Xtrimmer, Path Finder). Those apps remind me of .... Microsoft Windows. \n\nIf Mac OSX UI is so neat, user-friendly and good, why do we need another File explorer (Path Finder)?\n\nIf Mac OSX is a superior software/platform (and the devs are great), why do we need a tool to clean up mess (AppZaper)?\n\nIf OSX is so slim and cool, why are these apps become so much bloated?", "author_flair_css_class": null}