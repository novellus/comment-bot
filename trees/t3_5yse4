{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02aeh0", "gilded": 0, "link_id": "t3_5yse4", "retrieved_on": 1427425877, "score": 1, "score_hidden": false, "id": "c02aeh0", "author": "grauenwolf", "created_utc": "1192981873", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5yse4", "body": "I wonder how many people will buy into this crap only to get burned later.", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425870, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yse4", "downs": 0, "score": 1, "body": "Use IKVM", "author": "bitwize", "created_utc": "1192987316", "distinguished": null, "edited": false, "id": "c02aevv", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02aevv", "parent_id": "t3_5yse4", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425866, "subreddit_id": "t5_2fwo", "created_utc": "1192992214", "ups": 1, "gilded": 0, "link_id": "t3_5yse4", "downs": 0, "score": 1, "body": "prending? They never showed me how to do that in OO class.", "author": "sjf", "archived": true, "distinguished": null, "edited": false, "id": "c02af8p", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02af8p", "parent_id": "t3_5yse4", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Arrgh", "created_utc": "1193021057", "children": [{"controversiality": 0, "retrieved_on": 1427425835, "subreddit_id": "t5_2fwo", "created_utc": "1193021429", "score": 1, "link_id": "t3_5yse4", "downs": 0, "name": "t1_c02ahlt", "score_hidden": false, "body": "Also, as with all declarative application generation/instantiation frameworks, I'm certain that NakedObjects presents us with a characteristically shaped effort/time curve.  Namely, it's smooth sailing for the first little while, as the framework is solving the problems it was designed to solve.  In some projects this constitutes a very large fraction of the problems you'll run into and it turns out you're a good candidate for the framework.  \n\nHowever, in all the declarative systems I've seen, you reach a point after which the effort/time curve \"goes hockeystick.\"  Namely, you start to spend a lot more time fighting the framework than delivering real functionality.\n\nWith traditional imperative approaches, the slope of the effort/time curve is pretty much constant over time.  We're putting in a lot of effort, but the stuff is getting done.\n\nThe real question is where (and when) the  curves intersect.  Maybe it's worth two months of fighting the declarative framework if you can ship the whole thing six months early.", "author": "Arrgh", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02ahkv", "id": "c02ahlt", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02ahkv", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yse4", "retrieved_on": 1427425836, "score_hidden": false, "id": "c02ahkv", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yse4", "body": "This is an amazingly misleading headline.  The point of the framework described in the article (NakedObjects) is that your domain models can express sufficient declarative information to allow the automatic generation of a usable user interface and persistence layer.  \n\nAny purported ability to *present* the same models uniformly on different platforms flows naturally from the simplicity of the artifacts that feed into the process.  Any OO language that provides constructors,  properties, collections/arrays (and preferably data types) should suffice.", "author_flair_css_class": null}