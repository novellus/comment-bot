{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "masklinn", "created_utc": "1192571138", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "llimllib", "created_utc": "1192572232", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "shit", "created_utc": "1192572761", "children": [{"controversiality": 0, "retrieved_on": 1427426263, "subreddit_id": "t5_2fwo", "created_utc": "1192576169", "ups": 7, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 7, "body": "&gt; an intelligent live form\n\nLife-form.\n\nJust saying.", "author": "Tommahhh", "archived": true, "distinguished": null, "edited": false, "id": "c029klo", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029klo", "parent_id": "t1_c029kc5", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 7, "name": "t1_c029kc5", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426267, "score_hidden": false, "id": "c029kc5", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029kal", "body": "Please:\n\n&gt; Most 80% coders find TortoiseSVN full of new, challenging concepts like \u201cupdate\u201d and \u201ccommit\u201d. They often struggle to use version control at all; are you now going to teach them the difference between \u201cpull\u201d and \u201cupdate\u201d, between \u201ccommit\u201d and \u201cpush\u201d? \n\nI thought programmers are an _intelligent_ live form.", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 21, "author": "masklinn", "created_utc": "1192573952", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "llimllib", "created_utc": "1192585936", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "masklinn", "created_utc": "1192602636", "children": [{"controversiality": 0, "retrieved_on": 1427426229, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029n8s", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 1, "score_hidden": false, "id": "c029n8s", "author": "llimllib", "created_utc": "1192623606", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029mdo", "body": "&gt; I was only expanding and clarifying on the points of TFA I consider to be pure fud (pretty much all of them).\n\nThat was fair enough, I agreed with you on much of that, and I really appreciated the thoroughness of your response.", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "surajbarkale", "created_utc": "1192630533", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029ntw", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426222, "score": 1, "score_hidden": false, "id": "c029ntw", "author": "masklinn", "created_utc": "1192631545", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029nqc", "body": "&gt; Or you could send a patch to him to apply on a freshly checked out copy.\n\nYes, but that implies one more transfer medium, mail or IM (and IMs often bork whitespace). simple sharing is faster and easier, and less work for everybody.", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426204, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029p6h", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 1, "score_hidden": false, "body": "&gt; Or you could send a patch to him to apply on a freshly checked out copy.\n\nMaking a freshly checked out copy isn't always as easy as it sounds.  It's a pain in perforce.  It's also a pain if you have a workflow that involves a specific directory (happens a lot in eclipse).  If you combine the two, it's just not workable.\n\nWith mercurial, I can typically dump my current work (using mq, or just commit it if it isn't offensive), jump to a different revision, apply a changeset from someone else and play with it some.  When I'm done, I can go back to where I was.", "author": "dlsspy", "created_utc": "1192642401", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029nqc", "id": "c029p6h", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029nqc", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426222, "score_hidden": false, "id": "c029nqc", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c029mdo", "body": "  &gt; With a DVCS, I could just temporarily share my local repository -- which is pretty much trivial (a simple hg serve is enough when using Mercurial, for example), he'd pull from me (either into his main repo, or he'd clone to another repository just in case or if he's working on something else),   \n\n\nOr you could send a patch to him to apply on a freshly checked out copy. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029mdo", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 9, "link_id": "t3_5yg46", "retrieved_on": 1427426240, "body": " &gt; That said, I'm very happy with subversion, and I have no plans to move to a DVCS for my office setup.\n\nI never said DVCS were the end of it all (and they're definitely not, in the real world DVCS aren't a strict superset of CVCS have a few drawbacks compared to CVCS, especially a one that is huge in some environments and wasn't even mentioned in TFA) even though I do consider them superior to CVCS in an overwhelming majority of situations.\n\nI was only expanding and clarifying on the points of TFA I consider to be pure fud (pretty much all of them).\n\n&gt; What I'd like you to do is explain to me what my office of 5 people, all of whom work in the office, in 2 rooms right next to each other, would gain by switching to a DVCS\n\nIn that case, in my opinion (remember that I'm not an SCM guru), mostly the ability to fetch each other's tree/commits without having to go through a potential trunk-breaking commit to main.\n\nFor example, at the moment I work with a colleague which knows the codebase much better than I (and works on the part of the codebase that I hook into). Sometimes I hit a bug or a bizarre behavior that doesn't seem to come from my code, and which I don't manage to trace back to the root source. The aforementioned colleague has his own environment (as in, a different one than mine) with several tools he uses and I don't (and I use both Windows and OSX, he's a quite hardcore linux fanatic, I'm an emacs guy he only uses vi, ...). Our desks are around 3 meters from each other.\n\nRight now (the office uses SVN), either he has to come to my desk and waste time with an unfamiliar environment he doesn't like and that lacks the tools he wants/needs (plus I ask him to come while I'm the one asking for a favor) or I have to commit broken/buggy features/changes to the trunk so he can update his WC and try to find what I missed.\n\nWith a DVCS, I could just temporarily share my local repository -- which is pretty much trivial (a simple `hg serve` is enough when using Mercurial, for example), he'd pull from me (either into his main repo, or he'd clone to another repository just in case or if he's working on something else), work on his own machine in a familiar environment, and then push back to my machine (or I could pull from him).\n ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029la0", "id": "c029mdo", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426237, "subreddit_id": "t5_2fwo", "created_utc": "1192608010", "ups": 4, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 4, "id": "c029mno", "author": "dlsspy", "archived": true, "distinguished": null, "edited": false, "body": "&gt; What I'd like you to do is explain to me what my office of 5 people, all of whom work in the office, in 2 rooms right next to each other, would gain by switching to a DVCS (assuming tool support wasn't even a problem).\n\nAnother concrete example of this:\n\nI was in a group of five people, and two of us were working on a major refactoring.  With a distributed system, I could start moving some of the code, leaving it in a broken, but divided state, and commit that.  He could pick that up and we could each work on half of the broken, but divided state.\n\nWe were using perforce, though.  Our perforce administrator really doesn't like branches to be created except for official tasks *and* it's actually rather a hassle for me (and my coworker) to have the working directory be changed just because I'm doing some different work (welcome to java in eclipse with about ten subprojects).\n\nSo, instead of just committing some and starting to work, I kept working until I had enough done that I thought it could work on its own and committed all of it.  That basically meant that I did almost the entire task.\n\nI actually *did* share my mercurial clone of the tree to provide a patch to someone who wanted to try something really experimental one day, though.  On his side, that involved downloading the top patch and doing all kinds of p4 junk on is side, but for me, it was just an ``hg qrefresh ; hg serve''  :)", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mno", "parent_id": "t1_c029la0", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192609289", "ups": 5, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426237, "score": 5, "id": "c029mpv", "author": "trickos", "archived": true, "distinguished": null, "edited": false, "body": "&gt; What I'd like you to do is explain to me what my office of 5 people, all of whom work in the office, in 2 rooms right next to each other, would gain by switching to a DVCS (assuming tool support wasn't even a problem).\n\nThey are not exclusive. Most people using DVCS these days work on top of another centralized system. By allowing, local/private and usually cheap branching or revision history manipulation (like Mercurial MQ extension), it buys you a step between a single in-progress working directory and a irremediably published changeset. What you quickly learn from code reviews is a feature equals many revisions. With most VCS forcing you to commit *and publish* your working directory at the same time, like SVN does, you have a choice:\n- The classic monster commit. The feature is implemented in one single revision. Refactoring are merged with file renames, with code moves and code style fixes. This is useless and your VCS is a mere backup system. But this is the usual practice.\n- Think very hard about the feature, split it mentally then execute your carefully thought plan. The resulting revision set is usable for review/history mining/debugging. But this is made awfully hard by the fact you have to commit every step right after implementing it. There is no room for mistake. Sure you can fix errors by adding additional revisions but they are just noise in the code history and reduce its usability.\n\nDVCS makes the latter easier by allowing you to craft the revision set without publishing it at once. Suppose that while refactoring you unearth a bug, just keep the refactoring for later, revert all changes and fix the bug first. And even add a test *in a separate revision* to ease cherry-picking with another stable branch.\n\nWhy is history tailoring important ? Because the *risk* brought by a feature is often related to the size of the largest patch on the path from the current codebase to the implemented feature. A good way to make people aware of this is to make them do code reviews.\n\nThis is for daily use.\n\nNow, DVCS bring other features because their nature made them a requirement and also because someone eventually figured they may be first-class development tools rather than subparts of a release system (the following will emphasize mercurial which I know well, but other systems have similar features):\n- I find revision browsing tools much better in DVCS. We use svn as our main VCS but I always export project in Mercurial for reviews, I cannot stand TortoiseSVN to do that. In a way, it helps disclosing obfuscated revisions histories, like sourceforce CVS-base projects. And code history tells a lot more than a single revision snapshot.\n- Revision history mining tools are more powerful. Check mercurial \"log\" or \"grep\" commands for revision filtering and output templating. Having a CLI here makes sense because you can tailor the command output and extends your tools via scripting.\n- Bisecting tools: perform a binary search on a revision range to pinpoint the source of a bug. You can do that with any tool supporting project wide revisions, I just never saw an appealing way to do that with SVN.\n- Cherry picking of revisions\n- Cherry picking of commit hunks (could be done better with a properly configured vim but it's good to have off the shelf support for this)\n- Working offline\n\nDVCS are far from perfect and may not fit all corporate environments or policies. But they do not have to, and still can make you change your way of programming, or at least think again on what VCS are really about. Which is good enough for me.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029mpv", "parent_id": "t1_c029la0", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029la0", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 9, "link_id": "t3_5yg46", "retrieved_on": 1427426254, "body": "So! I maintain my company's svn install. We're a mostly windows, c#/python/perl shop. I am certainly no svn partisan; the things I really want from DVCSs, in order, are:\n\n1. easy branch and merge. svn branch/merge sucks.\n2. offline commits\n3. cherry picking commits\n\nThat said, I'm very happy with subversion, and I have no plans to move to a DVCS for my office setup. The reasons are twofold:\n\n1. AnkhSVN/TortoiseSVN are indispensable to me. Without Visual Studio integration, a source control system won't fly at my office.\n2. Our model is centralized, and we would gain very little from a decentralized setup. This seems to be a point you disagree with me on; I'm addicted to my \"ball of mud\" and us developers all \"fire and forget\".\n\nWhat I'd like you to do is explain to me what my office of 5 people, all of whom work in the office, in 2 rooms right next to each other, would gain by switching to a DVCS (assuming tool support wasn't even a problem).", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029kf8", "id": "c029la0", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 21, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426265, "body": "&gt; it also encourages anti-social behavior.\n\n&gt; [...]\n\n&gt; In a nutshell: with a centralized system, people are forced to collaborate and review each other\u2019s work; in a decentralized system, the default behavior is for each developer to privately fork the project.\n\nYeah, right, except that's of course not the case, doing that is the same as having your little patchset of your own, which you can do just as easily with a CVCS. And as far as being forced to collaborate with a CVCS, I've seen enough *fire and forget* to know that it's definitely not the case.\n\nNot to mention, of course, that DVCS allows and encourages sharing of changes between developers (privately or through public repositories) without having to go through the main repo (because your developments are unstable for example, or because two subsystems both in unstable states need to collaborate with one another). These are both highly social behaviors encouraged by DVCS and downright impossible with CVCS.\n\n&gt; The default action is to fork, not to collaborate!\n\nThe default action is *always* to fork, the difference is that a CVCS forces you to \"collaborate\" (or not, once again see Fire and Forget) every time you want to save your current state/progress\n\n&gt; This encourages people to crawl into caves and write huge new features, then \u201cdump\u201d these code-bombs on their peers, at which point the code is unreviewable.\n\nWTF?\n\n&gt; Most DVCS systems don\u2019t run on Windows at all.\n\nHe mentions 5 DVCS earlier: git, mercurial, bazaar-ng, darcs, monotone\n\nMercurial has a pair of native  windows installers and works flawlessly, bazaar-ng is pure python so I doubt there's any problem, darcs didn't have any problem under windows when I tried it, Git is very shaky but getting better and I don't know about monotone.\n\n*That*'s supposed to be \"most dvcs not working on windows\"? Come on, let's be serious for a second...\n\n&gt; Most DVCS have no shell or GUI tool integrations; they\u2019re command-line only.\n\nWrong again, see gitk, hgk, qct, git-gui, qgit, ...\n\n&gt; They often struggle to use version control at all; are you now going to teach them the difference between \u201cpull\u201d and \u201cupdate\u201d, between \u201ccommit\u201d and \u201cpush\u201d? Look me in the eyes and say that with a straight face.\n\nI managed to teach it to a graphist (sp? a guy who mostly does drawings and a bit of AS programming). Now he's admitedly not *stupid*, but if you have devs who can't grasp the concepts of commit/update and push/pull, stick to Visual Sourcesafe. Or fire them straight, because I doubt they'll be able to produce anything beyond security holes and office politics\n\n&gt; Managers don\u2019t want 20 different private forks of a codebase; they want one codebase that they can monitor all activity on.\n\nOnce again, that's stupid. As soon as a developer checks a copy out, he creates a fork, I've seen people who didn't commit anything for 3 days and then WHAM gigantic ball of mud in your face. CVCS doesn't help. Quite the opposite, really.\n\n&gt; Cloning a repository is bad for corporate security. Most corporations have an absolute need for access control on their code; sensitive intellectual property in specific parts of the repository is only readable/writeable by certain teams.\n\nEr... yeah? So in a DVCS you'd either create different base repositories or use forests/submodules, no problem there.\n\n&gt; No DVCS is able to provide fine-grained access control; the entire code history is sitting on local disk.\n\nDVCS are (usually, I think Git has some abilities with that) not able to provide fine-grained access control to a ball-of-mud all-encompassing repository because such a repository is fucking stupid. SVN suggesting that this is the best model is *not* a good thing.\n\n&gt; Cloning is often unscalable for corporations. Many companies have huge codebases \u2014 repositories which are dozens or even hundreds of gigabytes in size. When a new developer starts out, it\u2019s simply a waste of time (and disk space) to clone a repository that big.\n\nOnce again, back to the ball of mud, if you decide to use DVCS (not switch to, switching a ball-of-mud repo to a distributed model is hard) you don't ball-of-mudify everything, you separate your entities into different lightweight repositories. And you can do it, because setting up a web repo takes all of 5 minutes.\n\nWhich, by the way wacks again the declaration that sharing requires extra effort. It doesn't, really, all the extra effort of Mercurial is: put a cgi script in your apache cgi directory, add a config file, add an entry to your mod_rewrite or .htaccess to have nicer urls. There, done, and that's only for the first repo you want to share, the next ones you'll just drop in a specified subfolder.\n\nThe *only* thing that holds any water in his argument is that there is no stable, concrete, production-reagy TortoiseGit, TortoiseHg or TortoiseDarcs. And that's a tenuous point, as much as I like TortoiseSVN, it doesn't help you understand how SVN works, and it usually makes it easier to fuck up everything because you get people using SVN without understanding what they do.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c029kf8", "parent_id": "t1_c029kal", "id": "c029kf8", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426268, "id": "c029kal", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029kal", "parent_id": "t1_c029k7d", "body": "no comprendo - seemed right on to me. What's the fud?", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029k7d", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -1, "link_id": "t3_5yg46", "retrieved_on": 1427426268, "body": "Fud, fud, and more fud.\n\nStarted out well, failed *hard* in the end.\n\nA+, would read again.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yg46", "id": "c029k7d", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029kdn", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426267, "score": 17, "score_hidden": false, "id": "c029kdn", "author": "gravity", "created_utc": "1192573367", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 17, "parent_id": "t3_5yg46", "body": "It'll be interesting to see what happens over the next ten years. Most of us who've switched over to DVCS's have come to rely quite heavily on those features, which tells you that they really are incredibly valuable. The same way it became apparent to corporations that they also needed some sort of version control, it may well become a fact of life that they need a distributed system to perform better in the future, the same way many free software projects now thrive on such systems. Whether this comes from svn or one of the other contenders doesn't really matter so much as the ability to use the tools in more flexible and powerful ways than in the past.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 21, "author": "markedtrees", "created_utc": "1192573590", "children": [{"controversiality": 0, "retrieved_on": 1427426265, "subreddit_id": "t5_2fwo", "created_utc": "1192575184", "ups": 21, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 21, "id": "c029kiz", "author": "radhruin", "archived": true, "distinguished": null, "edited": true, "body": " &gt; Most GUI source control tools suck. I'd posit that TortoiseSVN is an impedement to understanding SVN, not a coenzyme, because it abstracts the up, merge, code, diff, and checkin cycle into a bunch of context menus.\n\nAs someone who's had to try to explain subversion to coworkers at my small (not windows, per se) shop, I disagree with this.  It seems far easier to explain in practical terms what subversion is doing when I can demonstrate with menus and have icons to show feedback (Green check means nothing needs committing, etc).  And while I'm SURE they don't fully understand what all subversion does (I've had to explain the concept of merging multiple times by now over the course of a few years), I don't think it's absolutely necessary that they understand all the details.\n\nAs for your second point, given the problems I've had describing subversion to coworkers, getting them to understand DVCS with its local branching and committing and etc. would be a huge pain in the ass.  There is no denying that the conceptual model of CVC systems are a lot more simple than DVC systems, so I think he makes a valid point.  This is a big reason why I haven't switched to Mercurial here at work.  I would LOVE IT, but I don't think the people around here would understand enough about it and would end up hating it for irrational reasons.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029kiz", "parent_id": "t1_c029ke4", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "grauenwolf", "created_utc": "1192581513", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 11, "author": "masklinn", "created_utc": "1192603294", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "Gotebe", "created_utc": "1192623908", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "masklinn", "created_utc": "1192624525", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192625949", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "masklinn", "created_utc": "1192626138", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "Gotebe", "created_utc": "1192627519", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029nij", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426225, "score": 1, "score_hidden": false, "body": "&gt; That, you have to ask MS ;-)\n\nPretty much. So marking a file as checked out is useless if you don't use locks, which means that `svn update` + `svn lock` do everything that can be useful in VSS' checkout ;)\n\n&gt; OTOH, if you see file is \"checked out\", you may decide to do something else to avoid conflicts\n\nOr you switch to a VCS that can handle the conflicts itself and lets you work instead of worry about such petty things ;)", "author": "masklinn", "created_utc": "1192627684", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029ni0", "id": "c029nij", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029ni0", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426225, "body": "&gt;Why would you care that a file is marked as \"checkout\" if you don't disallow multiple checkout?\n\nThat, you have to ask MS ;-)\n\nGuess: it's like that because they first did exclusive lock only, then saw it doesn't work, but didn't change further to keep the existing \"look&amp;feel\".\n\nOTOH, if you see file is \"checked out\", you may decide to do something else to avoid conflicts ( e.g. get a cofee ;-) ).", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029nee", "id": "c029ni0", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c029nee", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426227, "score_hidden": false, "body": "&gt; No, no, that's only if you forbid multiple checkouts in VSS\n\nWhy would you care that a file is marked as \"checkout\" if you don't disallow multiple checkout?\n\n&gt; which nobody should be doing.\n\nlast time I tried VSS, all hell broke loose because it's fundamentally based on exclusive lock and is a piece of shit at merging files.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ndu", "id": "c029nee", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "jbellis", "created_utc": "1192634230", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192634858", "ups": 1, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426216, "score": 1, "body": "Well, then, **I** hit your dumb-smart sweet spot there!\n\nWhere I work we used VSS, and in that way. I made us turn that off (well, on, as the option is \"Allow multiple checkouts\", I think\").\n\nBTW, we don't use VSS anymore, but we didn't have problems with it, either (under ten people and tens, but not hundreds, MBs of code).", "id": "c029o8d", "author": "Gotebe", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029o8d", "parent_id": "t1_c029o4z", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029o4z", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 4, "link_id": "t3_5yg46", "retrieved_on": 1427426217, "body": "&gt; No, no, that's only if you forbid multiple checkouts in VSS, which nobody should be doing.\n\n&gt; (Yeah, I know stupid VSS turns it on by default)\n\nThat may be a nice theory, but I don't know anyone dumb enough to use VSS that was smart enough to turn this off.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ndu", "id": "c029o4z", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029ndu", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426227, "score_hidden": false, "body": "No, no, that's only if you forbid multiple checkouts in VSS, which nobody should be doing.\n\n(Yeah, I know stupid VSS turns it on by default)", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029nan", "id": "c029ndu", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426228, "body": "&gt; no analogue in SVN AFAIK\n\n`svn update` + `svn lock`.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029nan", "parent_id": "t1_c029n9d", "id": "c029nan", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426229, "id": "c029n9d", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029n9d", "parent_id": "t1_c029met", "body": "VSS \"checkout\" : get the latest version of the file (i.e. SVN \"update\") + mark as checked out in VSS (no analogue in SVN AFAIK).\n\nSVN checkout: as you say.\n\nThe two use same word with different meaning and different words for one meaning, e.g SVN update (almost) = VSS get.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 11, "name": "t1_c029met", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426240, "score_hidden": false, "id": "c029met", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c029kxl", "body": "&gt; If the mere act of trying to edit a file in Visual Studio doesn't cause a check-out\n\nThe only SCM I still use that has a notion of checkout is subversion, and it means creating a local working copy from a remote repository.\n\nDid you mean an update? Or the completely stupid SourceSafy behavior of locking each and every file you want to work on?\n\n&gt; If you have to open a shell and remember esoteric commands just to label a branch, no one is going to do it consistently.\n\nI don't know about esoteric, mercurial has `hg branch branchname` to create a branch, and `hg tag tagname` to tag the current revision. \n\nDoesn't seem *too* esoteric to me.", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426238, "subreddit_id": "t5_2fwo", "created_utc": "1192606358", "ups": 8, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 8, "id": "c029mlf", "author": "trickos", "archived": true, "distinguished": null, "edited": false, "body": "&gt; Source control needs to be seemless if you expect people to use it correctly.\n\nYes and no. Source control must be seamless if you want to force them down the throat of everybody. In which case this is nothing more than a sophisticated backup systems.\n\nIMHO, version control *is part of the programming activity*. You have to think to tailor revisions suitable for reviews and history mining: short, standalone and logically consistent. Otherwise, versioning is pointless. Once you do that, the actual version control system operation cost is almost negligible.\n\nThe 20/80% percent split is not really about cutting edge/mainstream programmers but rather about those for who VCS are a programming tool like a good IDE or compiler and those for who they are just an imposed burden.\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mlf", "parent_id": "t1_c029kxl", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426238, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029mll", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 5, "score_hidden": false, "id": "c029mll", "author": "lbruno", "created_utc": "1192606422", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 5, "parent_id": "t1_c029kxl", "body": "&gt; If the mere act of trying to edit a file in Visual Studio doesn't cause a check-out, then it is a non-starter for nearly everyone I have worked with in the last 4 years.\n\nI was going to give you grief about your choice of cow-orkers, but then I realized I haven't checked-out code in a long time.\n\nSo, what's your usual workflow? Mine is:\n\n1. have a clone sitting on-disk\n1. make changes\n1. record the patch locally\n1. push it to the central server\n\nNote the lack of a \"I want to edit *that* file, please; oh mr. SourceSafe, please let me edit that file, **please!**\" step. ", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426227, "subreddit_id": "t5_2fwo", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 3, "body": "&gt;If the mere act of trying to edit a file in Visual Studio doesn't cause a check-out, then it is a non-starter for nearly everyone I have worked with in the last 4 years.\n\nThat may be the reality, but it's *really* fault of these people, not the tool's.\n\nIt's not *that* hard to accept the possibility that source control will work differently than VSS integration for VS, which is the case you describe.", "author": "Gotebe", "created_utc": "1192625390", "distinguished": null, "edited": false, "id": "c029ncj", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029ncj", "parent_id": "t1_c029kxl", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192626184", "name": "t1_c029nei", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426227, "score": 3, "score_hidden": false, "id": "c029nei", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029kxl", "body": "What kind of programmer considers \"svn cp\" esoteric?", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029o9c", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426216, "score": 6, "score_hidden": false, "id": "c029o9c", "author": "ansible", "created_utc": "1192634982", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 6, "parent_id": "t1_c029kxl", "body": "_I consider myself to be among the 80% who see programming as a job, and I didn't get that impression at all._\n\nThe very fact that you're here, discussing DVCS  means that you are part of the 20% category of Sussman's.  The 80% rarely read and discuss articles on programming tools.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029kxl", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -2, "link_id": "t3_5yg46", "retrieved_on": 1427426259, "body": "&gt; author treats his 80% category like they're completely retarded people incapable of learning DVCS because it's inherently more difficult than a centralized one.\r\n\r\nI consider myself to be among the 80% who see programming as a job, and I didn't get that impression at all.\r\n\r\n&gt; Most GUI source control tools suck. \r\n\r\nAnd ALL command line source control tools suck even worse.\r\n\r\nIf the mere act of trying to edit a file in Visual Studio doesn't cause a check-out, then it is a non-starter for nearly everyone I have worked with in the last 4 years. \r\n\r\nSource control needs to be seemless if you expect people to use it correctly. If you have to open a shell and remember esoteric commands just to label a branch, no one is going to do it consistently.\r\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ke4", "id": "c029kxl", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192625098", "ups": -1, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426228, "score": -1, "body": "&gt;Most GUI source control tools suck.\n\nYou rather mean SC GUI client.\n\nStill, no. In this case, command line can't beat context menu operation, be it using mouse or keyboard. Depending on the bloat in your GUI shell, you also won't save keystrokes if you go keyboard only.", "id": "c029nbu", "author": "Gotebe", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029nbu", "parent_id": "t1_c029ke4", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 21, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426267, "id": "c029ke4", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c029ke4", "parent_id": "t3_5yg46", "body": " &gt; Most DVCS systems don't run on Windows at all.\r\n\r\nBazaar, Mercurial, darcs, svk, and BitKeeper all run on Windows as near-first-class citizens; git has a very active Windows effort. What list has the author generated that doesn't include these as the blatant examples of DCVS?\r\n\r\n&gt; Most DVCS have no shell or GUI tool integrations; they're command-line only.\r\n\r\nMost GUI source control tools suck. I'd posit that TortoiseSVN is an impedement to understanding SVN, not a coenzyme, because it abstracts the up, merge, code, diff, and checkin cycle into a bunch of context menus.\r\n\r\n&gt; There are two \"classes\" of programmers in the world of software development: I'm going to call them the 20% and the 80%.\r\n\r\nI disagree with the entire premise. The author treats his 80% category like they're completely retarded people incapable of learning DVCS because it's inherently more difficult than a centralized one. What he describes for Subversion 2.0 would be *awesome*: Offering the existing pool of Subversion users contact with this alien landscape of nightmares and cacti and adapting to users' demand. CVS did the exact opposite and now it's obsolete. It's awful that the weblog article had to conflate that great bit of news with assuming DVCS advocates think it's a perfect system.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 48, "author": "dlsspy", "created_utc": "1192575146", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "boredzo", "created_utc": "1192575773", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "dlsspy", "created_utc": "1192576523", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "boredzo", "created_utc": "1192578549", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "dlsspy", "created_utc": "1192583357", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "boredzo", "created_utc": "1192586891", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "AngryProfessor", "created_utc": "1192590599", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "boredzo", "created_utc": "1192591095", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192594802", "ups": 6, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426246, "score": 6, "body": "&gt; Giant \u201ccode bombs\u201d, as Sussman calls them, are a failing of the developer(s), not the VCS.\n\nOn this point, we agree.\n\nIt is my experience that centralized revision control makes this phenomenon worse.  It is his hypothesis that distributed systems might encourage people to do it.", "author": "dlsspy", "archived": true, "distinguished": null, "edited": false, "id": "c029lxb", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029lxb", "parent_id": "t1_c029lmb", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "joaomc", "created_utc": "1192617285", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "boredzo", "created_utc": "1192618957", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192626018", "name": "t1_c029ne0", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426227, "score": 4, "score_hidden": false, "body": "Right, and the point is that if merging is painful, then branching is worthless.\n\nWe use SVN, and whenever we make big changes we have 2 options: we can branch and deal with all the accompanying headaches, or we can just not commit for three days.  The idea is to never check in code that you know to be broken, and that becomes difficult when you're making really big changes.  Obviously you want to avoid those as much as possible but sometimes there's nothing you can do.\n\nI've never used a DVCS, but I find them interesting because they \"should\" solve that problem.", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 4, "parent_id": "t1_c029n2p", "id": "c029ne0", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426231, "id": "c029n2p", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029n2p", "parent_id": "t1_c029n08", "body": "Well, the branching is easy (see above). It's the merging that's hard. \u263a", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192632597", "name": "t1_c029ny0", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426220, "score": 1, "score_hidden": false, "id": "c029ny0", "author": "phil_g", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029n08", "body": "Indeed, and Subversion 1.5 should make merging a lot easier.\n\nWhich is related to what the linked article was discussing: Subversion is well oriented to work for a lot of business programming, so they want to keep that orientation while borrowing from DVCSes things that Subversion doesn't do as well (like merging).", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 5, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426232, "body": "SVN branching/merging *SUCKS*. It's so painful developers are afraid of using it.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029n08", "parent_id": "t1_c029lmb", "id": "c029n08", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426222, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029nua", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 4, "score_hidden": false, "body": "&gt;I think you're referring to when people commit such things to trunk.\n\nI assumed that is what you meant when you said \"the manager may not want to monitor half a dozen or more different branches, so he'd order the employees to all push to a central repository at least every X interval\".\n\nKeeping track of multiple different branches in an svn repo is the same as keeping track of multiple different branches of an hg/darcs repo. All he needs to do is tell the developer to mirror any branches on a server he has access to. \n\nUltimately, with a DVCS, you can always mirror the topology of a centralized VCS. Additionally, you can use other topologies (tree structures, microbranches, \"sideways merges\") when useful. \n\nAs for code bombs, they are a failing of the developer. But they are also a failing of CVS/subversion, which make merging way more difficult than it needs to be. ", "author": "AngryProfessor", "created_utc": "1192631636", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t1_c029lmb", "id": "c029nua", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029lmb", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5yg46", "retrieved_on": 1427426250, "id": "c029lmb", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029ll7", "body": "I think you're referring to when people commit such things to trunk. That's what branches are for: One developer creates a branch, the others check it out, and then work on that feature happens on that branch a commit at a time. When the feature is done, a developer merges the branch back to trunk and deletes the branch.\n\nGiant \u201ccode bombs\u201d, as Sussman calls them, are a failing of the developer(s), not the VCS.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 4, "name": "t1_c029ll7", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426250, "score_hidden": false, "id": "c029ll7", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029lc6", "body": "&gt;Of course, this applies equally to pushing in a DVCS, which is the problem: the manager may not want to monitor half a dozen or more different branches, so he'd order the employees to all push to a central repository at least every X interval, thereby destroying the main advantage (wholly-separate branches) of a DVCS. It'd basically be just like a Subversion repo.\n\nEven in this worst case scenary, distributed VCS beats subversion. \n\nIn this scenario, with subversion, you get precisely one patch every X interval \"Partially build feature, doesn't work yet, but boss requires us to commit,...\". In principle, the \"...\" hides a complete description of the changes the developer made and why. In practice, hah. \n\nWith darcs/hg, you get the entire history leading up to \"Partially built...\". All the developers have to do is commit whenever they make a chance, and you get a complete history of the branch. \n\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 0, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426253, "body": "&gt; How do the changes you've been working on get into that new tree you checked out?\n\nOmit the -rHEAD part and it includes your local changes.\n\n&gt; In a distributed revision control system, you might have been committing changesets for a while, and then decide you don't want to push them so you just move the tree out of the way (or push them as a different branch or whatever).\n\nYes, that's their strength. The article discusses their weaknesses.\n\n&gt; I don't get your argument about having a manager going around looking for people's work to be ready.\n\nNot my argument. It's Sussman's argument.\n\n&gt; That doesn't scale anyway.\n\nIt may not need to. Not every development team is large.\n\n&gt; If your developers are not checking in code (centralized or not) when it's not ready, does your hypothetical manager go digging through all of their filesystems looking for uncommitted files?\n\nSussman's hypothetical manager would, hopefully notice that they're not committing anything and tell them \u201chey, start committing!\u201d\n\nOf course, this applies equally to pushing in a DVCS, which is the problem: the manager may not want to monitor half a dozen or more different branches, so he'd order the employees to all push to a central repository at least every X interval, thereby destroying the main advantage (wholly-separate branches) of a DVCS. It'd basically be just like a Subversion repo. ", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029lc6", "parent_id": "t1_c029l23", "id": "c029lc6", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 12, "name": "t1_c029l23", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426257, "score_hidden": false, "body": " That's not an after-the-fact branch.  That's a planned branch and a checkout.  How do the changes you've been working on get into that new tree you checked out?\n\nIn a distributed revision control system, you might have been committing changesets for a while, and then decide you don't want to push them so you just move the tree out of the way (or push them as a different branch or whatever).\n\nI don't get your argument about having a manager going around looking for people's work to be ready.  That doesn't scale anyway.  If your developers are not checking in code (centralized or not) when it's not ready, does your hypothetical manager go digging through all of their filesystems looking for uncommitted files?\n\nIt's the developers' responsibility to provide code when it's ready. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029kqy", "id": "c029l23", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029kqy", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 7, "link_id": "t3_5yg46", "retrieved_on": 1427426261, "id": "c029kqy", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029kme", "body": "&gt; 1) How easy is an after-the-fact branch in svn?\n\n\tsvn cp -rHEAD trunk branches/foo\n\tsvn ci branches/foo\n\n&gt; 2) The argument here seemed to be that branches are bad.\n\nThe argument in the article was that having multiple repositories is bad in a corporate environment where somebody (management) will want to monitor the code.\n\nWith a DVCS and one branch per employee, the manager must poll every employee's branch to:\n\n1. See if it has any code not in the main branch (the trunk, as it were).\n2. Evaluate how ready that code is to go into the main branch.\n3. If appropriate, tell the employee who owns that branch to push his changes to the main branch.\n\nThe obvious way to simplify that is to have one branch per task (such as a big feature that shouldn't go into trunk until it's done) rather than one branch per *employee*.\n\nThose per-feature branches don't have to be separate repositories; they work just fine all in the same repository. Once they're all in the same repository, you're basically not doing distributed version control anymore.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029kme", "controversiality": 0, "archived": true, "ups": 8, "link_id": "t3_5yg46", "retrieved_on": 1427426263, "id": "c029kme", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c029kki", "body": " Well, two points:\n\n1) How easy is an after-the-fact branch in svn?\n\n2) The argument here seemed to be that branches are bad. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029kki", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 4, "link_id": "t3_5yg46", "retrieved_on": 1427426263, "body": "&gt; If I have two branches, it means I can work on two different features on two different schedules independently. When someone says, ``Hey! Stop working on project X. We need to ship project Y RSN!'' I can just jump over somewhere else without losing my place.\n\nYou can do that in Subversion, too.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029kix", "id": "c029kki", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "schala09", "created_utc": "1192599461", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "masklinn", "created_utc": "1192603069", "children": [{"controversiality": 0, "retrieved_on": 1427426218, "subreddit_id": "t5_2fwo", "created_utc": "1192634031", "ups": 5, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 5, "body": "&gt; it uses symlinks when they're available\n\nno, they use hard links", "author": "jbellis", "archived": true, "distinguished": null, "edited": false, "id": "c029o3v", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029o3v", "parent_id": "t1_c029med", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029med", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 8, "link_id": "t3_5yg46", "retrieved_on": 1427426240, "id": "c029med", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029m7l", "body": "&gt; A clone of a Mercurial repository is probably much smaller.\n\nThe clone of a remote hg repository (with full history and everything) is about the size of an SVN WC I think (maybe slightly smaller), a Git local repo is even smaller.\n\nFor both Git and Hg, I think the tool performs lazy clones when cloning from local (it uses symlinks when they're available, stuff like that)", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "archived": true, "ups": 6, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426238, "score": 6, "body": "Mercurial can do the same quick diffing...but against any revision ever committed against the file up to the time you cloned it.  This obviously excludes any changes in other branches you haven't pulled, but you can pull those and they'll be there, too.\n\nIf the history is large enough, and enough files have moved around or been deleted or whatever, then mercurial's repo can get bigger, but it'd take a lot before it's *significantly* larger than svn (which doesn't include all the history).  I'd consider that good enough.", "author": "dlsspy", "created_utc": "1192606845", "distinguished": null, "edited": false, "id": "c029mm2", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mm2", "parent_id": "t1_c029m7l", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426230, "subreddit_id": "t5_2fwo", "archived": true, "ups": 6, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 6, "id": "c029n4r", "author": "awb", "created_utc": "1192620195", "distinguished": null, "edited": false, "body": "&gt; An SVN working directory is 2x the size of a non-SVN working directory, because there's a pristine copy of every file for quick diffing. A clone of a Mercurial repository is probably much smaller.\n\nOnly for an amount of time at the beginning of the project.  An unpacked Linux kernel tarball is a bit over 100MB, but the git repo is well over 500MB.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029n4r", "parent_id": "t1_c029m7l", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029m7l", "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426242, "score_hidden": false, "id": "c029m7l", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029kix", "body": "&gt; If you need it all, you will probably find that a mercurial clone and working directory is probably not bigger than a svn working directory. It's certainly more useful, though.\n\nAn SVN working directory is 2x the size of a non-SVN working directory, because there's a pristine copy of every file for quick diffing. A clone of a Mercurial repository is probably much smaller.\n", "author_flair_css_class": null}], "subreddit": "programming", "ups": 48, "name": "t1_c029kix", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426265, "score_hidden": false, "body": " It's really hard to agree with most of that.\n\nRegarding corporate use:\n\n&gt; Managers don\u2019t want 20 different private forks of a codebase; they want one codebase that they can monitor all activity on.\n\nIf I have two branches, it means I can work on two different features on two different schedules independently.  When someone says, ``Hey!  Stop working on project X.  We need to ship project Y RSN!''  I can just jump over somewhere else without losing my place.\n\nThe reality I've experienced working with distributed revision control in such projects is that they're quite happy to see my flexibility.  Much more so than either of introduction of broken trees while in progress or long time delays with giant commits (more on this below).\n\nYou know what else they wanted, though?  The ability to ship a project off to an outsourcing facility, have them do work, and ship changes back in such a way that we could possibly integrate them back into our system.  That's an excellent default distributed systems give you.\n\n&gt; Cloning a repository is bad for corporate security. [...] No DVCS is able to provide fine-grained access control.\n\nIs it somehow worse to grab a tree with usable history than it is to grab the head-of-line code?  I don't buy that.\n\n&gt; Cloning is often unscalable for corporations. Many companies have huge codebases \n\nWould you say that there are actually multiple projects within these companies?  You either need it all, or you need parts.  If you need parts, you break stuff down into parts.  If you need it all, you will probably find that a mercurial clone and working directory is probably not bigger than a svn working directory.  It's certainly more useful, though.\n\nThis also relates to the security prod above.  If there's a sensitive part of a tree, it is a different project.  People already treat subversion trees as individual projects.  Just call it what it is and protect the parts that need protection.  Move on.\n\n&gt; with a centralized system, people are forced to collaborate and review each other\u2019s work; in a decentralized system, the default behavior is for each developer to privately fork the project\n\nWith branches and easy ways to share things, it's easy to make changes and have the changes peer reviewed before making them generally available.\n\nIn my experience with centralized systems, people are just afraid to commit anything because of a fear that it's not quite ready, or it's broken and people shouldn't have to deal with it, etc...\n\nI've had two individuals who would try to get as much work done as possible before checking anything in.  No interim state.  No ability to even see if the project is moving in the right direction.  Lots of yelling.  This was all with centralized systems.\n\nOne of these guys was a contractor.  I desperately wanted to be able to just pull changesets from him without having to give him access to perforce.  I could've done something similar with a p4 branch in the first place, but we failed to think it through.  Pull and review (in a temporary location) is a perfectly reasonable practice in a distributed system.  You can't even do that in centralized systems without at least giving them write access *somewhere*.\n\n&gt; There is no magic bullet for version control.\n\nThe only place where mercurial (or pick your dvcs) isn't a superset of svn is in using it as a generic file backup mechanism where you have no project-oriented structure.  Most dvcs aren't good at that.  After having dealt with complicated CVS modules, perforce client specs, etc... I'm rather glad they require you to make a project tree a project tree. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5yg46", "id": "c029kix", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029l2v", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426257, "score": 15, "score_hidden": false, "id": "c029l2v", "author": "mcantelon", "created_utc": "1192583611", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 15, "parent_id": "t3_5yg46", "body": "Subversion was designed for the 20%, not the 80%. But the author maintains that DVCS shouldn't be designed for the 20% because the 20% are wrong this time? Meh... Sounds like sour grapes to me.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192589320", "name": "t1_c029lic", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426251, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5yg46", "id": "c029lic", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -4, "author": "hukedonfonix", "created_utc": "1192589741", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192601610", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192613828", "ups": 6, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426234, "score": 6, "body": "There's always wallmart.", "author": "officemonkey", "archived": true, "distinguished": null, "edited": false, "id": "c029mvz", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029mvz", "parent_id": "t1_c029mbm", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029mbm", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yg46", "retrieved_on": 1427426241, "body": "amen to that. I hate computers, am becoming more of a luddite everyday, and I still program those POSs. But hey, it's what i learned in school.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ljf", "id": "c029mbm", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029ljf", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -4, "link_id": "t3_5yg46", "retrieved_on": 1427426251, "id": "c029ljf", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yg46", "body": "God forbid someone has a life outside of writing code 24/7.", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426249, "subreddit_id": "t5_2fwo", "created_utc": "1192591674", "ups": 1, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 1, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c029lo0", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029lo0", "parent_id": "t3_5yg46", "score_hidden": false, "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "ronito", "created_utc": "1192593791", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192599883", "ups": 5, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426242, "score": 5, "body": "Since most (if not all) of the points in the article are addressed to the 20%, I don't see that as a problem. There is nothing in the article that an 80% would care about... and why should they? Subversion works fine for most purposes.", "id": "c029m8l", "author": "MarkByers", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029m8l", "parent_id": "t1_c029lts", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "masklinn", "created_utc": "1192603372", "children": [{"controversiality": 0, "retrieved_on": 1427426232, "subreddit_id": "t5_2fwo", "archived": true, "ups": 7, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 7, "body": "Even his 80%/20% division is wrong. In my experience, we have more of a bell curve, like 20% (probably less) real alpha coders, 60% competent coders would can be taught new tools and techniques (provided they're stable and well \"packaged\") but won't go out of their way to find them, and 20% (probably more) real total losers who should be fired or confined to really menial tasks.\n\nClearly, I'm not an alpha geek, but I take offense in being lumped into his 80% losers category.", "author": "boa13", "created_utc": "1192617303", "distinguished": null, "edited": false, "id": "c029n09", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029n09", "parent_id": "t1_c029mez", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029mez", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 4, "link_id": "t3_5yg46", "retrieved_on": 1427426239, "body": "&gt; Too bad because it has some valid points.\n\nI have a hard time finding them, really.\n\nThe only one I found is \"DVCS don't have a (stable, production-ready) Tortoise*NameOfYourDVCS*\". Pretty much every other point is dead wrong and/or stupid.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029lts", "id": "c029mez", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c029lts", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426248, "score_hidden": false, "body": "wow. what an elitist bit of writing. Honestly the 80/20 rule applies here. 80% of people will be off put with the \"ZOMG1337CORE H4X0RZ!\" Tone. The other 20 will read it.\n\nToo bad because it has some valid points. ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yg46", "id": "c029lts", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "[deleted]", "created_utc": "1192595312", "children": [{"controversiality": 0, "retrieved_on": 1427426238, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029mkg", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 3, "score_hidden": false, "body": "He was not talking about the size of the history, he was talking about the size of the export, the number of files in it.", "author": "masklinn", "created_utc": "1192605753", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c029lyn", "id": "c029mkg", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "dlsspy", "created_utc": "1192607265", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029mpz", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426235, "score": 3, "score_hidden": false, "id": "c029mpz", "author": "masklinn", "created_utc": "1192609330", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029mmj", "body": "&gt; The problem is that you can't just dump all of your code into a versioning filesystem and then later decide what your projects are by pulling pieces out of this large mess.\n\nYou can, really, but it's hard, long, painful, and usually not worth wasting your time. Thankfully extensions start emerging that allow you to *reliably* and pretty much *completely* export a subset/subfolder of an existing (svn) repository to a self-contained full fledged (git/hg) repository", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192664200", "children": [{"distinguished": null, "controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029s8h", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426164, "score": 1, "id": "c029s8h", "author": "dlsspy", "created_utc": "1192668408", "author_flair_text": null, "edited": false, "body": "I didn't know it existed until you mentioned it.  I just looked it up.  :)\n\nI don't entirely understand how such a thing would work, though.  If you have a file that hasn't changed since the first version of your project, it'd effectively not be in the history you downloaded, so changing it would just lead to confusion.", "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029rvx", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029rvx", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426169, "score_hidden": false, "id": "c029rvx", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029mmj", "body": "Wow, I did not realize you couldn't push from.  I thought it was only pushing to that was not allowed.  Thanks for the heads up.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029mmj", "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426238, "score_hidden": false, "id": "c029mmj", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029lyn", "body": "A shallow clone is mostly useless.  Specifically, you can't push from it as you would imply.\n\nAs masklinn points out, though... that's not the problem.  The problem is that you can't just dump all of your code into a versioning filesystem and then later decide what your projects are by pulling pieces out of this large mess.\n\nIt's really better that way.  :)", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426232, "subreddit_id": "t5_2fwo", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 3, "id": "c029mys", "author": "icefox", "created_utc": "1192615880", "distinguished": null, "edited": false, "body": "Yah, but even with huge projects the biggest .git directory I have is only 665MB, but most of them are measured in KB or tens of MB", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mys", "parent_id": "t1_c029lyn", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 4, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426245, "id": "c029lyn", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c029lyn", "parent_id": "t3_5yg46", "body": " He complains about super large code bases being unclonable, but git at least (and probably others) support cloning up to a specific number of commits.  So get the last dozen commits on your hundred gig project and then you can pull and push back to the main repo same as you normally would. ", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "schala09", "created_utc": "1192599321", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "joe24pack", "created_utc": "1192624124", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "derekslager", "created_utc": "1192643272", "children": [{"controversiality": 0, "retrieved_on": 1427426164, "subreddit_id": "t5_2fwo", "created_utc": "1192668832", "score": 1, "link_id": "t3_5yg46", "downs": 0, "name": "t1_c029s9r", "score_hidden": false, "body": "I'm almost tempted to give it a try tomorrow at work\n", "author": "joe24pack", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029pav", "id": "c029s9r", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029pav", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 5, "link_id": "t3_5yg46", "retrieved_on": 1427426202, "id": "c029pav", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029n9v", "body": "My favorite Perforce trick -- unplug your network cable and type `p4 help`.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029n9v", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5yg46", "retrieved_on": 1427426228, "id": "c029n9v", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029m77", "body": "Perforce is a pain to use.  It sees everything very \"file centric\", which makes it a pain in the ass to refactor whole packages and libraries enmasse.  Try Subversion for the bare minimum of a decent VCS for any sizable project, otherwise you will be fighting your own tools too much.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029m77", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426242, "score_hidden": false, "id": "c029m77", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yg46", "body": "I interned at a software company this summer which used Perforce. The very first thing my manager had me do was create a branch of the entire project tree. Of course, since Perforce is a centralized system, each branch lived on the server. So much for \"centralized control\"...", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 11, "author": "xcbsmith", "created_utc": "1192601186", "children": [{"controversiality": 0, "retrieved_on": 1427426220, "subreddit_id": "t5_2fwo", "created_utc": "1192632507", "ups": 3, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 3, "id": "c029nxs", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "It sounds almost as though he's trying to create a \"branch\" as it were of the *[Pareto principle](http://en.wikipedia.org/wiki/Pareto_principle)*.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029nxs", "parent_id": "t1_c029mb2", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "mclin", "created_utc": "1192646158", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "xcbsmith", "created_utc": "1192648673", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "mclin", "created_utc": "1192649386", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "xcbsmith", "created_utc": "1192649985", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "mclin", "created_utc": "1192650772", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029qn9", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426186, "score": 2, "score_hidden": false, "id": "c029qn9", "author": "xcbsmith", "created_utc": "1192652832", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029qdi", "body": "Particularly if it is in text and provides no helpful emoticons. ;-)", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029qdi", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yg46", "retrieved_on": 1427426188, "id": "c029qdi", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029q9i", "body": "Also they tend not to be able to recognize the difference between an a (barely) humourous observation and an actual question. :P", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c029q9i", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426190, "score_hidden": false, "body": "&gt; I image the fraction of women that rate programming skillz high on their list of wants in a man is vanishingly small.\n\nAlpha male behavior is about power, domination and leadership, not skills (skills can be a means to the end). Women (and people in general for that matter) are often drawn to such things.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029q6q", "id": "c029q9i", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029q6q", "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yg46", "retrieved_on": 1427426192, "body": "  It's funny how that still happens even though I image the fraction of women that rate programming skillz high on their list of wants in a man is vanishingly small.\n\nI bet it rates lower than nunchuck skills anyway. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029q2n", "id": "c029q6q", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426192, "body": "I think you are attributing traits to \"alpha\" that only apply to \"alpha male\". In that context the \"male\" bit is what brings all those interesting social interactions.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029q2n", "parent_id": "t1_c029ppe", "id": "c029q2n", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c029ppe", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426197, "score_hidden": false, "id": "c029ppe", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029mb2", "body": "I think of the 'alpha geek' term as really based on how good they *think* they are, and which they think somehow absolves them of standards of reasonable social interaction.\n\nReally good coders aren't necessarily 'alpha' in the conventional social sense of the word.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 11, "name": "t1_c029mb2", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426241, "score_hidden": false, "id": "c029mb2", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yg46", "body": "What is the point of calling them \"80%\" and \"20%\" instead of \"alpha coders\" and \"~alpha coders\"? I mean, when you give them names like that, it is really hard to be surprised (and the article suggests people are) to discover that the \"80%\" group makes up the majority of programmers..... ;-)", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426240, "subreddit_id": "t5_2fwo", "created_utc": "1192603037", "name": "t1_c029meb", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 33, "score_hidden": false, "body": "\"Will anyone think of the stupid people!\"", "author": "rooroo", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 33, "parent_id": "t3_5yg46", "id": "c029meb", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426239, "subreddit_id": "t5_2fwo", "archived": true, "ups": -13, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": -13, "body": "[deleted]", "author": "[deleted]", "created_utc": "1192604214", "distinguished": null, "edited": false, "id": "c029mgy", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mgy", "parent_id": "t3_5yg46", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192613734", "name": "t1_c029mvu", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426234, "score": 7, "score_hidden": false, "id": "c029mvu", "author": "jones77", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 7, "parent_id": "t3_5yg46", "body": "The guy sounds like a self-important jerk.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029nft", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426226, "score": -2, "score_hidden": false, "id": "c029nft", "author": "spotcatbug", "created_utc": "1192626745", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": -2, "parent_id": "t3_5yg46", "body": "&gt;Shocking statement #1: Most of the software industry is made up of 80% programmers.\n\nYou don't say? Is it, like, more than 79%?", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "[deleted]", "created_utc": "1192626750", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "hamsterboy", "created_utc": "1192627980", "children": [{"controversiality": 0, "retrieved_on": 1427426225, "subreddit_id": "t5_2fwo", "created_utc": "1192628031", "ups": 13, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 13, "body": "bwahahahaha", "author": "martoo", "archived": true, "distinguished": null, "edited": false, "id": "c029njc", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029njc", "parent_id": "t1_c029nj5", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192630118", "ups": 8, "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426223, "score": 8, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "id": "c029noz", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029noz", "parent_id": "t1_c029nj5", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "jagerbomb", "created_utc": "1192630752", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "unexpected", "created_utc": "1192634340", "children": [{"controversiality": 0, "retrieved_on": 1427426180, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029qzk", "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 2, "score_hidden": false, "body": "I think his problem is with the \"so we have to sell them the source code to install on their own server\" part.", "author": "micampe", "created_utc": "1192655692", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029o5f", "id": "c029qzk", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426179, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yg46", "downs": 0, "score": 1, "id": "c029r1x", "author": "cezar", "created_utc": "1192656299", "distinguished": null, "edited": false, "body": "I think jagerbomb is saying the a DVCS doesn't make you open up your repository to the world. There is just as much control over it as there is with any other SCM.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029r1x", "parent_id": "t1_c029o5f", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 5, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426217, "body": "It makes total sense. Companies like to have access to their data, and they like to ensure that no one else has it. Most companies don't like outsourcing stuff - especially development tools to outside hosting companies.\n\nWhy do you think companies spend gajillions of dollars bringing up consultants to set up Oracle and SAP at their own site instead of having a generic hosting one?\n\nIt definitely makes more business sense to have some things hosted, which is why you see small companies and one man shops putting their subversion, webhosting, etc. on Dreamhost and doing their project tracking via Basecamp.\n\nBut the big companies, man. They want to go down the hall and see the damn box.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029o5f", "parent_id": "t1_c029nqy", "id": "c029o5f", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c029nqy", "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426222, "score_hidden": false, "id": "c029nqy", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029nj5", "body": "Normally I like Joel, a lot, but this statement makes no sense to me: \n\n\"But most FogBugz customers don't want their proprietary project data on someone else's servers, so we have to sell them the source code to install on their own server.\"\n", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5yg46", "retrieved_on": 1427426225, "id": "c029nj5", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029nj5", "parent_id": "t1_c029nfu", "body": "Nope. It's a in-house [VBScript variant](http://www.joelonsoftware.com/items/2006/09/01b.html).", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yg46", "retrieved_on": 1427426226, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029nfu", "parent_id": "t3_5yg46", "id": "c029nfu", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029nn7", "gilded": 0, "link_id": "t3_5yg46", "retrieved_on": 1427426224, "score": 8, "score_hidden": false, "id": "c029nn7", "author": "schwarzedrache", "created_utc": "1192629583", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 8, "parent_id": "t3_5yg46", "body": "Because there are absolutely NO people in between \"Learning Haskell for Fun on the Weekends\" and \"I just got into Compsci cuz it pays well\"", "author_flair_css_class": null}