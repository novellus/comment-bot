{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "crescentfresh", "created_utc": "1192667381", "children": [{"controversiality": 0, "retrieved_on": 1427426156, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029su5", "gilded": 0, "link_id": "t3_5yjcc", "downs": 0, "score": 0, "score_hidden": false, "id": "c029su5", "author": "fmota", "created_utc": "1192677041", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c029s5e", "body": "It looks amazing. I'm about to give it a test run. Thank you! :)", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029uja", "gilded": 0, "link_id": "t3_5yjcc", "retrieved_on": 1427426134, "score": 2, "score_hidden": false, "id": "c029uja", "author": "monolar", "created_utc": "1192710044", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029s5e", "body": "Agreed. Using pyparsing is good for the brain. I like it a lot (Parsing nwn files ;) ).", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "kefex", "created_utc": "1192718176", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "crescentfresh", "created_utc": "1192733711", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "kefex", "created_utc": "1192733902", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Bogtha", "created_utc": "1192734443", "children": [{"controversiality": 0, "retrieved_on": 1427426097, "subreddit_id": "t5_2fwo", "created_utc": "1192734814", "score": 1, "link_id": "t3_5yjcc", "downs": 0, "name": "t1_c029xft", "score_hidden": false, "body": "Thanks for the tip, Bogtha.", "author": "kefex", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c029xe0", "id": "c029xft", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029xe0", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yjcc", "retrieved_on": 1427426097, "body": "To post code, put four spaces at the beginning of each line.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029xba", "id": "c029xe0", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5yjcc", "retrieved_on": 1427426098, "id": "c029xba", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c029xba", "parent_id": "t1_c029xag", "body": "  Yeah, the bottom-up thing was what bugged me most, having worked with yacc before, which is very friendly to the top-down idiom.  That's why I made my [pyparsing helper](http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/528934).  With it, you can write stuff like this:\n\n    A = B + C\n    B = Literal('b')\n    C = Literal('c')\n    DList = D | (D + DList)  \n    D = Literal('d')\n\nI.e., top-down, with recursive rules, and *no Forward(), and no &lt;&lt;*.  Much prettier. ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029xag", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yjcc", "retrieved_on": 1427426099, "body": "Absolutely. Your grammar has to be defined \"bottom up\", and it's definitely not a speed demon.\n\nSo damn fun to use though.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029va5", "id": "c029xag", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029va5", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 5, "link_id": "t3_5yjcc", "retrieved_on": 1427426125, "body": "  I like it a lot, too, sluggish though it can be.  I also wasn't crazy about Forward(), and having two distinct operators for defining rules ('&lt;&lt;' for rules defined with Forward, and '=' otherwise).\n\nI made a nice [workaround](http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/528934), though, for those who are interested.\n\n  ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029s5e", "id": "c029va5", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029s5e", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 9, "link_id": "t3_5yjcc", "retrieved_on": 1427426165, "body": "pyparsing has been a blast to use. It's my goto library for parsing DSLs or the similar sort.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yjcc", "id": "c029s5e", "author_flair_css_class": null}