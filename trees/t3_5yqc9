{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "Jimmy", "created_utc": "1192883376", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "vstrom", "created_utc": "1192888277", "children": [{"controversiality": 0, "retrieved_on": 1427425944, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02a97h", "gilded": 0, "link_id": "t3_5yqc9", "downs": 0, "score": 3, "score_hidden": false, "id": "c02a97h", "author": "[deleted]", "created_utc": "1192889491", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02a95c", "body": "&gt; They could be compiling to strings, but I don't think that's the case.\n\nIt's a bytecode engine:\n\nhttp://www.usenix.org/publications/library/proceedings/tcl96/full_papers/lewis/index.html", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193161561", "ups": 2, "gilded": 0, "link_id": "t3_5yqc9", "retrieved_on": 1427425671, "score": 2, "body": "It's really a kind of cached compiling system.  If the system could statically determine that something could be compiled (or at least parsed) it would do so.  But there's lots of little things you could do that would hinder the compilation.  For instance 'if {$a &gt; $b}' can be compiled, but 'if \"$a &gt; $b\"' couldn't be compiled because $a could be something like the string '$b &gt; $c &amp;&amp; 2' which would evaluate to 'if \"$b &gt; $c &amp;&amp; 2 &gt; $b\"'.  Of course usually $a was just an integer, but the interpreter couldn't *know* that, and so it couldn't compile that expression.  So it didn't really change the language at all, it was just an optimization.  Some Logos have similar optimizations, I believe; at least Object Logo did.", "author": "ianb", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c02au8w", "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02au8w", "parent_id": "t1_c02a95c", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a95c", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5yqc9", "retrieved_on": 1427425945, "body": " Before Tcl Version 8.0, the Tcl core did not include an internal compiler. Tcl Version 8.0 included a compiler; however, this compiler was internal to the interpreter, and compiled scripts could not be saved for later use.\n\n(copied from activestate.com) \n\nThey could be compiling to strings, but I don't think that's the case.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a8wu", "id": "c02a95c", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "davidw", "created_utc": "1192918837", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "toyboat", "created_utc": "1192920855", "children": [{"distinguished": null, "controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02ad6k", "gilded": 0, "link_id": "t3_5yqc9", "retrieved_on": 1427425893, "score": 2, "score_hidden": false, "id": "c02ad6k", "author": "davidw", "created_utc": "1192949550", "author_flair_text": null, "edited": false, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02abau", "body": "In Tcl, it's very straightforward:\n\n    if { something } {\n       do something\n    } else {\n       do something else\n    }\n\nYou can do the same thing with your own commands:\n\n    begin {\n        do something\n    } rescue {e} {\n        do something else\n    }\n\nIt wouldn't be difficult to write the above in pure Tcl.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c02abau", "controversiality": 0, "archived": true, "link_id": "t3_5yqc9", "retrieved_on": 1427425918, "score_hidden": false, "id": "c02abau", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ab5g", "body": "Could you clarify what you mean by taking many blocks?  In Ruby, one can do:\n\n    block1 = lambda { p \"block1\" }\n    block2 = lambda { p \"block2\" }\n    a_method(block1, block2)\n\nif one wishes to pass around multiple blocks.  But I don't know any Tcl, so perhaps I'm misunderstanding.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yqc9", "retrieved_on": 1427425919, "body": " What's interesting is that *everything* in Tcl is a command, `if`, `while`, `proc`, etc. included, meaning that the language lets you redifine control commands (not recommended) or define your own, which unlike Ruby, can take as many \"blocks\" as they want.  Practical example: C's do ... while does not exist in Tcl, but you can write it in pure Tcl.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02ab5g", "parent_id": "t1_c02a8wu", "id": "c02ab5g", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "name": "t1_c02a8wu", "controversiality": 0, "archived": true, "link_id": "t3_5yqc9", "retrieved_on": 1427425948, "score_hidden": false, "id": "c02a8wu", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yqc9", "body": "Interesting how Tcl procedures are just strings; when I considered representing functions as strings in my own language, I thought I was crazy.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "crazymunch", "created_utc": "1192888659", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "whitlock", "created_utc": "1192891624", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192895314", "ups": 3, "gilded": 0, "link_id": "t3_5yqc9", "retrieved_on": 1427425940, "score": 3, "body": "Nah, not that old yet ;)\nhttp://www.microworlds.com/\nWe just used an earlier version of that program", "author": "crazymunch", "archived": true, "distinguished": null, "edited": false, "id": "c02a9ll", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a9ll", "parent_id": "t1_c02a9cc", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yqc9", "retrieved_on": 1427425942, "body": "I think the name of the program you want is LogoWriter.  There are modern variants of it, so if you feel nostalgic you can fire it up on your modern OS.  \n\nGood times. ", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02a9cc", "parent_id": "t1_c02a964", "id": "c02a9cc", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5yqc9", "retrieved_on": 1427425945, "id": "c02a964", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a964", "parent_id": "t3_5yqc9", "body": "Back in maths in 7th grade we used logo, we had to program the little teensy turtles to draw things like the olympic rings and little mini houses - we used this little cool program called 'microworlds' - those were the days xD", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192900469", "ups": 2, "gilded": 0, "link_id": "t3_5yqc9", "retrieved_on": 1427425934, "score": 2, "body": "I remember Mr. Wizard teaching a feather-haired girl how to plot a triangle in Logo.", "author": "larrypastore", "archived": true, "distinguished": null, "edited": false, "id": "c02a9y3", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a9y3", "parent_id": "t3_5yqc9", "score_hidden": false, "author_flair_css_class": null}