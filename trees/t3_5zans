{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193587780", "children": [{"controversiality": 0, "retrieved_on": 1427425147, "subreddit_id": "t5_2fwo", "created_utc": "1193591547", "ups": 3, "gilded": 0, "link_id": "t3_5zans", "downs": 0, "score": 3, "body": "Scala.  Scala is more mature since it has the complete Java libraries and an untold number number of Java third party packages behind it which can all be manipulated in Scala fashion.", "id": "c02bt8j", "author": "sbrown123", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02bt8j", "parent_id": "t1_c02bsxb", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425151, "id": "c02bsxb", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bsxb", "parent_id": "t3_5zans", "body": "Erlang. Erlang is very mature, and with [YAWS](http://yaws.hyber.org) to serve up the pages, you can get a good fit for HTML&amp;PHP-like integration.\n\n[EDIT: I changed my mind a couple of replies down]", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "onmytoes", "created_utc": "1193587856", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193588859", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1193596788", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193599816", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 3, "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425137, "score": 3, "body": "&gt; The places I hear about Perl shining is a text manipulation and system utilities.\n\nAlthough Perl does excel at those tasks, its killer app is CPAN. No other language/community has come close to implementing a library system as seamless and exhaustive.\n\nDon't get me wrong, CPAN has its flaws. And Perl certainly has its flaws, too -- i prefer to use any of a number of other languages. But, if it comes down to the wire, and i can either implement a complicated spec library from scratch, or bite the bullet and use Perl and CPAN, i tend to fall back on Perl and CPAN. Why? Because it will work. And if, on the rare occasion, it doesn't work, it's cost me almost no time to investigate it.\n", "author": "jmelesky", "created_utc": "1193602837", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bu2b", "parent_id": "t1_c02btsd", "score_hidden": false, "id": "c02bu2b"}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02btsd", "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425141, "score_hidden": false, "id": "c02btsd", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02btjk", "body": "By standard, I meant what's installed on your machine. CPAN has inspired a metric arseload of other languages to do the same (even Erland has [CEAN](http://cean.process-one.net/]) but none even come close. As far as other libraries available, but not in one place, I'm pretty sure C, C++, and Java are in Perl's league. \n\nMy opinion on Perl is informed by people who've run into its limitations, and moved on to Ruby and Python, mostly. The places I hear about Perl shining is a text manipulation and system utilities.  As for Perl's REPL, this is the first time I've ever heard it mentioned. I've mostly read (albeit not much) about people edit-compile-run-debug cycling, not the incremental building you usually do with the languages I mentioned. These things lead me away from learning Perl more in depth. Similarly there's no juice in it for me to spend any time on Ruby, as I'm already familiar with Python and Lisp.\n\nAnd aren't reddit, slashdot, et al. all about uninformed opinions?", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02btjk", "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425143, "score_hidden": false, "id": "c02btjk", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02bt0m", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bt0m", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5zans", "retrieved_on": 1427425150, "id": "c02bt0m", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02bsxh", "body": "I don't know if the *standard* set of libraries is too much thinner. Do you get a memory resident/on-disk db with Perl? (I've got Perl on  my system, but never hacked on it. I tried once a few years ago, but it doens't have a REPL, like Python, Scheme, Lisp, Erlang, Ocaml, Haskell, and Scala do, so I quit) Perl FTW for text scanning and manipulation (assuming you don't remember enough sed to do it) but if you want to build an application beyond that, then you may need another primary language. Scala leverages all of Java's libraries, overdesigned as they may be. Hmm, I guess I'd have to change my mind and reccommed Scala.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 8, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425151, "id": "c02bsxh", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bsxh", "parent_id": "t3_5zans", "body": "Sure, you get concurrency with Erlang, but you also get a much thinner set of standard libraries (for example, no unicode string support).  It completely depends on your application which is more important.\n\nIt also depends what kind of processing your application does.  For text scanning and manipulation, Perl tends to walk all over Erlang in terms of performance and efficient memory usage.  Which is better: being 10x faster on a single CPU or being able to scale up to  10 CPUs?", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 17, "author": "Gotebe", "created_utc": "1193589383", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193591005", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1193592825", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "mcantelon", "created_utc": "1193611597", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193637588", "ups": 1, "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425102, "score": 1, "score_hidden": false, "id": "c02bwq7", "author": "Gotebe", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bwq7", "parent_id": "t1_c02buqg", "body": "Whoops! Sorry, that's how I understood it.\n\nBut probably subconsciously, I was drawn to such understanding by personal opinion that such languages will be useless for web apps in a first place, because of the maturity of web app frameworks elsewhere. Can't compete if you didn't train enough, in a way.\n\nOn a more related note, I wouldn't know how a particular concurrent language would help better than other wrt concurrency issues *specific to web apps*. It's more the question of what *are* they, besides well-known and worked-on ones?\n\nI suspect there's very little concurrency issues *specific* to web apps. Couple that with my post above, MHO is that \"it matters too little to matter\".\n\nedit: clarification", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02buqg", "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425128, "score_hidden": false, "id": "c02buqg", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btch", "body": "Sorry for the fuzziness... I'm asking that, should the need for concurrency arise, what web app development language makes sense (not the yes/no interpretation).", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425146, "id": "c02btch", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02btch", "parent_id": "t1_c02bt6t", "body": "The question is ambiguous. It can be interpreted as a yes/no question. \"Should one choose [any particular language] for web app development leveraging concurrency?\"", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "crayz", "created_utc": "1193593152", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02btds", "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425146, "score": 6, "body": "As an addendum, depending on the problem you might still want to write the web application itself in Python/Ruby/etc, and simply offload the cpu-intensive code to a separate service written in an appropriate language", "id": "c02btds", "author": "crayz", "created_utc": "1193593412", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 6, "parent_id": "t1_c02btd4", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425146, "id": "c02btd4", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02btd4", "parent_id": "t1_c02bt6t", "body": "His point is that concurrency is of little use in a normal web application. Most web applications can get non-parallel code to execute a request in the amount of time desired by the end user. After that, scaling is just a matter of more threads/processes/cpus\n\nCertainly there are exceptions. If the OP is one though, the question would be, \"what type of web application are you building that can't process a user request within a fraction of a second with normal serial code?\", before answering what language would best suit that need", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02bt6t", "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425149, "score_hidden": false, "id": "c02bt6t", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bt1y", "body": "What is your \"No.\" in response to? How do you know the OP is not starting from scratch? And what's your answer to his question?", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bt1y", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 17, "link_id": "t3_5zans", "retrieved_on": 1427425149, "body": "No.\n\nFor the most part, in a web app, you couldn't less about concurrency. For one given client, requests come in a sequential manner. Different clients, again for the most part, do not compete for same resources that aren't already written and optimized for concurrency (e.g. database or (distributed) cache).\n\nIf we were starting from scratch, we could have talked about the need for powerful tools. But we do not, and the complexity of web apps mostly does not come from concurrency issues.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5zans", "id": "c02bt1y", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "Poromenos", "created_utc": "1193592784", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "ItsAConspiracy", "created_utc": "1193598240", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "[deleted]", "created_utc": "1193603398", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193612629", "name": "t1_c02buth", "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425126, "score": 1, "score_hidden": false, "id": "c02buth", "author": "ayrnieu", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bu44", "body": "&gt; They reach that number by\r\n\r\nsome sinister means that, to underline it, does not also benefit Apache.\r\n\r\n&gt; As soon as you web app starts to do actual work, raw cpu performance matters a lot more and will be your scalability bottleneck.\r\n\r\nWhat webapps are you dealing in?", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "ItsAConspiracy", "created_utc": "1193613041", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02bxle", "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425090, "score": 0, "body": "FWIW, I have fallen for that Erlang hype, too.\n\nYou're not alone :-(.", "author": "Gotebe", "created_utc": "1193656420", "distinguished": null, "edited": false, "id": "c02bxle", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 0, "parent_id": "t1_c02buuf", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02buuf", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5zans", "retrieved_on": 1427425126, "id": "c02buuf", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bu44", "body": "You're right, I looked it up and the benchmark was concurrent connections. Sorry bout that.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bu44", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 8, "link_id": "t3_5zans", "retrieved_on": 1427425137, "body": "No web server can serve 80K req/s.\n\nYaws can handle a large number of concurrent connections but that's a completely different thing. This is because it can handle more than one connection per hardware context (just like lighttpd which should be competitive with yaws on this benchmark).\n\nThey reach that number by slowing down the clients to maybe sending a few bytes per second or so. That way the number of connections in flight goes up considerably, while still keeping CPU load small (so that the comparatively slow erlang VM can still handle it).\n\nHandling a large number of connections is not important in most web apps. As soon as you web app starts to do actual *work*, raw cpu performance matters a lot more and will be your scalability bottleneck.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02btnn", "id": "c02bu44", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 4, "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425128, "score": 4, "body": "While rfoos has pointed out the error in the \"requests per second\" statement...I think it worth pointing out just how silly it is to even think about 80,000reqs/sec coming from a single box (or even 4000, if it's doing anything other than serve tiny static files on a Gbit link).\n\n80,000rps = 6912000000 request per day\n\nThat's 6.9 billion requests in a day.\n\nSo, every person on the planet is viewing one page on your site each day, perhaps?\n\nYahoo, the most visited website on the web, probably serves about that many requests (from a few thousand machines).\n\nGoogle delivers \"only\" 1.2 billion searches day.  Also from a few thousand machines.", "author": "SwellJoe", "created_utc": "1193611387", "distinguished": null, "edited": false, "id": "c02bupr", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02bupr", "parent_id": "t1_c02btnn", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": -2, "name": "t1_c02btnn", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zans", "retrieved_on": 1427425142, "score_hidden": false, "body": "\"since each request can go to a different thread/process\"\r\n\r\n...which is why it helps to use a webserver with its own extremely lightweight threading, instead of heavy OS threads. For example, Yaws, the Erlang webserver which stood up under 80,000 requests per second, compared to Apache maxing out at 4000 on the same machine.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02btcc", "id": "c02btnn", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 9, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zans", "retrieved_on": 1427425146, "body": "  Why would you choose a distributed language for web apps, given that by their very nature web requests are parallelizable, since each request can go to a different thread/process. Unless you have **one** request that requires heavy computation, but I can't think of a scenario where that would be true.  \r\n\r\nJust use your favorite language, functional/parallelizable or not.  ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02btcc", "parent_id": "t3_5zans", "id": "c02btcc", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "Arrgh", "created_utc": "1193596302", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193600025", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193601497", "name": "t1_c02btxl", "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425138, "score": 0, "score_hidden": false, "id": "c02btxl", "author": "Arrgh", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 0, "parent_id": "t1_c02btsq", "body": "No. :)\n\nScala makes a lot of sense to me.  I've found Lift to tell a pretty compelling story, especially when you read about DPP's extensive background in real production web engineering.\n\nWith Erlang I haven't done much more than read the Armstrong book, but I've gotten a feeling that while the whole Erlang system is  elegant and well engineered, it just doesn't quite have the chops to take over a big chunk of the industry.  Mainly because building a high-performance virtual machine is really hard, and has been done successfully about a dozen times.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02btsq", "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5zans", "retrieved_on": 1427425141, "id": "c02btsq", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02btic", "body": "Any near-useless but flamewar-instigating stats on YAWS vs. Lift?", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02btic", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -1, "link_id": "t3_5zans", "retrieved_on": 1427425143, "id": "c02btic", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5zans", "body": "http://liftweb.net/index.php/Main_Page", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "[deleted]", "created_utc": "1193603748", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "infinite", "created_utc": "1193775139", "children": [{"controversiality": 0, "retrieved_on": 1427424952, "subreddit_id": "t5_2fwo", "archived": true, "score": 2, "link_id": "t3_5zans", "downs": 0, "name": "t1_c02c89g", "created_utc": "1193776311", "score_hidden": false, "id": "c02c89g", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "gilded": 0, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02c83t", "body": "It took me a good 12 months to get this far. Personally, I'd rather ditch hibernate for something like db4o - that is, if I am forced to stay on the JVM (which I am in the foreseeable future).\n\nI'll have to have a good think about the advice I would offer someone in your situation.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427424954, "id": "c02c83t", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c83t", "parent_id": "t1_c02bu5g", "body": "You are living my dream. Any tips for someone who loves hibernate and java  and struts and wants to move to Scala?", "author_flair_css_class": null}], "subreddit": "programming", "ups": 7, "name": "t1_c02bu5g", "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425135, "score_hidden": false, "id": "c02bu5g", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5zans", "body": "I'm using Scala but not for its concurrency model. Instead:\n\n* the standard basic reasons to use a decent language (I have access to folds, filter, etc.)\n\n* literal XML (and therefore, XHTML) is type-checked\n\n* I can use a RDBMS (to suit the suits) but use a Java-written ORM (Hibernate - ick! but oh well)\n\n* I can have implicit function arguments, type-classes, higher-order polymorphism and all those clever things that Java Joey will die never knowing\n\n* I can write type-safe functions to achieve 'what everyone else is achieving', only better. [Here is an example for form field validation](http://tinyurl.com/yrgcf2) that binds validation through Either and accumulates errors should any be encountered.\n\nThere are many more reasons and examples.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "knv", "created_utc": "1193605236", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425127, "score": 1, "body": "Ask on [IRC](http://www.trapexit.org/Erlang_IRC_Channel).", "author": "ayrnieu", "created_utc": "1193612442", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02busv", "parent_id": "t1_c02bu9s", "score_hidden": false, "id": "c02busv"}], "subreddit": "programming", "ups": 0, "name": "t1_c02bu9s", "controversiality": 0, "archived": true, "link_id": "t3_5zans", "retrieved_on": 1427425136, "score_hidden": false, "id": "c02bu9s", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5zans", "body": "It's kinda OT but anyone here has any experiences with Erlang Ports mechanism?  ", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425131, "subreddit_id": "t5_2fwo", "created_utc": "1193608440", "ups": 1, "gilded": 0, "link_id": "t3_5zans", "downs": 0, "score": 1, "id": "c02buih", "author": "mykdavies", "archived": true, "distinguished": null, "edited": false, "body": "Which question are you asking?\n\n1) Should I be worrying about making my web apps concurrent from the ground up?\n\nNo - Don't forget the first rule of optimisation: Don't do it. (The second rule [for experts] being: Don't do it yet).\n\n2) Given that I need concurrency in my web apps, which language is best?\n\nSee other answers.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02buih", "parent_id": "t3_5zans", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193612338", "name": "t1_c02bush", "gilded": 0, "link_id": "t3_5zans", "retrieved_on": 1427425127, "score": 1, "score_hidden": false, "id": "c02bush", "author": "ayrnieu", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5zans", "body": "&gt; Erlang, [for] web app development leveraging concurrency?\r\n\r\nOthers have already pooh-poohed the utility of concurrency in web development.  This doesn't disqualify either language you asked about ('Erlang equalsign concurrency' [was always a caricature](http://programming.reddit.com/info/kdih/comments/)), but you should accept that you've gotten on the wrong path and ask a better question.  If you really meant to ask \"Should I choose Erlang or Scala for web development?\", I'd say: pick the one you know better, or ask instead about the frameworks that either have.\r\n\r\nIf you're not sure what question you should ask, I'd recommend: \"Can anyone tell me about (or direct me to where they've already told the world about) their experiences with web development in Erlang?\" to the erlang-questions list, concurrent with a similar question to Scala's community.", "author_flair_css_class": null}