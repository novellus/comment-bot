{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "mhd", "created_utc": "1192608711", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "bitwize", "created_utc": "1192612628", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "mhd", "created_utc": "1192619440", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "OMouse", "created_utc": "1192625761", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192628016", "ups": 3, "gilded": 0, "link_id": "t3_5yh5b", "retrieved_on": 1427426225, "score": 3, "body": " &gt; And by saying it's closer to the metal, well that's just a weak attempt to attract C/C++ coders.\n\nThere are still C programmers reading reddit? ;)\n\nBut I have to agree, Forth is definitely worth checking out. And GForth actually _is_ a good starting point, as you really don't need to program your own device drivers in a boot-loaded, screen-oriented forth derivate to appreciate the language.\n\nFor those who need a bit more color, PostScript is also a neat RPN (reverse polish notation) language. \n\nIncidentally, both have very good books starting with \"thinking\"...\n\n[Thinking Forth](http://thinking-forth.sourceforge.net/)\n\n[Thinking in PostScript](http://www.rightbrain.com/pages/books.html) ", "author": "mhd", "author_flair_text": null, "distinguished": null, "edited": true, "id": "c029nj8", "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029nj8", "parent_id": "t1_c029ndk", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c029ndk", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yh5b", "retrieved_on": 1427426227, "score_hidden": false, "id": "c029ndk", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029n3p", "body": "Sorry, I was looking through some FORTH spec and it had an assembly-extensions section. So that's pretty close to the metal I think. The only other languages that let you include assembly are C, C++ (by way of C) and that's it (as far as I know).\n\n&gt;Yes, the neccesary tools are much simpler and smaller, but speaking purely about abstraction, you're not that much closer.\n\nTrue enough! But hey, it's a different way of thinking (different syntax, uses stack push/pop, etc) than C and so I think it's important for others to check it out to expand their minds. And by saying it's closer to the metal, well that's just a weak attempt to attract C/C++ coders.\n\n&gt;Actually, the ability to work at different levels of abstractions is one of the best points of Forth, so this is really not the best advertising statement possible\n\nFind me a FORTH spec, and submit it with a better headline :P", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c029n3p", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yh5b", "retrieved_on": 1427426231, "score_hidden": false, "id": "c029n3p", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029mub", "body": "I have dabbled a little into forth (and occasionally even Postscript), I just have a slight problem with the title. Even with Forth as a glorified macro assmebler, you're not that much closer to the hardware than e.g. Turbo-Pascal with its inline assmebler. Yes, the neccesary tools are much simpler and smaller, but speaking purely about abstraction, you're not that much closer.\n\nActually, the ability to work at different levels of abstractions is one of the best points of Forth, so this is really not the best advertising statement possible (apart from the fact thate bare metal programming is a bit gauche right now -- the young kiddies have moved from assembly to script languages nowadays ;) )", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 5, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yh5b", "retrieved_on": 1427426235, "body": "GForth is indeed written in C and runs on top of a virtual machine to boot, though I can see where it'd make an excellent learning tool.\n\nIf taking Chuck Moore's red pill (\"there is no OS\") is too scary for you, you can try something like [Albert van der Horst's lina forth](http://home.hccnet.nl/a.w.m.van.der.horst/lina.html) which runs under linux but assembles words directly into x86 code like a \"real\" FIG-forth.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029mub", "parent_id": "t1_c029moz", "id": "c029mub", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 5, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yh5b", "retrieved_on": 1427426237, "body": "Hmm? Isn't GForth done in C? Are we talking about hair metal?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029moz", "parent_id": "t3_5yh5b", "id": "c029moz", "author_flair_css_class": null}