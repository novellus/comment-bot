{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "[deleted]", "created_utc": "1193070481", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "a1k0n", "created_utc": "1193072915", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193075479", "name": "t1_c02all5", "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425784, "score": 6, "score_hidden": false, "id": "c02all5", "author": "a1k0n", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 6, "parent_id": "t1_c02al7h", "body": "Well, now you ruined it by editing.\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 6, "name": "t1_c02al7h", "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425789, "score_hidden": false, "id": "c02al7h", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02akvd", "body": "Did you copy and paste that just to see if anybody notices that you changed \"as a whole\" to \"asshole\", or what?", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -2, "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425793, "id": "c02akvd", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02akvd", "parent_id": "t3_5yutf", "body": "[deleted]", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "[deleted]", "created_utc": "1193073328", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "DannoHung", "created_utc": "1193073822", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1193074973", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "tphyahoo", "created_utc": "1193080298", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "jleedev", "created_utc": "1193086606", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193091356", "ups": 2, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425756, "score": 2, "body": "I actually pasted it into emacs and had it loaded in ghci with :l.\n\ngot some weird typing error.", "author": "tphyahoo", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02anou", "parent_id": "t1_c02an5t", "score_hidden": false, "id": "c02anou"}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425763, "body": "You can't just cut and paste a complete program into ghci. [Here's why](http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci.html).", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02an5t", "parent_id": "t1_c02am8p", "id": "c02an5t", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02am8p", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yutf", "retrieved_on": 1427425775, "body": "impure, uses System.IO.Unsafe. I cut and paste it into ghci, but it didn't compile.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02ali3", "id": "c02am8p", "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "name": "t1_c02ali3", "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425785, "score_hidden": false, "id": "c02ali3", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02albo", "body": "[deleted]", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "stepcut251", "created_utc": "1193078625", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "tphyahoo", "created_utc": "1193080316", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "stepcut251", "created_utc": "1193087431", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02any8", "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425753, "score": 1, "score_hidden": false, "body": "I tend to learn best when there's something I can compile -- and tinker with.\n\nWere you actually able to get this to compile?\n\nIf so I'll try again.\n\nI also posted to the list and made some comments on the wiki about this:\n\nhttp://www.haskell.org/haskellwiki/Introduction/Direct_Translation", "author": "tphyahoo", "created_utc": "1193093706", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02an9d", "id": "c02any8", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02an9d", "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425762, "score_hidden": false, "id": "c02an9d", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02am8t", "body": "oh, sorry. It is part of a multipart series. I don't think he intended for people to actually use it for sorting -- just learning :)\n\nIt works with any monad that supports MonadRef and MArray (mutable arrays). That could be the IO monad, or it could be the ST monad. At the end he shows how to use it inside the ST monad, which results in a function that is indeed pure. That's what makes it cool. Even though the insides of the function are very 'impure', with destructive updates, references, etc, we end up with a function that is guaranteed by the compiler to be pure. It will always give the exact same answer for the same input, won't have any observable side effects, etc.\n\nhttp://augustss.blogspot.com/2007/08/programming-in-c-ummm-haskell-heres.html\nhttp://augustss.blogspot.com/2007/08/what-about-arrays-after-doing-my-little.html\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02am8t", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yutf", "retrieved_on": 1427425775, "id": "c02am8t", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02am0f", "body": " Seems to be pure (no io). Right? \n\nBut, like the other quicksort referenced, this didn't compile. (augustss seems to be using a lot of helper functions that he didn't give a listing for.\n\nToo bad.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425778, "id": "c02am0f", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02am0f", "parent_id": "t1_c02albo", "body": "http://augustss.blogspot.com/2007/08/quicksort-in-haskell-quicksort-is.html", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425766, "subreddit_id": "t5_2fwo", "created_utc": "1193085029", "ups": 2, "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 2, "id": "c02amxc", "author": "tphyahoo", "archived": true, "distinguished": null, "edited": false, "body": "roconnor claims that the \"real\" quicksort is really treesort in haskell:\n\nhttp://programming.reddit.com/info/2h0j2/comments\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02amxc", "parent_id": "t1_c02albo", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193085492", "ups": 3, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425765, "score": 3, "id": "c02an04", "author": "Codebender", "archived": true, "distinguished": null, "edited": false, "body": "Doesn't the C-style, in-place qsort go against the basic tenets of Haskell, namely immutable data structures?\n\nI think that's similar to asking how to do a for-loop in Haskell.  The answer is that you don't.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02an04", "parent_id": "t1_c02albo", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425787, "body": "Got a link to a \"proper\" version of Quicksort in Haskell?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02albo", "parent_id": "t1_c02al9c", "id": "c02albo", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425780, "subreddit_id": "t5_2fwo", "created_utc": "1193077513", "ups": 5, "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 5, "body": "Shrug, the classic declarative QuickSort definition is for introductory purposes though. But for some reason C programmers get really fired up about it -- misleading advertising or something?", "author": "dons", "archived": true, "distinguished": null, "edited": false, "id": "c02alvn", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02alvn", "parent_id": "t1_c02al9c", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02al9c", "ups": 12, "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425788, "score_hidden": false, "id": "c02al9c", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "body": "[deleted]", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -5, "author": "redditnoob", "created_utc": "1193073973", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 15, "author": "millenix", "created_utc": "1193086308", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193114182", "ups": 1, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425726, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02apzz", "parent_id": "t1_c02an44", "id": "c02apzz", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 15, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425764, "body": "Having spent this entire summer working with the author, and in fact discussing this paper in depth, no, it has no pro-Haskell religious fervor. You caught the tone of derision, but missed its intended target: the very 'elders' who describe concise but ridiculously inefficient algorithms and then present them as implementations of something fast and well-known. The point being made is that it is possible to write efficient algorithms in a purely functional style, but it requires care that many Haskell programmers don't exercise because they value purported elegance over all else.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02an44", "parent_id": "t1_c02alca", "id": "c02an44", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425758, "subreddit_id": "t5_2fwo", "created_utc": "1193090319", "ups": 7, "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 7, "body": "The obvious two lines you would write would not, in fact, be the Sieve of Erotosthenes.  So yes, you could write them, and you would have an O(n^2) algorithm on your hands, and you would wonder why it takes so long to find the first 100 primes.  \n\nI've never used Haskell before, but this article was extremely interesting and thought provoking, and you completely missed the point.  The reason its WRONG is because ITS NOT THE SIEVE OF ERATOSTHENES.  Its WRONG because people are claiming they have the SOE in two lines of Haskell.  They wouldn't be 'wrong' if they were just claiming to have an algorithm for finding a list of primes, and thats the whole reason the paper was written.", "author": "erockenjew", "archived": true, "distinguished": null, "edited": false, "id": "c02anks", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02anks", "parent_id": "t1_c02alca", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -5, "name": "t1_c02alca", "controversiality": 0, "archived": true, "link_id": "t3_5yutf", "retrieved_on": 1427425787, "score_hidden": false, "id": "c02alca", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "body": "This article seems to contain a sort of pro-Haskell religious fervor, doesn't it? So something which is mathematically equivalent to the Sieve of Eratosthenes, and which is simple and appealing to code in a lazy functional language, turns out to be deceptively useless in practice. The moral of the story should be: it is tough and subtle to get things right with lazy evaluations, and there are pitfalls. But instead of that we get \"The reason it doesn't work is because you are WRONG and you are PHONY and you haven't respected the wisdom of the elders!! Since lazy evaluation and functional thinking are The Right Way to solve every problem, it must follow that YOU are the problem here.\"\n\nOk, so now I need to roll my own Heap-based Priority Queue, and turn the obvious two lines into a page of code, but once I do that I will see how beautiful and elegant it all is. \n\nAnd at the end of it all, I'd be surprised if it could find the first n primes within an order of magnitude of what a few lines of array-based C code (or even Java) would take.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193076891", "ups": -6, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425781, "score": -6, "id": "c02als7", "author": "KazamaSmokers", "archived": true, "distinguished": null, "edited": false, "body": "Eratosthenes.... RIDICULOUS!!!", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02als7", "parent_id": "t3_5yutf", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425778, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02am1h", "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 6, "score_hidden": false, "body": "http://ed-thelen.org/comp-hist/lehmer-sive-chain.jpg\n\nNow that is a real prime number sieve\nhttp://ed-thelen.org/comp-hist/Lehmer-Factoring-Machines.html", "author": "cavedave", "created_utc": "1193078840", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 6, "parent_id": "t3_5yutf", "id": "c02am1h", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 24, "author": "[deleted]", "created_utc": "1193079446", "children": [{"controversiality": 0, "retrieved_on": 1427425768, "subreddit_id": "t5_2fwo", "archived": true, "ups": 2, "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 2, "body": "That's why I love it.", "author": "Ma8e", "created_utc": "1193084011", "distinguished": null, "edited": false, "id": "c02amrl", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02amrl", "parent_id": "t1_c02am4e", "score_hidden": false, "author_flair_css_class": null}, {"body": "And a term which people are proud of!\n", "controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425722, "score": 1, "score_hidden": false, "id": "c02aqcu", "author": "shabda", "created_utc": "1193117761", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02am4e", "name": "t1_c02aqcu", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02am4e", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 24, "link_id": "t3_5yutf", "retrieved_on": 1427425777, "id": "c02am4e", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "body": "My favorite thing about computer science is that it's the only academic field where \"lazy\" is a technical term. :-)", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -9, "author": "SacrificialGoat", "created_utc": "1193082811", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193084358", "ups": 4, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425768, "score": 4, "body": " The Sieve of Eratosthenes is important for prime numbers.  Prime numbers are important for number theory.  Number theory is important for math.  Math is important for programming. ", "author": "ChrisRathman", "author_flair_text": null, "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02amta", "parent_id": "t1_c02aml6", "score_hidden": false, "id": "c02amta"}], "subreddit": "programming", "ups": -9, "name": "t1_c02aml6", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425771, "score_hidden": false, "body": "What the fuck is a Sieve of Eratosthenes and why does it matter to anyone, anywhere on the planet?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "id": "c02aml6", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 23, "author": "Captain-Obvious", "created_utc": "1193084957", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": -7, "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425759, "score": -7, "id": "c02angg", "author": "MarshallBanana", "created_utc": "1193089150", "distinguished": null, "edited": false, "body": "Who the hell is modding The Captain down? You come out here and I'll punch you in the nose!", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02angg", "parent_id": "t1_c02amwy", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 23, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425766, "body": "I've figured it out! It's an algorithm to find prime numbers!", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02amwy", "parent_id": "t3_5yutf", "id": "c02amwy", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "imneme", "created_utc": "1193086857", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Wriiight", "created_utc": "1193096855", "children": [{"controversiality": 0, "retrieved_on": 1427425747, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02aofr", "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 10, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "created_utc": "1193098308", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 10, "parent_id": "t1_c02ao95", "id": "c02aofr", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02ao95", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425749, "score_hidden": false, "body": "Lists are a horrific data structure, often the worst data structure you can pick in terms of both size and efficiency.  Makes \"everything is a list\" languages a bit of a turn off to me.  (I do realize that trees are typically no problem in these languages).  I've never quite gotten how large data structures of any sort and side effect free languages are supposed to work together.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02an75", "id": "c02ao95", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 12, "name": "t1_c02an75", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yutf", "retrieved_on": 1427425763, "score_hidden": false, "body": "This paper and the ideas it contains has been discussed earlier in the year on the Haskell mailing list in [February](http://www.haskell.org/pipermail/haskell-cafe/2007-February/thread.html#22765) and [July](http://www.haskell.org/pipermail/haskell-cafe/2007-July/thread.html#29391).  Probably most interesting is that the author of this paper posted [Haskell Implementations](http://www.cs.hmc.edu/~oneill/code/haskell-primes.zip) of a number of different Haskell prime finders.\n\nWhat distinguishes *all* the Haskell implementations over the usual C versions is that the algorithms are *incremental*.  They'll keep producing primes forever, whereas the traditional C versions produce a finite number of primes.  The fundamental trick (use a heap!) could equally well be used in a C version to achieve incremental output, although C programmers may have other options too. \n\nThe author doesn't really say it in the paper, but the discussion on the mailing list shows that this way of finding a list of primes turns out to be the fastest implementation of \"The Sieve\" in Haskell (so far).  Almost certainly someone could write something that used a better algorithm, but it doesn't look like anyone has bothered to do so yet, so for now it's the reigning Haskell list-of-primes speed champion.\n\nI would say that the author probably could do with having a less combative tone in the paper, but if you read the discussion on the mailing list, it really does seem like these functional programming folks are averse to using basic data structures you see in early CS classes (some of them seem to be \"linked lists forever!!\"). \n\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "id": "c02an75", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "martinbishop", "created_utc": "1193096884", "children": [{"controversiality": 0, "retrieved_on": 1427425749, "subreddit_id": "t5_2fwo", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yutf", "downs": 0, "score": 3, "body": "And [here](http://stuff.mit.edu/afs/sipb/project/ocaml/src/current/test/quicksort.ml) is a \"real\" version of quicksort, in OCaml", "author": "martinbishop", "created_utc": "1193097087", "distinguished": null, "edited": false, "id": "c02aoad", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02aoad", "parent_id": "t1_c02ao9c", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02aomj", "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425744, "score": 2, "score_hidden": false, "body": " Here are lots of real sieves, including in Haskell :)\n\nhttp://shootout.alioth.debian.org/gp4/benchmark.php?test=nsieve&amp;lang=all\n\nI note rather good performance too ;) ", "author": "dons", "created_utc": "1193100525", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02ao9c", "id": "c02aomj", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02ao9c", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 4, "link_id": "t3_5yutf", "retrieved_on": 1427425749, "id": "c02ao9c", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yutf", "body": "[Here](http://caml.inria.fr/pub/old_caml_site/Examples/oc/basics/sieve_vect.ml) is a \"real\" version of the sieve in OCaml.", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "dmd", "created_utc": "1193112469", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193119656", "gilded": 0, "link_id": "t3_5yutf", "retrieved_on": 1427425720, "score": 1, "score_hidden": false, "id": "c02aqi0", "author": "jaggederest", "archived": true, "distinguished": null, "edited": false, "body": "She appears to be an attractive female on the internet. I must go, my head is exploding.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02aqi0", "parent_id": "t1_c02apto", "ups": 1, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02apto", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 7, "link_id": "t3_5yutf", "retrieved_on": 1427425729, "id": "c02apto", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5yutf", "body": "[Author's home page](http://www.cs.hmc.edu/~oneill/)\n\nShe writes:\n&gt; The Keynote XML format is so bad that it isn't merely an embarrassment to Apple, it actually makes baby Jesus cry.\"", "author_flair_css_class": null}