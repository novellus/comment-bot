{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "nevinera", "created_utc": "1193339402", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 10, "author": "[deleted]", "created_utc": "1193340178", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "nevinera", "created_utc": "1193345523", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "nglynn", "created_utc": "1193345901", "children": [{"controversiality": 0, "retrieved_on": 1427425351, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bdjc", "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 3, "score_hidden": false, "body": "    Couldn't match expected type 'English'\r\n           against inferred type 'Maybe English'\r\n    In the expression: not the issue.\r\n    In the expression:\r\n\r\n&gt; not the issue. qed IS still about logic though. this article used none - he made some assumptions, then did some multiplication, and a conclusion.        ", "author": "shub", "created_utc": "1193356758", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02bcd8", "id": "c02bdjc", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5z4dm", "retrieved_on": 1427425367, "id": "c02bcd8", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bcd8", "parent_id": "t1_c02bcb1", "body": "You fail to capitalise the initial letter of your sentences, ergo you are guilty of a syntactic error. Does that render the thrust of your argument invalid?", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425362, "subreddit_id": "t5_2fwo", "created_utc": "1193347915", "ups": 6, "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 6, "body": "You are committing the error of _post hoc ergo propter hoc_!  q.e.d. literally means \"which was to be demonstrated\", not \"which has been demonstrated.\"", "author": "Tommah", "author_flair_text": null, "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bcnx", "parent_id": "t1_c02bcb1", "score_hidden": false, "id": "c02bcnx"}], "subreddit": "programming", "ups": 0, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4dm", "retrieved_on": 1427425367, "body": "not the issue. qed IS still about *logic* though. this article used none - he made some assumptions, then did some multiplication, and a conclusion.\n\nIt's basically the same as stating a hypothesis (which he almost does *explicitly*, with the words 'i claim') and then putting 'QED' after it.\n\nit would be different if he even *claimed* to have done the research to back those statements up (they may be true, in which case he's only guilty of syntactic and structural error), but he doesnt. he just 'assumes'.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bcb1", "parent_id": "t1_c02bbhx", "id": "c02bcb1", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 10, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4dm", "retrieved_on": 1427425378, "body": "&gt; \"[Currently, it has become so symbolic of irrefutable logic that \"Q.E.D.\" is occasionally used in non-mathematical contexts as well to intensify assertions; in this context it has little connection with rigorous deduction, however, and is more tongue-in-cheek.](http://en.wikipedia.org/wiki/Q.E.D.)\"", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bbhx", "parent_id": "t1_c02bbdq", "id": "c02bbhx", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bbdq", "ups": -2, "controversiality": 0, "archived": true, "link_id": "t3_5z4dm", "retrieved_on": 1427425378, "score_hidden": false, "id": "c02bbdq", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5z4dm", "body": "I so hate it when people make observations and assumptions, and then pretend it's a mathematical proof. QED my ass.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 11, "author": "spookylukey", "created_utc": "1193342504", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193344333", "name": "t1_c02bc5g", "gilded": 0, "link_id": "t3_5z4dm", "retrieved_on": 1427425368, "score": 5, "score_hidden": false, "id": "c02bc5g", "author": "ithika", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 5, "parent_id": "t1_c02bbtw", "body": "More capable and expressive languages/compilers probably even accelerate the process of creating more subtle compiler technology.", "author_flair_css_class": null}, {"distinguished": null, "controversiality": 0, "retrieved_on": 1427425318, "subreddit_id": "t5_2fwo", "created_utc": "1193396847", "ups": 2, "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 2, "id": "c02bg1w", "author": "hsenag", "archived": true, "author_flair_text": null, "edited": false, "body": "See also  http://www.cs.uoregon.edu/~yannis/law.html", "subreddit": "programming", "name": "t1_c02bg1w", "parent_id": "t1_c02bbtw", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425249, "subreddit_id": "t5_2fwo", "archived": true, "score": 1, "link_id": "t3_5z4dm", "downs": 0, "name": "t1_c02blcl", "created_utc": "1193446362", "score_hidden": false, "id": "c02blcl", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "gilded": 0, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bbtw", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "ups": 11, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4dm", "retrieved_on": 1427425373, "body": "It is compiler advances in higher level languages that are more interesting.  For instance, I imagine if you looked at the progress made by the Glasgow Haskell Compiler, it would be several orders of magnitude from the first working versions.  The result is that languages that make developers more productive are now practical.  Compiler optimisation thus produces gains in programmer productivity, which is what he says we should be concentrating on.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bbtw", "parent_id": "t3_5z4dm", "id": "c02bbtw", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "IHaveAnIdea", "created_utc": "1193344472", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "jasonmc", "created_utc": "1193345089", "children": [{"controversiality": 0, "retrieved_on": 1427425355, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bd70", "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 5, "score_hidden": false, "id": "c02bd70", "author": "IHaveAnIdea", "created_utc": "1193353106", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 5, "parent_id": "t1_c02bc8y", "body": "Damn.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02bc8y", "controversiality": 0, "archived": true, "link_id": "t3_5z4dm", "retrieved_on": 1427425367, "score_hidden": false, "id": "c02bc8y", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bc61", "body": "Congratulations, you have shown the world you don't understand **any** humour.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bc61", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5z4dm", "retrieved_on": 1427425368, "body": "These conclusions drawn from exactly **two** datapoints?\n\nclap clap clap", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5z4dm", "id": "c02bc61", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "jerf", "created_utc": "1193346195", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193354883", "name": "t1_c02bdci", "gilded": 0, "link_id": "t3_5z4dm", "retrieved_on": 1427425353, "score": 5, "score_hidden": false, "id": "c02bdci", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 5, "parent_id": "t1_c02bcf4", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bcf4", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 9, "link_id": "t3_5z4dm", "retrieved_on": 1427425365, "body": " You know, while drawing a straight line between two data points may be bad math... that doesn't negate his point. For all the work put into it, not as much has come out as you'd like.\n\nThere are mitigating factors (chip designers learning what compiler writers need and want, thus creating chips that naively-unoptimized code still runs pretty well on, closing the gap between well-optimized and unoptimized, for instance), but it's still a point worth talking about, without getting bogged down in IMHO spurious discussions about the \"math\".\n\nOh, and now some people are promising us automatic parallelization coming from the compiler. A sober look at the history of compiler reality vs. compiler promises can help put perspective on that claim.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5z4dm", "id": "c02bcf4", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193349554", "ups": 2, "gilded": 0, "link_id": "t3_5z4dm", "retrieved_on": 1427425360, "score": 2, "body": "It stacks.", "author": "Ulvund", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bcv5", "parent_id": "t3_5z4dm", "score_hidden": false, "id": "c02bcv5"}
{"controversiality": 0, "retrieved_on": 1427425326, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bfh6", "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 1, "score_hidden": false, "body": "Cores got smaller, clock speeds increased. I'd say the only \"big\" improvements happened in manufacturing technology. Pipelines were an advancement, so was caching, RISC. The Von Neumann architecture remains pretty much the same. Also, compilers target a particular *hardware architecture*. It *generates* code that runs on specific hardware. There is a lower limit to the number of assembly language instructions that are generated for the statement c = a + b. The goal of the compiler is to generate code that runs *more efficiently than the underlying machine code if a human programmer were to sit down and program in machine language*. The same code on a 386 would run a lot faster on a Pentium.   I don't think the comparison is fair. The author's conclusion seems pretty fair, but the basic assumptions and comparisons are flawed. ", "author": "sriram_sun", "created_utc": "1193383267", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t3_5z4dm", "id": "c02bfh6", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425320, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bfvq", "gilded": 0, "link_id": "t3_5z4dm", "downs": 0, "score": 7, "score_hidden": false, "body": "I can't find the quote, but apparently advances in *algorithms* such as the fast fourier transform, have also been responsible for significant advances in computing power.\r\n\r\n(If you consider computing power from a problems solving standpoint, which is reasonable, IMO.)\r\n\r\nI think it's also important to consider that it's often not too hard, for a specific instruction set and hardware architecture, to come up with a lower bound on the computation required. If a compiler is already close to that (say 30% off), then no amount of further research is going to bring you gains of 100%.", "author": "jbstjohn", "created_utc": "1193392656", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 7, "parent_id": "t3_5z4dm", "id": "c02bfvq", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193404626", "name": "t1_c02bgji", "gilded": 0, "link_id": "t3_5z4dm", "retrieved_on": 1427425311, "score": 2, "score_hidden": false, "body": "He has links to other peoples' comments on [his site](http://research.microsoft.com/~toddpro/)", "author": "jasonmc", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t3_5z4dm", "id": "c02bgji", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "gilded": 0, "link_id": "t3_5z4dm", "retrieved_on": 1427425221, "score": 2, "created_utc": "1193496287", "score_hidden": false, "id": "c02bnlq", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "The role of the compiler is \r\nnot to make your existing code work faster. \r\nThe role of the compiler is to allow you to write code ten times smaller/clearer/easier to maintain than your previous code and run at the same speed. In other words, the role of the compiler is to hide premature optimizations from your code. \r\n\r\nAlas, you have already a large investment in the code-style of yesteryear and you just want to press the magic button that will make your code run faster. That ain't go to happen and it sucks. You wrote the bad code, deal with it.", "subreddit": "programming", "ups": 2, "parent_id": "t3_5z4dm", "name": "t1_c02bnlq", "author_flair_css_class": null}