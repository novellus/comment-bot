{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "Robdor", "created_utc": "1193181132", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "generalk", "created_utc": "1193186761", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "ubernostrum", "created_utc": "1193190970", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "generalk", "created_utc": "1193195695", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193196885", "ups": 2, "gilded": 0, "link_id": "t3_5yy3y", "retrieved_on": 1427425611, "score": 2, "body": "   OK, step back a second.\n\nWhat I've asked for is simply specific suggestions on how to improve Django's documentation, or specific criticisms of what people think is missing. How you went from there to assuming a \"shut up\" attitude, I don't really know.\n\nAnyway.\n\n1. Regarding a PHP-style \"big list of functions\" reference. Yeah, more reference docs would be great, and we've already made a start on that -- a number of contributors have spent more than one weekend running through a particular module and submitting a patch listing every single thing that's in it and how they work together. But at the same time, a PHP-style \"big list of functions\" is trivially easy to generate, either via the Python interpreter's help system or via standalone systems like `epydoc` (and, traditionally, our BDFLs seem to have felt that API listings are less useful -- and hence lower-priority -- than other types of documentation, such as tutorials and task-oriented references). So if you're looking for that there is something to help you out while we finish compiling an online version.\n2. Not documenting changes in trunk simply isn't an option. Frozen docs corresponding to the releases are all online, all linked prominently, and aren't going away, so I don't understand why your post seems to assume that they're not available. Meanwhile, we keep the documentation in trunk up-to-date with trunk (our policy is that patches need to include any relevant documentation updates), because we don't want to get into a situation where we're ready for a release and have to have an \"oh shit, now we need to document all the new stuff\" moment.\n\nReleasing more often is an option sometimes, but not always; there's a specific set of features, for example, which need to be done before we push a new stable release. If they're not done, we can't release. Once we're past the 1.0 hump it'll be a lot easier to lay out timed release schedules with more predictability, but right now we've got to focus on getting features done.\n\nAnd please re-think what you consider a \"hostile reponse\"; all I'm asking for here is specific, constructive criticism. My goal is to make Django better, and if I can't figure out what would solve someone's problems I can't do that.", "id": "c02ayw8", "author": "ubernostrum", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02ayw8", "parent_id": "t1_c02aysr", "score_hidden": false, "author_flair_css_class": null}, {"distinguished": null, "controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02az50", "gilded": 0, "link_id": "t3_5yy3y", "retrieved_on": 1427425608, "score": 2, "score_hidden": false, "id": "c02az50", "author": "ubernostrum", "created_utc": "1193200201", "author_flair_text": null, "edited": false, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02aysr", "body": "(and just to be clear on why I want specific suggestions: several people are [currently looking for input on the docs](http://groups.google.com/group/django-developers/browse_frm/thread/1cbc45c43c9df741) in anticipation of doing some rewriting and refactoring; if we don't get specific problems and suggestions, we can't do much but go on our intuition)", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aysr", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yy3y", "retrieved_on": 1427425612, "body": "Woah, wait.\n\nHow did you get from \"I tried Django and didn't like the documentation\" to \"We don't know what you want, and we like what we do, so put up or shut up?\"\n\nI didn't start a flamewar here.  I listed some problems I had with Django when I tried it, which may or may not be relevant anymore (although from your defensive \"tone\" it sounds like they are.)  Since I don't currently use Django I really don't give a shit one way or another how you run your docs, or even if you care what I think. \n\nI did come out and specifically say what I think needs improving.  The documentation.  I provided an example of what I consider better documentation.  No need to read my mind, just my comment.  If you think your documentation fits your userbase better than the documentation I described, then stick with it.  Your criticisms of PHP's docs are valid.\n\nWhat I won't do is sit here and tell you how I think you should be running things.  Just because I'm not going to lay out a three-tier plan to fix your documentation does not invalidate my criticism though: I found it difficult to find documentation for specific features I was using.  I was using the latest stable, and all the documentation I found said two things:\n\n1) This is how you do it for the current trunk\n2) Current trunk is unstable and you shouldn't run production sites on it\n\nSo I'm left with either trying to figure out how things work in stable on my own, or using something that I know isn't stable.  I'm a developer too, and if anyone put my unstable trunk on a production site and complained, I'd call them dumb.  \n\nMy solution would be to do more releases.  Feature freeze that shit, get all the current stuff working, and then release.  That way, I can deploy your code on my production sites and not worry that some unknown bug will make me look bad.  Meanwhile, keep the documentation for the previous version up and complete if you're still supporting it.  Nothing's worse than downloading the latest stable release, only to find that the \"supported release\" has lackluster documentation.\n\nFinally, I'd remind you that calling people's criticism out is not a good way to foster good relations.  A quick \"Hey, we do things like that for this reason, but if you have any input we'd love to hear it.  PHP's documentation model just isn't what we're going for, for so-and-so reasons.\" would have gotten a much more positive response.  I'm not going to be inclined to check out the next release of Django if the reaction to some tame criticism (of the documentation no less) garners such a hostile response.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aycs", "id": "c02aysr", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aycs", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yy3y", "retrieved_on": 1427425618, "id": "c02aycs", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ax6p", "body": "I pose to you the same challenge as to the author of the linked post: come out and _say_ what, specifically, you think needs to be changed/improved. Nobody's going to read your mind and figure it out otherwise.\n\nAnd, again: how do you think we should handle documentation for the current trunk? We're not going to stop providing documentation which tracks the current trunk, because a lot of people use SVN checkouts and watch the trunk docs to see how to use new features they care about. So, again, come up with a specific suggestion and you might get a useful reaction.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193191144", "name": "t1_c02ayd5", "gilded": 0, "link_id": "t3_5yy3y", "retrieved_on": 1427425618, "score": 2, "score_hidden": false, "body": "(and let it be noted that I'm doing my best not to get into a flame war about whether \"a gigantic list of all the functions\" is the epitome of good documentation; `php.net` is great if you already know a lot about what you're looking for, but to a beginner it isn't always that useful)", "author": "ubernostrum", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02ax6p", "id": "c02ayd5", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425592, "subreddit_id": "t5_2fwo", "created_utc": "1193227317", "score": 2, "link_id": "t3_5yy3y", "downs": 0, "name": "t1_c02b0e9", "score_hidden": false, "body": "Documenting a language and it's functions is not the same work as documenting a whole object oriented framework.\n\nI think that the Django documentation is very good. Show me another framework that do better?", "author": "batiste", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02ax6p", "id": "c02b0e9", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02ax6p", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5yy3y", "retrieved_on": 1427425633, "id": "c02ax6p", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02awp3", "body": "Maybe, but the author does hit on the biggest point: documentaiton. \n\nPHP, for being such a half-assed language in places, has the best documentation of any language I've ever seen.  Function documentation is just a \"php.net/funcname\" away, it's very well written in most places, and the user comments are sometimes invaluable.\n\nAs a PHP dev who's tried switching from Zend Framework (one of the larger MVC frameworks for PHP) to Django, Django's spotty documentation is a real deficiency.  It's almost never comprehensive *and* relevant for the current stable version.  Forcing users to checkout from SVN and have to put up with unstable code is not a good solution.\n\nHowever, I'm with author.  Anything that gets us away from PHP is good!\n", "author_flair_css_class": null}], "subreddit": "programming", "ups": 4, "name": "t1_c02awp3", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yy3y", "retrieved_on": 1427425640, "score_hidden": false, "body": " The problem with this post is that he is not comparing apples to apples.  He is comparing the raw PHP language with a Python framework.  The exact opposite could be said of a PHP framework when comparing it to Python. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5yy3y", "id": "c02awp3", "author_flair_css_class": null}