{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "ishmal", "created_utc": "1193173755", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193175685", "gilded": 0, "link_id": "t3_5yykc", "retrieved_on": 1427425647, "score": 4, "score_hidden": false, "body": "I think it really depends on your application. Whether insert or lookup speed is better and other considerations.\n\nFor a string-&gt;value map, burst tries are the best data structure. To quote the literature: \"Compared to a ternary search tree, the burst trie is about 25% faster and uses only 50% of the memory.\"", "author": "jasonmc", "archived": true, "distinguished": null, "edited": false, "id": "c02aw3r", "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t1_c02avyp", "name": "t1_c02aw3r", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5yykc", "retrieved_on": 1427425649, "id": "c02avyp", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02avyp", "parent_id": "t3_5yykc", "body": "Fastest I've ever seen is a ternary tree used as a string-&gt;value map.  Takes more space, but beats a hashcoded table any day.  Just imho.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193176729", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02awfr", "gilded": 0, "link_id": "t3_5yykc", "retrieved_on": 1427425643, "score": 2, "score_hidden": false, "id": "c02awfr", "author": "jasonmc", "created_utc": "1193179085", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02aw78", "body": "Likewise, in python, the hashtable/dict is a fundamental structure which no doubt is highly optimized for the general case.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5yykc", "retrieved_on": 1427425646, "id": "c02aw78", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02aw78", "parent_id": "t3_5yykc", "body": "It would have been nice to see [Peter Moore's st hash](http://www.google.com/codesearch?hl=en&amp;q=+st+hash+Peter+Moore+show:btaoUyW5LCU:ffwtXk5gpJk:eqghdy_7Fm8&amp;sa=N&amp;cd=9&amp;ct=rc&amp;cs_p=http://ftp.ruby-lang.org/pub/ruby/snapshots/ruby-1.9-today.tar.gz&amp;cs_f=ruby/include/ruby/st.h) compared. It is fundamental to Ruby.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "jbn", "created_utc": "1193182159", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "ups": 1, "author_flair_text": null, "name": "t1_c02b6y0", "gilded": 0, "link_id": "t3_5yykc", "retrieved_on": 1427425436, "score": 1, "id": "c02b6y0", "author": "floodyberry", "created_utc": "1193289531", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c02awrz", "body": "http://www.nothings.org/computer/judy/", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02awrz", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yykc", "retrieved_on": 1427425639, "score_hidden": false, "id": "c02awrz", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yykc", "body": "how about judy?", "author_flair_css_class": null}