{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -4, "author": "xnumbersx", "created_utc": "1193532692", "children": [{"controversiality": 0, "retrieved_on": 1427425181, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bqm2", "gilded": 0, "link_id": "t3_5z9nh", "downs": 0, "score": -1, "score_hidden": false, "id": "c02bqm2", "author": "theeth", "created_utc": "1193538345", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": -1, "parent_id": "t1_c02bq9i", "body": "\u2200 minds | content \u037c {} ", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "mgsloan", "created_utc": "1193538361", "children": [{"controversiality": 0, "retrieved_on": 1427425163, "subreddit_id": "t5_2fwo", "created_utc": "1193563659", "ups": 7, "gilded": 0, "link_id": "t3_5z9nh", "downs": 0, "score": 7, "body": "  Ironically the simple elegance found in the most complicated algebras looks innocently childish while a simple partial derivative looks wildly complex. Laymen's judge math difficulty by the amount of greek.\n\nI also suppose that sometimes really complex derivations have extremely simple solutions.  \n\nExample: Fermat's last theorem. ", "id": "c02brzh", "author": "goalieca", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "name": "t1_c02brzh", "parent_id": "t1_c02bqm4", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5z9nh", "retrieved_on": 1427425181, "id": "c02bqm4", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bqm4", "parent_id": "t1_c02bq9i", "body": "You call parametrics 9th grade math?\n\nThe complex math is mostly hidden behind the mapping of UV coordinates to cartesian coordinates.  As mentioned, usually you would do it by line segments, evaluating the coordinates with de Casteljau's algorithm.\n\nIt doesn't even go into the necessary math for the cubics, which apparently require some matrix computations to find the UV coordinates of the tessellated quadrilateral.\n\nThis was indeed the math I was doing in 9th grade, but it wasn't on the curriculum... ", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425147, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bt87", "gilded": 0, "link_id": "t3_5z9nh", "downs": 0, "score": 1, "score_hidden": false, "id": "c02bt87", "author": "bebnet", "created_utc": "1193591460", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bq9i", "body": "snob.  overlook the point, just to feel good, eh?\n\nthe point: michaels representations (the pictures) of the math he is describing, are highly appreciated in even such a short read.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -4, "controversiality": 0, "archived": true, "link_id": "t3_5z9nh", "retrieved_on": 1427425185, "id": "c02bq9i", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bq9i", "parent_id": "t3_5z9nh", "body": "&gt;It\u2019s awesome to see mind boggling mathematics presented in such an pwetty way. You rock, Michael.\n\nlol 9th grade math == mind boggling ", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "mgsloan", "created_utc": "1193538613", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02bryx", "gilded": 0, "link_id": "t3_5z9nh", "retrieved_on": 1427425163, "score": 3, "body": "This is exactly what i was thinking. GPU based drawing. One of cairo's biggest complaints up till now was speed (though on my sufficiently fast machine i find it fast-enough not to notice). ", "author": "goalieca", "created_utc": "1193563153", "distinguished": null, "edited": false, "id": "c02bryx", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c02bqmp", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "brandf", "created_utc": "1193626945", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "mgsloan", "created_utc": "1193628707", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "brandf", "created_utc": "1193629526", "children": [{"controversiality": 0, "retrieved_on": 1427425107, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bwcf", "gilded": 0, "link_id": "t3_5z9nh", "downs": 0, "score": 1, "score_hidden": false, "body": "As far as I can tell, the standard method of stroking is to generate the polyline and widen that.  The process used in lib2geom creates actual curves.\n\nMy summer project actually involved regularizing self-intersecting/discontinuous parametric shapes (and performing booleans on them).\n\nAs for energy, I'm not sure.  It may take more energy for general purpose cpus to do more efficient calculations, due to their general purpose nature.", "author": "mgsloan", "created_utc": "1193632681", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bw3j", "id": "c02bwcf", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bw3j", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5z9nh", "retrieved_on": 1427425110, "id": "c02bw3j", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bw1n", "body": "I could be wrong, but I think that most graphics systems generate stroke geometry (sometimes called 'widening'), and then fill it just like non-stroked geometry.  Is that  what you are refering to when you say 'generate a fill-path offset from it'?\r\n\r\nThere are lots of special cases in doing it, but it's been done before.  I'd imagine that if he could get a full vector system working with this (not just simple curves, but full self-intersecting geometries with holes and AA), then generating the stroke geometries would be the next step.\r\n\r\nI have no evidence to show this, but I suspect that while this may be faster, it could be much less energy efficient than current methods.  This is because he's doing a lot of redundant computation on the interior of the curve that could drain your laptop battery very quickly.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bw1n", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5z9nh", "retrieved_on": 1427425111, "id": "c02bw1n", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bvxr", "body": "Ahh, interesting.\n\nOne probable issue with such techniques is stroking beziers.  This method only does fills.\n\nOne possible technique might be to take the beziers and generate a fill-path offset from it.  However, this is much harder than it sounds, and is imprecise.\n\nI actually worked on a lib that facilitates stroking this way, lib2geom.  It may be possible to get the mathematics working on GPU in the special case of UV coords.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bvxr", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5z9nh", "retrieved_on": 1427425112, "id": "c02bvxr", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bqmp", "body": "This isn't as good as the article makes it sound.  If you read Loops paper on the topic:\r\n\r\nhttp://research.microsoft.com/~cloop/loopblinn05.pdf\r\n\r\nHe talks about some of the limitations.  \r\n\r\nAntialiasing is one problem...doing FSAA requires too much memory at this time for good results (need at least 16x to look respectable, by comparison GDI uses 64x) and MSAA will not work because the curves edge is inside the triangle.  You need to calculate AA within the shader, which complicate triangulation because of many edge cases.\r\n\r\nThats not to say that this could never work in a real system, it's just not a simple process.  For example, Fortza 2 for xbox360 uses this for font rendering.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z9nh", "retrieved_on": 1427425181, "body": "Sweet! I can't wait to see a GPU cairo backend.  Hopefully it'll make firefox 3 blaze (and all the other cairo users), and allow for some cool effects.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bqmp", "parent_id": "t3_5z9nh", "id": "c02bqmp", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193546288", "name": "t1_c02br3w", "gilded": 0, "link_id": "t3_5z9nh", "retrieved_on": 1427425176, "score": 15, "score_hidden": false, "body": "This looks suspiciously like Loop and Blinn's approach.  See specifically section 25.2 in \"Rendering Vector Art on the GPU\" in GPU Gems 3.  And that chapter builds on their earlier \"Resolution Independent Curve Rendering using Programmable Graphics Hardware\" paper from SIGGRAPH 2005.", "author": "Boojum", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 15, "parent_id": "t3_5z9nh", "id": "c02br3w", "author_flair_css_class": null}