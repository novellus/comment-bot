{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 13, "author": "berlinbrown", "created_utc": "1192832841", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "malcontent", "created_utc": "1192842744", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 10, "author": "[deleted]", "created_utc": "1192843253", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -9, "author": "malcontent", "created_utc": "1192843905", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "[deleted]", "created_utc": "1192844519", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -14, "author": "malcontent", "created_utc": "1192845143", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 10, "author": "[deleted]", "created_utc": "1192846692", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -6, "author": "malcontent", "created_utc": "1192875245", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1192907789", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -8, "author": "malcontent", "created_utc": "1192916408", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "[deleted]", "created_utc": "1192917191", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -4, "author": "malcontent", "created_utc": "1192917917", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193172777", "name": "t1_c02avty", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425653, "score": 2, "score_hidden": false, "body": "&gt; What is the source of all your vitriol?\n\nThis is irony.", "author": "dmpk2k", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02ab2o", "id": "c02avty", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -4, "name": "t1_c02ab2o", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425920, "score_hidden": false, "id": "c02ab2o", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ab0d", "body": "I saw hundreds of thousand of dollars. I had stock options in two of the companies that ended up being sold. What's your point?\n\n\nWhat is the source of all your vitriol? Why are you such a world class asshole?\n\nFurthermore why are you such a failure? Why are you unable to finish the things you start? Why hasn't jedit come out with a release in such a long time? Why does it still look like ass? Why is it still slower then a turtle on drugs? How come nobody uses factor to do anything?\n\nA person with such a string of public failures should be a little more humble don't you think? Perhaps you act like an asshole in order to distract people from your failures.\n\n\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02ab0d", "controversiality": 0, "archived": true, "ups": -1, "link_id": "t3_5ypc6", "retrieved_on": 1427425921, "id": "c02ab0d", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aay1", "body": "ROFL. I bet you didn't see a penny from that ten million dollar sale, that's why you're so bitter.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -8, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425923, "id": "c02aay1", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02aay1", "parent_id": "t1_c02aadk", "body": "What does that have to do with anything. Will it make you less of asshole if I didn't build anything? \n\nEven though your question is pointless and even  though are a world class asshole and even though you have done but insult me I will answer your question.\n\nI have built (singlehandedly in most cases) at least a dozen systems which are/have been used by tens of thousands people and make/made millions of dollars for various corporations.\n\nI have also built systems which saved companies millions of dollars.\n\nNone of them are open source of course but they have/do keep hundreds of people employed.\n\nHell one piece of software I wrote was the centerpiece of a business which ended up being sold for tens of millions of dollars.\n\nGuess what though? None of them were written in a functional language. They all used relational databases. They all use non distributed version control systems. They all involved working in teams with users, business people and other \"80%\" programmers both inside and outside the company.\n\nAll those people you shit on, all those languages you shit on, all those version control systems you shit on, they do real work in the real world earning real money and putting real food on real tables and putting real kids through real schools.\n\nFuck you and your arrogant asshole attitude and fuck all people like you who sit in your ivorty towers shitting on people who actually get things done.\n\nAsswipe.\n\n\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425929, "id": "c02aadk", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02aadk", "parent_id": "t1_c02a8ls", "body": "What have you built that people wanted to use?", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1192920436", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "malcontent", "created_utc": "1192942547", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1192946323", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -5, "author": "malcontent", "created_utc": "1192947251", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192949169", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "malcontent", "created_utc": "1192949630", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192950450", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "malcontent", "created_utc": "1192951288", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "dmpk2k", "created_utc": "1193172566", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -4, "author": "malcontent", "created_utc": "1193175271", "children": [{"controversiality": 0, "retrieved_on": 1427425644, "subreddit_id": "t5_2fwo", "created_utc": "1193178472", "ups": 1, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 1, "body": "&gt; Look at the update schedule. It's practically abandoned.\n\nWhat does that have to do with it being unfinished or him being flighty?\n\n&gt; Just another characteristic that makes him a dick.\n\nRight, because volunteer OSS developers are the new slave labour. Buzz off.", "author": "dmpk2k", "archived": true, "distinguished": null, "edited": false, "id": "c02awdn", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02awdn", "parent_id": "t1_c02aw1s", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "[deleted]", "created_utc": "1193196328", "children": [{"controversiality": 0, "retrieved_on": 1427425598, "subreddit_id": "t5_2fwo", "created_utc": "1193216044", "ups": -6, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": -6, "id": "c02azwk", "author": "malcontent", "archived": true, "distinguished": null, "edited": true, "body": "&gt;Have you ever started a project which is still active almost 10 years later?\n\nYes. As I told you it's not open source.\n\n&gt;You're anti-American-govt\n\nNope. Anti republican, anti bush, anti torture, anti war, anti irresponsible spending, anti genocide but thanks for lying. \n\n&gt;anti-Microsoft\n\nAbsolutely.\n\n&gt;anti-Israel\n\nYup but only because I am anti apatheid, anti religion, anti torture, anti mass murder.\n\n\n&gt;anti-rich people\n\nNope but thanks for lying again.\n\n&gt;anti-success.\n\nNope. But thanks for lying again.\n\n\n\n\n&gt;Let's see -- you post about 40 comments a day on reddit. If each comment takes 10 minutes (reading the thread surrounding the comment, composing the comment) that's 400 minutes, or almost 7 hours a day, you spend participating in discussions on reddit.\n\nI would think a super genius programmer like yourself would be able to make up better statistics.\n\nWhy don't you pretend I spend 12 hours per day on posting on reddit. Wouldn't that make you feel even better about the fact that you are a supreme dick?\n\nIsn't it funny how you have to always lie about the things and people you shit on. You  lied about ruby, lied about the GPL and now are lying about me.\n\nA lying sack of shit asshole is what you are. \n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02azwk", "parent_id": "t1_c02ayui", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ayui", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 9, "link_id": "t3_5ypc6", "retrieved_on": 1427425612, "id": "c02ayui", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aw1s", "body": "\"malcontent\", you're a funny man.\n\nThere were several releases of the core editor this year, and according to http://plugins.jedit.org/updates.php, new plugins are being released every few weeks. The SVN repos sees commits almost every day, from dozens of developers. Doesn't sound abandoned to me.\n\nEven if jEdit was abandonware, you're in no position to be saying these things.\n\nHave you ever started a project which is still active almost 10 years later?\n\nLet's see -- you post about 40 comments a day on reddit. If each comment takes 10 minutes (reading the thread surrounding the comment, composing the comment) that's 400 minutes, or almost 7 hours a day, you spend participating in discussions on reddit. Add to that another hour to read the articles you comment on (you do read them, right?) So your career right now is being \"malcontent\" on \"reddit.com\". That's the american dream dude!\n\nDo you feel you are achieving something here? Are you living a fulfilling life? Don't you have a job or go to school? Don't you have a girlfriend?\n\nOn top of that, your comments are pretty repetitive. Dude, we get it: you're anti-American-govt, anti-Microsoft, anti-Israel, anti-rich people, anti-success.\n\nSo you spend 8 hours a day protesting the \"establishment\" by writing angst-y comments. Sounds like a failure to me.   ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aw1s", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -4, "link_id": "t3_5ypc6", "retrieved_on": 1428187816, "id": "c02aw1s", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02avt2", "body": "&gt;And jEdit is suddenly unfinished (or as much as an editor can be)?\n\nLook at the update schedule. It's practically abandoned.\n\n&gt;Arguing he's a dick is one thing, but this is ridiculous.\n\nJust another characteristic that makes him a dick.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02avt2", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425653, "score_hidden": false, "body": "Huh? Working on the same projects for several years is flighty? And jEdit is suddenly unfinished (or as much as an editor can be)?\n\nArguing he's a dick is one thing, but this is ridiculous.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ad9l", "id": "c02avt2", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "psykotic", "created_utc": "1193217591", "children": [{"controversiality": 0, "retrieved_on": 1427425596, "subreddit_id": "t5_2fwo", "ups": 0, "archived": true, "name": "t1_c02b01d", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 0, "body": "Bhahaha. Superior. That's funny man. \n\nSlava is a lying sack of shit asshole. You want to hire pathological liars go ahead.\n\nI don't hire assholes, I don't hire liars. ", "author": "malcontent", "created_utc": "1193219105", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "score_hidden": false, "parent_id": "t1_c02azyz", "id": "c02b01d", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "name": "t1_c02azyz", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425597, "score_hidden": false, "id": "c02azyz", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ad9l", "body": "&gt; As I said I know many people like him. I wouldn't hire any of them.\n\nThat makes sense: it's well documented through psychological studies that people feel uncomfortable hiring their superiors.\n\nYou pathetic loser. You're not even a real programmer, you're just a glorified data-entry monkey.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02ad9l", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -2, "link_id": "t3_5ypc6", "retrieved_on": 1427425891, "body": "&gt;Sure they say that. But what if they are wrong?\n\nWhat if they are wrong? This is not a theoretical discussion. There are thousands of rails sites and several of them are extremely busy.\n\nAnyway as I said there are two (or is it three) efforts at porting ruby to .NET, one to java, one to parrot, there are two efforts at complers (Yarv and rubinuous) and the 1.9 effort has performance as it's main goal.\n\n&gt;I was referring to the fact the he performs his work, then, rather than take the fame as others might (and, from what I have observed, believing they have nothing more to learn in the domain - to their own demise), he \"abandons\" that work when too many \"undesirables\" start to use it.\n\nSounds to me like he is one of those flighty types who thrives on novelty. He doesn't have what it takes to see a project from start to finish. He starts it but lacks the patience and the tenacity to finish it. \n\nI know many people like him. \n\n&gt;I applaud it once again. He's probably off learning something new right now, rather than indulging in the popular acceptance of his work. Good on him.\n\nI guess factor will be another one of his projects that's left incomplete and abandoned.\n\nAs I said I know many people like him. I wouldn't hire any of them. \n\n\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ad89", "id": "c02ad9l", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ad89", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5ypc6", "retrieved_on": 1427425892, "id": "c02ad89", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02ad6r", "body": " &gt; The ruby community says ruby is \"fast enough\" and that the bottlenecks for web applications are frequently at the database.\n\nSure they say that. But what if they are wrong? Let us suppose that you are absolutely sure that they are wrong. Wouldn't you then feel the need to say \"the Ruby community does not value performance (since otherwise, they would be looking in the right place)\"?\n\nNevertheless, I wasn't originally referring to his alleged \"lies.\" I was referring to the fact the he performs his work, then, rather than take the fame as others might (and, from what I have observed, believing they have nothing more to learn in the domain - to their own demise), he \"abandons\" that work when too many \"undesirables\" start to use it.\n\nI applaud it once again. He's probably off learning something new right now, rather than indulging in the popular acceptance of his work. Good on him. ", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 0, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425892, "id": "c02ad6r", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02ad6r", "parent_id": "t1_c02ad5q", "body": "&gt;Imagine that Slava sees the Ruby community existing in a state of doublethink.\n\nHe has never indicated that he sees the ruby community in any kind of nuanced or complex manner. I don't know how you can justify putting these thoughts into his head when he has never expressed anything like this.\n\n&gt;That is, they say they are concerned about performance, but then they go and act to the contrary.\n\nWhere do you get this from? If anything it's the opposite. The ruby community says ruby is \"fast enough\" and that the bottlenecks for web applications are frequently at the database. They uniformly acknowledge that ruby is slower then python, java, php or whatever and that's why they are working on compilers. \n\n&gt;That he doesn't back them up, or make this position clearer is a point that he might address.\n\nAs I said he is either not capable of nuanced thought or he is incapable of expressing nuanced positions. \n\n\n\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02ad5q", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5ypc6", "retrieved_on": 1427425893, "body": "No, I do not accept that \"he is an asshole\". Since, I could simply assert that \"you are an asshole\" and while it is meaningless, it is also quite pointless.\n\nHowever, I offer you an alternative interpretation of his position that you see as lies. Imagine that Slava sees the Ruby community existing in a state of doublethink. That is, they *say* they are concerned about performance, but then they go and act to the contrary. Imagine that Slava does not doubt that these people would pass a lie detector test should they be asked, \"are you concerned about performance?\".\n\nI'm going to assume you're quite clued up in programming language theory and suggest that it is a bit like Java programmers who say they are concerned about software quality. It is quite easy to see straight through this statement as a case of doublethink (since, then why oh why do you use something as pitiful as Java to express such quality?). These people are not lying; they're just living in a bubble of cognitive dissonance.\n\nIt is this charge that I am going to propose that Slava may be referring to when makes such claims. That he doesn't back them up, or make this position clearer is a point that he might address.\n\nOf course, this alternative position may be all irrelevant, since I do not speak for him. Only, I would like to open you to the possibility of alternative interpretations, even if they may not be true for this case.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ad20", "id": "c02ad5q", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1192960731", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "malcontent", "created_utc": "1192961783", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192961993", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "malcontent", "created_utc": "1192962167", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192964629", "ups": 2, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "score": 2, "body": "[deleted]", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02adqp", "parent_id": "t1_c02adoh", "score_hidden": false, "id": "c02adqp"}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192966744", "name": "t1_c02adsq", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "score": 2, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02adoh", "id": "c02adsq", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02adoh", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "score_hidden": false, "body": "More prominent? They have all been modded down just like anybody who failed to praise slava or factor.\n\nAnyway here is a hint.\n\nIf you click on a person's name you can see all the comments they posted. ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ado6", "id": "c02adoh", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "id": "c02ado6", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02ado6", "parent_id": "t1_c02adnt", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -1, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "id": "c02adnt", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02adnt", "parent_id": "t1_c02admk", "body": "You don't have to believe me. You can read his posts and judge for yourself.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02admk", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5ypc6", "retrieved_on": 1427425887, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ad20", "id": "c02admk", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ad20", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -5, "link_id": "t3_5ypc6", "retrieved_on": 1427425895, "body": "Slava says the ruby community doesn't care about performance. The ruby community is working on three VM implementations and at least two compilers. Ever new version of ruby is faster then the previous version. The entire community is spending thousands of man hours trying to make it faster.\n\nThat's lie number one.\n\nSlave claims the ruby community doesn't care about a debugger. Rails has always supported the ruby debugger and the new version is going to be integrated even more tightly with the debugger.  It has taken a ton of work to make that happen and all that work happened in the last year.\n\nThat's lie number two.\n\nI don't feel like listing the rest of his lies. Needless to say he is incapable of criticizing ruby, java or anything else without resorting to lies. \n\nJust click on his name and see his posts here. He lies and when you call him on his lies he just resorts to saying something like \"you are a zealot\".  \n\nThe man doesn't even have the intellectual capacity or the linguistic skills to come up with a creative insult.\n\nBTW. I presume since you were only asking about the lie you accept that he is an asshole.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aczo", "id": "c02ad20", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425895, "body": "Where is the lie?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02aczo", "parent_id": "t1_c02acqo", "id": "c02aczo", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -2, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425898, "id": "c02acqo", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02acqo", "parent_id": "t1_c02ab9w", "body": "&gt;Regardless of any other traits of Slava, I applaud anyone who conducts themselves this way. This is intellectual honesty at its finest.\n\nIn what way? As an asshole who lies?", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 6, "name": "t1_c02ab9w", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425918, "score_hidden": false, "id": "c02ab9w", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a8ls", "body": "Regardless of any other traits of Slava, I applaud anyone who conducts themselves this way. This is intellectual honesty at its finest.\n\n&gt; I know X can be very negative (I've said as much in a few of my own comments), but in looking at X's work recently I've just come to the conclusion that he just has very high standards.\n\nI find this to be one of the most insightful comments on this thread. I wish more people came to this realisation about \"people who are seemingly negative.\"", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -6, "name": "t1_c02a8ls", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "score_hidden": false, "id": "c02a8ls", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6z0", "body": "The difference between DHH and Slava is that DHH built an application in ruby that people wanted to use. He also built a framework people wanted to use.\n\nSlava built jedit in java so far he hasn't written anything in factor that is anywhere as popular. My guess is that he won't either.  He abandoned jedit and will probably abandon factor too when too many \"undesirables\" start to use it.\n", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "[deleted]", "created_utc": "1192886431", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "foldl", "created_utc": "1192900686", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "Tommah", "created_utc": "1192908218", "children": [{"controversiality": 0, "retrieved_on": 1427425912, "subreddit_id": "t5_2fwo", "created_utc": "1192926309", "ups": 1, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 1, "id": "c02abo7", "author": "foldl", "archived": true, "distinguished": null, "edited": false, "body": "How was the GGP a joke?", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02abo7", "parent_id": "t1_c02aaeh", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aaeh", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5ypc6", "retrieved_on": 1427425929, "id": "c02aaeh", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a9yn", "body": "Oh, it's a joke!  I get jokes. hahaha", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a9yn", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5ypc6", "retrieved_on": 1427425934, "body": "That was DHH, not Slava.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a920", "id": "c02a9yn", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425946, "id": "c02a920", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a920", "parent_id": "t1_c02a6z0", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 10, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425973, "id": "c02a6z0", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02a6z0", "parent_id": "t1_c02a6vh", "body": "Well I'll agree that Slava should probably tone it down.\n\nOne thing to think about though is that Matz is routinely recognized for his humility and personable nature. But even Matz with that didn't lead Ruby to being anything more than an also-ran to Python and Perl. It took by most people's accounts, an asshole, DHH, to make people take notice. On the backside of that, DHH's personality might at this point be negative to Ruby's continued growth. Who knows.\n\nI do know that this thread is reminding me way too much of a speech in *Team America*. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -14, "name": "t1_c02a6vh", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425975, "score_hidden": false, "body": " &gt;I know Slava can be very negative (I've said as much in a few of my own comments)\n\nI would have used the word asshole but whatever.\n\n&gt;Slava seems to have a pretty good understanding of multiple languages and he talks some smack about Ruby because he knows what has already been done with Common Lisp and other languages and in some places Ruby is a step backwards. But he makes negative statements about Python and other languages all the same.\n\nNot just ruby. Slava shits on people who use the language as well. I guess he doesn't want anybody to use java, ruby, python, perl, or any other language that he doesn't approve of.\n\nOddly enough even though there are ten thousand reasons one can say ruby is bad he chooses the most irrelevant ones like \"the library does not have uniform naming standards\". \n\nMaybe one day factor will have 1/10th the library of ruby or python or perl and then we can do a real comparison between the naming conventions of libraries, after all it's much easier to have a uniform naming convention when you only have ten libraries.\n\nUntil then factor will remain a fringe language whose community is represented by a world class asshole.\n\n ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a6tk", "id": "c02a6vh", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a6tk", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 8, "link_id": "t3_5ypc6", "retrieved_on": 1427425975, "body": "I know Slava can be very negative (I've said as much in a few of my own comments), but in looking at Factor recently I've just come to the conclusion that he just has very high standards. Slava seems to have a pretty good understanding of multiple languages and he talks some smack about Ruby because he knows what has already been done with Common Lisp and other languages and in some places Ruby is a step backwards. But he makes negative statements about Python and other languages all the same.\n\nThat being said, when I used it, Ruby's naming conventions seemed pretty consistent. And Slava probably borrowed '?' for predicates from Scheme (which Ruby did as well).", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a6rx", "id": "c02a6tk", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192855111", "ups": 8, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425966, "score": 8, "score_hidden": false, "body": "It's Scheme-style, not Ruby-style. They just nicked it.", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a7m8", "parent_id": "t1_c02a6rx", "id": "c02a7m8", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "ups": 0, "author_flair_text": null, "name": "t1_c02bbcc", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425379, "score": 0, "id": "c02bbcc", "author": "[deleted]", "created_utc": "1193339079", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c02a6rx", "body": "forth also implements the ? predicate marker. but honestly the word can be &amp;%#@^? and still mean the same thing as zero? ... you're fighting with syntax here.  ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a6rx", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -9, "link_id": "t3_5ypc6", "retrieved_on": 1427425976, "id": "c02a6rx", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6q7", "body": "You missed the joke..\n\nSlava hates ruby because the vast ruby library does not conform to his idea of how objects and functions should be named. He also hates people who program in ruby (the dreaded ruby community) because they refuse to follow his idea of how things should be named.\n\nOdd that you should point out factor has the ruby style ? at the end of functions.\n\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 10, "name": "t1_c02a6q7", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425976, "score_hidden": false, "body": "It seems to. From looking over it, there are some smart naming conventions. Since there's very little syntax in Factor (whitespace basically is all you need), words can use characters that most languages can't or don't use.\n\nAs an example, Factor follows the Scheme/Ruby tradition of a trailing '?' to show the word will return a boolean (aka char?). There's also the lispy lack of underscores and the use of '-' as word delimiters instead (file-handler as opposed to file_handler). Another convention is angled-brackets represent words that will create an object of some sort (my terminology might not be the best here). So for example &lt;file-writer&gt; might be a word that creates a file you'd write to on the stack.\n\nIt is a rather clean language. Stack-based programming kind of requires that your words be as descriptive as possible and the naming conventions really help.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a6oq", "id": "c02a6q7", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "Tommah", "created_utc": "1192908185", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -7, "author": "malcontent", "created_utc": "1192916429", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192991328", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192998584", "ups": 1, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425859, "score": 1, "score_hidden": false, "id": "c02afqi", "author": "malcontent", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02afqi", "parent_id": "t1_c02af67", "body": "Glad to be of service.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02af67", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425867, "score_hidden": false, "id": "c02af67", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02aay5", "body": "You don't have to like Slava or Factor. However, all this trolling does is serve to draw additional attention to them. I'm sure Slava appreciates it.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -7, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425923, "body": "Cool. That should keep slava happy.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02aay5", "parent_id": "t1_c02aaeg", "id": "c02aay5", "author_flair_css_class": null}], "subreddit": "programming", "ups": 8, "name": "t1_c02aaeg", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425929, "score_hidden": false, "body": "Yes, uniforms are named starting from 0.  So it's `uniform0`, then `uniform1`, etc.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a6oq", "id": "c02aaeg", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -2, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425977, "id": "c02a6oq", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a6oq", "parent_id": "t1_c02a5yr", "body": "Does the factor library have a uniform naming scheme?\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 13, "name": "t1_c02a5yr", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425986, "score_hidden": false, "body": "good read, describes the basics and how to get started.  \r\n\r\ncant wait to start using the killer factor application.  Actually, the factor web server and framework is pretty nice and robust. \r\n\r\n\r\n", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5ypc6", "id": "c02a5yr", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 27, "author": "lost-theory", "created_utc": "1192835376", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -7, "author": "rooroo", "created_utc": "1192840073", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 18, "author": "[deleted]", "created_utc": "1192840305", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02a6n5", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425977, "score": 2, "score_hidden": false, "body": "blogspot.com is blocked?  Dang.", "author": "stacecom", "created_utc": "1192841888", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02a6j5", "id": "c02a6n5", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "piranha", "created_utc": "1192874270", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02a9jp", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425940, "score": 2, "score_hidden": false, "id": "c02a9jp", "author": "[deleted]", "created_utc": "1192894535", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02a8kn", "body": "[deleted]", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425929, "subreddit_id": "t5_2fwo", "created_utc": "1192907817", "name": "t1_c02aado", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 2, "score_hidden": false, "id": "c02aado", "author": "Tommah", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02a8kn", "body": "&gt; HugeURL is amusing, but worthless for practical use.\n\nIts tongue-in-cheek use serves to discourage the use of TinyURL that you see on here sometimes.  Someone will take a 30-character URL and shorten it into 15.  That's like putting 911 on speed-dial.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425910, "score": 1, "id": "c02abtr", "author": "halu", "created_utc": "1192928602", "distinguished": null, "edited": false, "body": "&gt; Should it support any arbitrary-length URLs (even in the megabytes and gigabytes range)\r\n\r\nYes.\r\n\r\n&gt; Also: it's quite irksome that reddit is swallowing links to Blogspot.\r\n\r\nYes.\r\n\r\nFinal result: -1+1=0", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02abtr", "parent_id": "t1_c02a8kn", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a8kn", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "score_hidden": false, "id": "c02a8kn", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6j5", "body": "No way at all.  Especially not TinyURL.\n\nHugeURL is amusing, but worthless for practical use.  This story URL is 1840 characters long, which my WWW proxy (Polipo) refuses to accept.  Should it support any arbitrary-length URLs (even in the megabytes and gigabytes range) with no justifiable reason, other than \"lulz we're sticking it to tinyurl\"?\n\nAlso: it's quite irksome that reddit is swallowing links to Blogspot.", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425950, "subreddit_id": "t5_2fwo", "created_utc": "1192879385", "name": "t1_c02a8qa", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 1, "score_hidden": false, "id": "c02a8qa", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02a6j5", "body": "[deleted]", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "rooroo", "created_utc": "1192950462", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192959831", "ups": 3, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425887, "score": 3, "body": "[deleted]", "id": "c02adlm", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02adlm", "parent_id": "t1_c02ad8a", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02ad8a", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425892, "score_hidden": false, "body": " Perhaps we could start a service that produces URLs like this:\n\nhttp://clearurl.whatever.site.com.clearurl.com/[hash or full relative]\n\nOr perhaps\n\nhttp://whatever.site.com@clearurl.com/[hash or full relative]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a6j5", "id": "c02ad8a", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 18, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425980, "id": "c02a6j5", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a6j5", "parent_id": "t1_c02a6il", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -7, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425980, "body": "Downmod for same.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02a6il", "parent_id": "t1_c02a664", "id": "c02a6il", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "Tommah", "created_utc": "1192840609", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 9, "author": "[deleted]", "created_utc": "1192840683", "children": [{"controversiality": 0, "retrieved_on": 1427425950, "subreddit_id": "t5_2fwo", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 3, "id": "c02a8pq", "author": "[deleted]", "created_utc": "1192878883", "distinguished": null, "edited": true, "body": "[deleted]", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a8pq", "parent_id": "t1_c02a6k9", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 9, "name": "t1_c02a6k9", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425979, "score_hidden": false, "id": "c02a6k9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6k2", "body": "Make some minor changes to the source of http://www.wee-url.com and you'll have it.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c02a6k2", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425979, "score_hidden": false, "id": "c02a6k2", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a664", "body": "I await the Factor implementation.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02aa54", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425932, "score": 1, "score_hidden": false, "id": "c02aa54", "author": "[deleted]", "created_utc": "1192903553", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02a664", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 27, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425983, "body": "Upmod for use of [HugeURL](http://hugeurl.com/).", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02a664", "parent_id": "t3_5ypc6", "id": "c02a664", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 32, "author": "[deleted]", "created_utc": "1192845518", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192846740", "ups": 10, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425973, "score": 10, "body": "Based on your description, Factor sounds like converting from normal calculators, to HP RPN-style calculators.  It's actually not very hard to wrap your head around and you start enjoying the freedom the stack allows.  Sometimes with big problem sets you'd need to keep track of a ton of little intermediate computations, so I'd push em all on the stack and worry about it later when I needed them.  RPN-calc had cool features of rotating the stack, swapping elements and so forth that made it pretty easy to get to where you need to be.  If you used the standard calculators, you'd either have to use the memory buttons, or write out the intermediate calculations on paper.", "author": "catch23", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a6z4", "parent_id": "t1_c02a6wh", "score_hidden": false, "id": "c02a6z4"}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192855300", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "[deleted]", "created_utc": "1192875001", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1192878747", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "[deleted]", "created_utc": "1192886764", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192902939", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -3, "author": "[deleted]", "created_utc": "1192966929", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192990128", "children": [{"controversiality": 0, "retrieved_on": 1427425858, "subreddit_id": "t5_2fwo", "created_utc": "1193000406", "ups": 0, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 0, "id": "c02afwd", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "You said lots of illogical nonsense. So my response. I nowhere advocated COBOL-ish languages or something similar but just observed a funny coincidence between pushing a predicate at the end a bad habit in my native language.\n\nNote that I upmodded your posting and downmodded mine for all the good feelings this produces at the readership. ", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02afwd", "parent_id": "t1_c02af2x", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02af2x", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5ypc6", "retrieved_on": 1427425868, "id": "c02af2x", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02adsw", "body": " That has nothing to do with what I said. Certainly it is possible for programming languages to attempt to ape natural languages. Certainly some are closer than others. \n\nWhile it is a nice property to be close to a natural language, it shouldn't be a goal in that you'd complicate formal aspects. I think concatenative languages are often closer without any additional complication. I don't think this is a big win, but it was worth pointing out given the context in which I commented.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02adsw", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -3, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "body": "*No programming language is close to a natural language, nor should they be. That said, I often find that Factor is closer than others.*\n\nThere is just nothing and even if there was something it could be an illusion only. But sometimes this illusion appears so real that I almost believe there is something. But no, there is just nothing.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aa3x", "id": "c02adsw", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425932, "body": "  Why are you so concerned about comparing Factor to natural languages? Programming languages are formal languages that need to be precise and consistent. No programming language is close to a natural language, nor should they be. That said, I often find that Factor is *closer* than others. \n\nBesides, if it really bothers you, just define an IF: parse word and be done with it. ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02aa3x", "parent_id": "t1_c02a92l", "id": "c02aa3x", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a92l", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -1, "link_id": "t3_5ypc6", "retrieved_on": 1427425946, "body": "But people don't a sentence just letter by letter or word by word read. An overview that reaches farther than that they have.\n\nThe second sentence is owed to Yoda of course.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a8pk", "id": "c02a92l", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a8pk", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 6, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "id": "c02a8pk", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a8lg", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a8lg", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -2, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "body": "*There most certainly is that moment.*\n\nMaybe, but it feels \"wrong\" nevertheless. When you specify an action it is this action that is matters most and not the operands. There is a comparable bad habit in the german language to push the predicate at the end. So you read the whole sentence and suddenly the meaning pops up. It is often considered as good style avoiding to write such sentences in particular when they are long.\n\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a7mu", "id": "c02a8lg", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02a7mu", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425964, "score_hidden": false, "body": "&gt;Has anyone else made the transition from traditional languages to a stack-based language successfully? Is there a moment that everything just clicks?\n\nThere most certainly is that moment. I now find using applicative languages to be frustrating on occasion, although more because of what concatenative languages *can be* rather than what they are at this point.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a6wh", "id": "c02a7mu", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 32, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425975, "id": "c02a6wh", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02a6wh", "parent_id": "t3_5ypc6", "body": "  I've been trying to wrap my mind around Factor recently. I kind of blew it off when articles first started popping up on Reddit because it was just so different and stack languages frankly seemed really silly.\n\nBut if you take a step back and look, Factor is pretty impressive, regardless of what kind of language it is. It compiles down to machine code on Windows, Mac, and Linux (I'm really interested in what this means as far as performance is concerned), it has its own GUI toolkit and its own very powerful REPL/documentation system built with it. It already has a fair number of libraries. Interfacing with C code is very simple. It is image-based which allows things like the REPL but it still lets you use normal text editors.\n\nI mean really, Slava has done more with this language in what 4 years than most languages have done in a decade or more. So you can't help but to wonder if maybe there really is something to stack-based programming.\n\nAnd you look at that aspect of Factor a bit more and it is interesting. Factor's words (functions) are a very powerful but simple building block. Factor consists more or less  of manipulating the stack. So all a word does is take items off the stack, does something with them, and possibly puts something back on the stack. It is just damn simple. And you can do things with Factor words you can't do in most other languages (like implement an if statement/expression). And because keeping the stack in your head can be difficult, Factor encourages descriptively-named, concise functions which are easy to reuse. It just gets you developing from the bottom-up from the beginning without worrying about classes and methods and keyword arguments and whatever else can be an impediment in other languages to getting stuff done. That isn't to say Factor doesn't have those (one of the few languages with generic functions). Factor syntax is simple. There's not much to it, whitespace does most of the work.\n\nI'm always looking for the best language possible (as I'm sure most of you are). I think in the future only Lisp via macros or something like Factor can offer something that allows the abstraction needed. The thing I like about Factor so far is it is fairly easy to understand but still so powerful, maybe even more-so than Lisp. And with all the mix-up in the Scheme communities and different people's frustrations with Common Lisp, maybe Factor is really *it*. Maybe its quick progress over the past few years is a testament to what is possible with it.\n\nI'm not sure, but it is an interesting language. The main thing I'm struggling with at the current time is reading the language effectively. The syntax doesn't get in the way, you just have to get used to things being somewhat backwards. You see an 'if' word and you want to try and read the thing like you would in Ruby or Python, but you can't, you have to read from left to right, keeping in mind what is on the stack and then once you get to the 'if', know what it is operating on. I'm really hoping I can get to the point where I can read Factor reliably, because I like it so far.\n\nHas anyone else made the transition from traditional languages to a stack-based language successfully? Is there a moment that everything just clicks?\n\nYou'll have to pardon me because I tend to get overly excited about new technologies at first. I'll have to see what problems I run to as I use Factor more.  ", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "sblinn", "created_utc": "1192849437", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "[deleted]", "created_utc": "1192849639", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192870462", "ups": -13, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425954, "score": -13, "body": "Does the library have a uniform naming convention?\n", "author": "malcontent", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a8fs", "parent_id": "t1_c02a76i", "score_hidden": false, "id": "c02a8fs"}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 12, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425970, "body": " &gt; What's the concurrency model in Factor?\n\nCo-operative threads. Threads yield with explicit calls to `yield` or `sleep`, or when you perform a blocking I/O operation (all I/O is non-blocking internally; reading from a stream pushes the current thread on a queue if there's no data available.)\n\n&gt; Does the VM support multiple processors?\n\nNo. It will eventually.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02a76i", "parent_id": "t1_c02a75u", "id": "c02a76i", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425950, "subreddit_id": "t5_2fwo", "archived": true, "ups": 8, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 8, "body": "There's a concurrency module that adds to Factor's co-operative threads giving erlang style message passing, futures and promises.\n\nThere's also a channels module to do newsqueak style channels.\n\nOn top of these there is distributed channels and concurrency for communication amongst seperate factor instances. Multiple processors could be utilised using this.", "author": "doublec", "created_utc": "1192880844", "distinguished": null, "edited": false, "id": "c02a8sd", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a8sd", "parent_id": "t1_c02a75u", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c02a75u", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425971, "score_hidden": false, "body": "What's the concurrency model in Factor? Does the VM support multiple processors?", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5ypc6", "id": "c02a75u", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "[deleted]", "created_utc": "1192873984", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192897266", "ups": 6, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425938, "score": 6, "body": "  The name makes perfect sense: definitions of words in concatenative languages, of which Factor is one, tend to be heavily factored, i.e. broken into a composition of just a few other words.  ", "author": "psykotic", "archived": true, "distinguished": null, "edited": true, "id": "c02a9qc", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a9qc", "parent_id": "t1_c02a8ka", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a8ka", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -3, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "body": "Most important question is missing: why *Factor* and not *Operand* for example or just *Raptor* if choice of name is more for cutesy/scariness?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ypc6", "id": "c02a8ka", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -7, "author": "[deleted]", "created_utc": "1192877594", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192886782", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -8, "author": "[deleted]", "created_utc": "1192905792", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1192909403", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -10, "author": "[deleted]", "created_utc": "1192913726", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "[deleted]", "created_utc": "1192916374", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -7, "author": "[deleted]", "created_utc": "1192918565", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -11, "author": "malcontent", "created_utc": "1192962019", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192990845", "children": [{"controversiality": 0, "retrieved_on": 1427425860, "subreddit_id": "t5_2fwo", "archived": true, "ups": -6, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": -6, "body": "I think reddit has scripts to auto-upmod stories with haskell and stories submitted from  MS web sites.", "author": "malcontent", "created_utc": "1192998540", "distinguished": null, "edited": false, "id": "c02afqc", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02afqc", "parent_id": "t1_c02af4i", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425867, "id": "c02af4i", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02af4i", "parent_id": "t1_c02ado9", "body": "Are you suggesting people upmod based on merit or interest instead of how popular something is? How terrible!", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192996060", "ups": -6, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425862, "score": -6, "id": "c02afkd", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "body": "[deleted]", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02afkd", "parent_id": "t1_c02ado9", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": -11, "name": "t1_c02ado9", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425886, "score_hidden": false, "id": "c02ado9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ab4l", "body": "Nobody uses factor. They just upmod factor articles because it's so KOOL.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ab4l", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -7, "link_id": "t3_5ypc6", "retrieved_on": 1427425919, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aaxx", "id": "c02ab4l", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aaxx", "ups": 7, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425923, "score_hidden": false, "body": "The thing is that you're only here to pick a fight. If your entire understanding of these languages stems from one single wikipedia article, you should really do some more research before making sweeping claims.\n\nLet's have this discussion again a year from now. Perhaps by then,\n\n* SBCL will finally be stable on Windows\n\n* McCLIM won't be horrifically slow, and trivial to crash by clicking around\n\n* There will be an ML implementation supporting Unicode\n\n* There will be an ML implementation with interactive development in a presentation based UI\n\n* etc etc etc\n\nUntil then, Lisp and ML are more like sources of inspiration to me, than practical tools I can compare with.\n\nIn terms of language coolness,\n\n    (ML, Lisp) &gt; Java &gt; (Ruby, Python, C++)\n\nIn terms of practicality (tools and libraries and stability),\n\n    Java &gt; (Ruby, Python, C++) &gt; (ML, Lisp)\n\nSo you just lost.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aaqr", "id": "c02aaxx", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aaqr", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -10, "link_id": "t3_5ypc6", "retrieved_on": 1427425924, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aagw", "id": "c02aaqr", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02aagw", "controversiality": 0, "archived": true, "ups": 6, "link_id": "t3_5ypc6", "retrieved_on": 1427425928, "id": "c02aagw", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aa9t", "body": "&gt; Either you invented your own terminology, or you are confused. Concatenative is just another word for stack-based.\n\nEnchilada (http://my.opera.com/rapido/blog/) is concatenative but does not use a stack for evaluation. Instead it uses rewriting.", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1192991006", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -6, "author": "[deleted]", "created_utc": "1192991770", "children": [{"controversiality": 0, "retrieved_on": 1427425865, "subreddit_id": "t5_2fwo", "created_utc": "1192992519", "ups": 3, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 3, "id": "c02af9r", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "body": "A dictionary isn't first in, last out. What are you talking about? I wasn't suggesting to use a dictionary to mimick a stack. I wasn't trying to justify use of stacks or anything similar. Please work on your reading comprehension rather than modding me down while replying with incomprehensible garbage.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02af9r", "parent_id": "t1_c02af7e", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -6, "name": "t1_c02af7e", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425866, "score_hidden": false, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02af57", "id": "c02af7e", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02af57", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5ypc6", "retrieved_on": 1427425867, "body": "Not that citing Wikipedia is a way to win arguments... but if you're going to, at least cite an article that doesn't support the other side. The article very clearly says that you can have a concatenative language without a stack. It doesn't take much to figure out how this could work. Imagine a concatenative language where instead of a stack, you pass a dictionary.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aa9t", "id": "c02af57", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": -8, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425930, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02aa9t", "parent_id": "t1_c02a92n", "id": "c02aa9t", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a92n", "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425946, "score_hidden": false, "id": "c02a92n", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a8o9", "body": "[deleted]", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425839, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02ahb9", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": -6, "score_hidden": false, "id": "c02ahb9", "author": "[deleted]", "created_utc": "1193017462", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -6, "parent_id": "t1_c02a8o9", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02a8o9", "controversiality": 0, "archived": true, "ups": -7, "link_id": "t3_5ypc6", "retrieved_on": 1427425952, "id": "c02a8o9", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5ypc6", "body": "[deleted]", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425937, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02a9uo", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "created_utc": "1192899017", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t3_5ypc6", "id": "c02a9uo", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 11, "author": "automator", "created_utc": "1192910401", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 22, "author": "[deleted]", "created_utc": "1192915727", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "automator", "created_utc": "1192925238", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192925402", "ups": 3, "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425913, "score": 3, "body": "We use meta-programming in certain situations, but like Lisp, we prefer to do the quotation building at compile time instead of at run time. We have features for this (macros and parsing words). Composition and partial application is not so much meta-programming as functional programming though, and we do have a lot of code which relies on these features (at run time).\n\nI'll add Factor to the language shootout eventually, if someone else doesn't get to it first. I've been porting the benchmarks over to look for ways to improve the language performance. Main reason I'm not going to submit it right now is that the language is still changing pretty quickly. ", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02ablx", "parent_id": "t1_c02abli", "score_hidden": false, "id": "c02ablx"}], "subreddit_id": "t5_2fwo", "name": "t1_c02abli", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 4, "link_id": "t3_5ypc6", "retrieved_on": 1427425913, "id": "c02abli", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02aaw5", "body": "Slava,\n\nThanks for the detailed reply. That's probably the best explanation of what stack/concatenative programming has to offer that I've seen 'round these parts. It probably *should* make it to your blog at one point or another. :) \n\nThe \"composition is juxtaposition\" metaprogramming angle is definitely interesting. While you can build functions by CONSing from the ground-up in Lisp, that form of metaprogramming seems to be frowned\non in favor of just using macros. Do the Factor libraries get a lot out mileage out of building quotations?\n\nAnyways, some of the other concepts will probably require a little hands-on experimentation to appreciate, but at the very least, your post (and jesusphreak's parent article) have piqued my interest in Factor. I'll probably fetch the latest image later today.\n\nBTW, have you considered adding Factor to the  Language Benchmarks Game over at Alioth? Even if Factor's not going to best O'Caml in terms of speed, people might some mileage out of seeing how the various benchmarks appear as Factor code.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02aecq", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425877, "score": 7, "score_hidden": false, "id": "c02aecq", "author": "ehird", "created_utc": "1192979803", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 7, "parent_id": "t1_c02aaw5", "body": "You've convinced me.\n\nI'm going to learn Factor.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 22, "name": "t1_c02aaw5", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425923, "score_hidden": false, "id": "c02aaw5", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aaiv", "body": "Simple evaluation semantics make it easy to define pseudo-DSLs. The following is valid Factor code:\n\n    USE: calendar\n\n    4 days ago\n\nThe `4 days` pushes a \"time difference\" object on the stack; `ago` takes a time difference and subtracts it from the current time.\n\nNow look at the definition of `ago`,\n\n    : ago before from-now ;\n\nFirst of all it is clear what evaluation of `ago` means; it is equivalent to substituting `before from-now` at the point of the call. `before` negates a time difference, `from-now` adds it to the current time.\n\nSimple evaluation semantics also make certain developer tools very intuitive. For example, when single-stepping through a Lisp program, you're constantly weaving in and out of nested applications. In Factor, single-stepping walks through the program left to right in a very simple way.\n\nThere are some neat meta-programming tricks enabled by the fact that composition is juxtaposition. For example, a fact about functions in general is that (f\u00b0g)^-1=g^-1\u00b0f^-1. Dan's `inverse` library exploits this:\n\n      USE: inverse\n\n      1 2 2array reverse .\n    { 2 1 }\n\n      { 2 1 } [ 2array reverse ] undo . .\n    2\n    1\n\nThis has practical applications, for example unit conversion.\n\n      10 cm [ inches ] undo .\n    500/127\n\nIn Factor, quotations (anonymous functions) are just lists, essentially. Thus they have the important property that they can be printed out in a readable (in the Lisp sense; you can feed it to the parser) way:\n\n      [ 2 + miles ] .\n    [ 2 + miles ]\n\nYou can write code which manipulates quotations as if they were lists; to compose two functions, you append them. Partial application corresponds to adding a value at the front (sort of like cons in Lisp, except these are not linked lists):\n\n      3 [ + ] curry .\n    [ 3 + ]\n\n&gt; Other discussions on the topic seem to sell difficulty as the main point of a concatenative language: because using the stack makes coding harder, you're forced to write better code because you have to keep your word definitions small.\n\nWhoever said this was either trolling or mis-informed. We keep definitions short because stack languages make it easy to do so. We don't make them short because its hard to write long definitions.\n\nIn an applicative language, you have a certain amount of fixed overhead that comes from naming your parameters and nobody bothers defining functions which are just compositions of 2 or 3 other functions (Haskell's point-free style is an exception, you can reuse very small fine-grained snippets in a useful way there.)\n\nIf you wanted to, you could write a 20-line long word in Factor. But then, there's a good chance that your word will contain duplication, will not be very reusable, and will be harder to unit test in an exhaustive manner.\n\nAs for the quadratic formula, I've found that most math formulas can be expressed in a manner where there is only a small number of values being operated on; usually using APL-like vector words does the trick. This often simplifies the math compulation and allows pieces to be named as words and reused which otherwise would not have been apparent.\n\nFor example at some point, a guy on comp.lang.forth asked for help with translating a C example to Forth. His C code computed a smooth fade from one color to another, storing the result in an int[N][3]. However, he was doing everything with int r,g,b local variables, and when translating to Forth he ended up with some pretty crazy stuff (8DUP, etc). In Factor his code became a one-liner involving a `map` and some vector operations.\n\nFor those math formulas which cannot be factored in this way, you can use locals. Locals are not discouraged per se, it is just that in most cases a problem can be solved without locals -- using locals can hinder factorization into small words.\n\nOne final point about interactive development in Factor. If I'm unsure how to solve a problem (either I can't recall the algorithm off-hand, or I'm using an unfamiliar Factor library; there are enough contributed libraries now that I cannot possibly remember all APIs at once), then what I do is I just start pushing some object on the stack. Then I look at them in the inspector, checking out the instance variables, etc. Then I start calling words in the listener to manipulate these objects. Then I look at the results in the inspector, go read some help, etc. Then call some more words. At the end, I've solved my problem \"manually\", by guiding the computer; and chances are, if I take the code I entered into the listener and clean it up a bit, I have a working program. In Lisp this is much harder; you can store previous results in variables and refer to previous results implicitly via `*` `**` `***` and so on, but in general there's no easy way to go from a listener interaction into a program; you end up rewriting, using some ideas you gained from the listener interaction.\n\nClosely related to this is that refactoring mostly becomes copy and paste.\n\nSuppose I have a long definition:\n\n    foo bar baz quux spam eggs ham ...\n\nAnd I decide that `bar baz quux` should be a word of its own, named `frob`; I just copy and paste this into a new definition,\n\n    : frob bar baz quux ;\n\nI find development in Factor to more pleasant than Lisp, not to mention Java, for many reasons, including but not limited to the above. Perhaps I'm stupid and last century (hi lithper), though. :-)\n\nI should probably put this comment in a blog posting. Maybe later, once I think these things over a bit more. So far I've been having so much fun developing in Factor using the awesome libraries people have been contributing that I haven't had time to stop and think about exactly why its so fun. ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aaiv", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 11, "link_id": "t3_5ypc6", "retrieved_on": 1427425927, "id": "c02aaiv", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5ypc6", "body": "Here's a plea from a guy who wants to see the light:\n\nI've dabbled with stack-based languages in the past, and I've never quite been able to wrap my head around why remembering the locations of objects on a stack is better than just giving names to your objects. For me, getting, say, gravity from a variable called \"gravity\" is easier than remembering that at point X in the program, gravity is currently the 4th item down on the stack.\n\nI know Factor does provide variables, but from what I've seen you're supposed to use them sparingly, and prefer the stack.\n\nExtra mental gymnastics aside, stack programming was harder to read, too (well, at least for me.) What really turned me off was seeing a Forth implementation of the quadratic equation. Unlike C++, Java, and Python, where the code looks very similar to the equation, the Forth implementation obscured the math behind a mess of SWAPs and DUPs. \n\nOther discussions on the topic seem to sell difficulty as the main point of a concatenative language: because using the stack makes coding harder, you're forced to write better code because you have to keep your word definitions small. (One individual jokingly referred to this as \"inconvenience-oriented programming.\")\n\nTo me, it all seems sort of silly, and I admit that's probably out of ignorance. So the crux of all this is:\n\nDo any of you stack gurus have a short example that shows something that's not easily done in applicative languages?\n\nA small example demonstrating why the stack paradigm is more powerful (and not just ... different) would go a long way to getting Factor some new users. And helping an ignorant programmer understand what the fuss is about. :)", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "halu", "created_utc": "1192928838", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "gnuvince", "created_utc": "1192930937", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -4, "author": "[deleted]", "created_utc": "1192941309", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192990645", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192990860", "children": [{"controversiality": 0, "retrieved_on": 1427425866, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02af80", "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 0, "score_hidden": false, "body": " Correct. I think that for concatenative languages as they are now, the question is very much open to debate. I personally fall on the side of saying that it is *not* a trade worth making at this time, i.e., I'd not use Factor over Haskell. \n\nHowever, there is much yet to be explored when it comes to concatenative languages. In particular, there are many things that can be done in a concatenative language with recursive combinators in terms of compositional type systems that have yet to be tackled (although www.cat-language.com is a good start). A purely-compositional typed language is really something worth looking at.", "author": "[deleted]", "created_utc": "1192991990", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c02af4p", "id": "c02af80", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02af4p", "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425867, "score_hidden": false, "id": "c02af4p", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02af40", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425868, "body": "  This is like saying functional programming is just normal programming with the added restriction that you can't have side effects. There are additional properties that arise when you remove certain \"features\". ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02af40", "parent_id": "t1_c02acni", "id": "c02af40", "author_flair_css_class": null}], "subreddit": "programming", "ups": -4, "name": "t1_c02acni", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypc6", "retrieved_on": 1427425899, "score_hidden": false, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02ac0a", "id": "c02acni", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02af3o", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425868, "score": 1, "score_hidden": false, "body": " To be fair, that's not quite true. *Applying* the (.) function does *compose* functions to create new functions. That newly composed function is likely to be applied of course.", "author": "[deleted]", "created_utc": "1192990567", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02ac0a", "id": "c02af3o", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425908, "id": "c02ac0a", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02ac0a", "parent_id": "t1_c02abuc", "body": "That's just syntactic sugar for `show (length (words x))`, which is the application of function `show` called on the result of `length` called on the of the application  `words` on `x`.  You still apply functions to arguments.", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "littledan", "created_utc": "1192945822", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02ahgp", "gilded": 0, "link_id": "t3_5ypc6", "retrieved_on": 1427425837, "score": 2, "id": "c02ahgp", "author": "nmessenger", "created_utc": "1193019541", "distinguished": null, "edited": true, "body": "Surround inline code fragments with backticks (usually on the upper left of your keyboard). \n\nAnd yes, the above declaration parses as:\n\n    wordcount = (.) show ((.) length words)\n\nWhich is two applications of the compose function.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02acyj", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02acyj", "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425895, "score_hidden": false, "id": "c02acyj", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02abuc", "body": "In that, you are applying the function &lt;code&gt;(.)&lt;/code&gt; to the arguments &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;length . words&lt;/code&gt;. There is a fundamental difference between this and &lt;code&gt;words length show&lt;/code&gt;, because the latter is the &lt;em&gt;only&lt;/em&gt; thing that can be done, and there's no function &lt;code&gt;(.)&lt;/code&gt; used to do the composition.. But, as another commenter said, it's true that there's an isomorphism here. (But of course Haskell is isomorphic to Factor: they're both Turing-complete!)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02abuc", "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5ypc6", "retrieved_on": 1427425910, "score_hidden": false, "id": "c02abuc", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5ypc6", "body": "&gt; In an applicative language, things are evaluated by applying functions to arguments. This includes almost all programming languages in wide use, such as C, Python, ML, **Haskell**, and Java. In a concatenative programming language, things are evaluated by composing several functions which all operate on a single piece of data, passed from function to function.\r\n\r\n(emphasis mine)\r\n\r\nwordcount = show . length . words\r\n\r\nmaybe I dont understand something here? ", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425201, "subreddit_id": "t5_2fwo", "archived": true, "gilded": 0, "link_id": "t3_5ypc6", "downs": 0, "score": 0, "score_hidden": false, "body": "Great FAQ. Beautiful language. Great implementation.", "author": "factorer", "created_utc": "1193516867", "distinguished": null, "edited": false, "id": "c02bp40", "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t3_5ypc6", "name": "t1_c02bp40", "author_flair_css_class": null}