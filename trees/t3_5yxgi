{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 11, "author": "pkhuong", "created_utc": "1193155935", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "gwern", "created_utc": "1193158908", "children": [{"controversiality": 0, "retrieved_on": 1427425670, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02auc7", "gilded": 0, "link_id": "t3_5yxgi", "downs": 0, "score": 2, "score_hidden": false, "id": "c02auc7", "author": "naughty", "created_utc": "1193162115", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02atwz", "body": "Unique and linear types work for the 'single owner' case of the problem.", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425638, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02awsw", "gilded": 0, "link_id": "t3_5yxgi", "downs": 0, "score": 3, "score_hidden": false, "id": "c02awsw", "author": "Rebooted", "created_utc": "1193182436", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02atwz", "body": " There are \"substructural type systems\" (corresponding to substructural logics) - linear (unique is similar), affine and relevant, which are all concerned with tracing the number and order of uses of operations.\r\n\r\nLinear types are used in Cyclone to ensure the proper ordering on access to regions, in Vault to ensure files are never read unless they are open, etc. They can also be used to guarantee deadlock freedom in concurrent code. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 5, "name": "t1_c02atwz", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425676, "score_hidden": false, "body": "I wonder if region inference is a generalization of uniqueness typing &lt;http://en.wikipedia.org/wiki/Uniqueness_type&gt;? Both seem to do the same thing but the former for many and the latter for one access.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02athr", "id": "c02atwz", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193160246", "name": "t1_c02au2u", "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425674, "score": 7, "score_hidden": false, "body": "I believe the MLKit implementation of SML currently does region inference (as well as garbage collection).", "author": "DRMacIver", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 7, "parent_id": "t1_c02athr", "id": "c02au2u", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "naughty", "created_utc": "1193162118", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02awt3", "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425638, "score": 4, "body": "Well, the post was asking for checking, not inference, which Cyclone does do.", "id": "c02awt3", "author": "pkhuong", "created_utc": "1193182490", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 4, "parent_id": "t1_c02auc8", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 4, "name": "t1_c02auc8", "controversiality": 0, "archived": true, "link_id": "t3_5yxgi", "retrieved_on": 1427425670, "score_hidden": false, "id": "c02auc8", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02athr", "body": "The problem with region inference is that normally you end up with a large global region that will need garbage collecting. The problem is the same as the escape analysis problems mentioned in the article.\n\nThe code tax for regions is also pretty heavy in Cyclone (which last time I looked only provided explicit regions and didn't infer them).", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 11, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425681, "body": "It's called Region inference (or checking), and, iirc, it only requires a small addition to a normal Hindley Milner engine.\r\n\r\nIt has even been implemented in a C-like, C-level language, Cyclone.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02athr", "parent_id": "t3_5yxgi", "id": "c02athr", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "bitwize", "created_utc": "1193163963", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "qwe1234", "created_utc": "1193166699", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "ccshan", "created_utc": "1193168042", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "qwe1234", "created_utc": "1193212103", "children": [{"controversiality": 0, "id": "c02bsar", "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425159, "score": 1, "body": "What sacred cow?", "author": "ccshan", "created_utc": "1193572731", "downs": 0, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c02azrd", "name": "t1_c02bsar", "author_flair_css_class": null}], "subreddit": "programming", "ups": -1, "name": "t1_c02azrd", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425600, "score_hidden": false, "id": "c02azrd", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02av6q", "body": "so???\n\ndo you have a real point to make?\n\nregions, as a general-purpose memory management technique, have only been implemented in mlkit so far. mlkit itself is a research project, and there are *no* significant software projects built using mlkit.\n\nwe can't even test mlkit's claims; for all we know, it might be conceptually broken.\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02av6q", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 7, "link_id": "t3_5yxgi", "retrieved_on": 1427425659, "id": "c02av6q", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02auz9", "body": "Funny how regions were introduced for FP compilation more than a decade ago.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02auz9", "controversiality": 0, "archived": true, "link_id": "t3_5yxgi", "retrieved_on": 1427425662, "score_hidden": false, "id": "c02auz9", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aukd", "body": " wow, for once you are spot on correct.\n\n ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02aukd", "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5yxgi", "retrieved_on": 1427425667, "id": "c02aukd", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yxgi", "body": "ObQwe1234:\n\n&gt; it's called **value semantics**.\n\n&gt; finally, someone who knows something about programming demolishes the gc sacred cow of the fp cult.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "grauenwolf", "created_utc": "1193167761", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -7, "author": "qwe1234", "created_utc": "1193212054", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "grauenwolf", "created_utc": "1193245793", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -4, "author": "qwe1234", "created_utc": "1193250282", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "grauenwolf", "created_utc": "1193252080", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "qwe1234", "created_utc": "1193253890", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "grauenwolf", "created_utc": "1193257662", "children": [{"distinguished": null, "controversiality": 0, "retrieved_on": 1427425434, "subreddit_id": "t5_2fwo", "created_utc": "1193292412", "ups": 0, "gilded": 0, "link_id": "t3_5yxgi", "downs": 0, "score": 0, "id": "c02b73g", "author": "qwe1234", "archived": true, "author_flair_text": null, "edited": true, "body": " that's a different stack. same word, but different concepts. (same as for the word 'heap', unfortunately.)\n\n\n ", "subreddit": "programming", "name": "t1_c02b73g", "parent_id": "t1_c02b3yy", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5yxgi", "retrieved_on": 1427425545, "id": "c02b3yy", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02b3yy", "parent_id": "t1_c02b3g4", "body": "The only inate properties of a stack is that adding and removing items from the top an an O(1) operation. There are no hard rules on how to deal with items in the middle of the stack.\r\n\r\nAn array is a type of list, as is a stack, queue, and linked list.\r\n\r\nThe word heap has two definitions. The first is the type of data structure, the second is the part of memory that applications allocate long-term memory.\r\n\r\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02b3g4", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -2, "link_id": "t3_5yxgi", "retrieved_on": 1427425552, "body": "a heap is not a stack anymore than an array is a list. they're physically different objects with different properties.\n\none of the innate properties of the stack is that it never, ever needs garbage collection.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b372", "id": "c02b3g4", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02b372", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yxgi", "retrieved_on": 1427425555, "body": "In .NET, the \"heap\" really is a stack. Allocation that doesn't trigger a GC is little more than incrementing a stack pointer.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b2xy", "id": "c02b372", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -4, "name": "t1_c02b2xy", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425559, "score_hidden": false, "body": "no, allocating on the heap will never be as cheap and safe as allocating on the stack.\n\nthat's just how the world works: use the right approach, sometimes you need the safe and cheap  (but limited in power) approach, sometimes you need the more powerful and involved approach.\n\ni'm very much against needlessly simplifying things just because certain people aren't capabale of keeping more than one concept in their head.\n\nstack != heap, and there's a good technical reason why that is so.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b2aw", "id": "c02b2xy", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02b2aw", "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yxgi", "retrieved_on": 1427425567, "id": "c02b2aw", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02azr9", "body": "Then do explain to me why. I'm here to learn, not to just flame posers.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -7, "controversiality": 0, "archived": true, "link_id": "t3_5yxgi", "retrieved_on": 1427425600, "id": "c02azr9", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02azr9", "parent_id": "t1_c02av55", "body": "you are wrong.\n", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425599, "subreddit_id": "t5_2fwo", "created_utc": "1193214485", "name": "t1_c02azu3", "gilded": 0, "link_id": "t3_5yxgi", "downs": 0, "score": -1, "score_hidden": false, "body": ";-)\n\nThe author's problem with C# is that he can't get over using C++, because mozilla codebase is in C++.", "author": "Gotebe", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -1, "parent_id": "t1_c02av55", "id": "c02azu3", "author_flair_css_class": null}], "subreddit": "programming", "ups": 8, "name": "t1_c02av55", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425660, "score_hidden": false, "body": "This seems to be a solution looking for a problem. Memory allocation on stack-based heap like C# is just as cheap as allocating it on the local stack. The cost of deallocating can be highly variable, but if you are using short-lived objects, required for this 'solution', it is likewise cheap.\r\n\r\nMeanwhile the author is adding a huge amount of complexity to the language and compiler, complexity that may elminate the meager performance gains he is looking for.\r\n\r\nAnd the author never did explain the problem with C# value types.\r\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yxgi", "id": "c02av55", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "weakly", "created_utc": "1193184559", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425633, "score": 1, "body": "And even more than any of those, what the world needed was for you to post the above comment. Thank you for saving the world!", "author": "[deleted]", "created_utc": "1193186877", "distinguished": null, "edited": false, "id": "c02ax70", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02ax70", "parent_id": "t1_c02awzw", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02ax75", "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425633, "score": 4, "score_hidden": false, "body": "Don't forget love, sweet love", "author": "Tommah", "created_utc": "1193186914", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 4, "parent_id": "t1_c02awzw", "id": "c02ax75", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02awzw", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yxgi", "retrieved_on": 1427425636, "body": "More than potable water, more than access to medicine, more than literacy, yes the world needs references to stack objects to be given out, but that are restricted in their usage so that no one can use them after the objects are destroyed.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yxgi", "id": "c02awzw", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193201314", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193246066", "name": "t1_c02b2cg", "gilded": 0, "link_id": "t3_5yxgi", "retrieved_on": 1427425566, "score": 0, "score_hidden": false, "id": "c02b2cg", "author": "grauenwolf", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c02az88", "body": "In theory the compiler could catch any attempts to break the rules, but all the type annodations needed would make writing an application a true nightmare. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02az88", "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yxgi", "retrieved_on": 1427425607, "score_hidden": false, "body": "Can someone explain to me how this would do more good than bad? It seems that this would have to be enforced at runtime making me have to write code to deal with exceptions as opposed to writing code to correctly deal with possession responsibility.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yxgi", "id": "c02az88", "author_flair_css_class": null}