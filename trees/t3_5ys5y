{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "vagif", "created_utc": "1192991412", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193009549", "ups": 1, "gilded": 0, "link_id": "t3_5ys5y", "retrieved_on": 1427425848, "score": 1, "body": "Yes, for a class.  I didn't like it very much at the time.\n\nYou'd probably be pretty good off on starting with it if you were an Emacs user though (vi guy here).", "author": "DannoHung", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02agn7", "parent_id": "t1_c02af6h", "score_hidden": false, "id": "c02agn7"}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1193013666", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "julesjacobs", "created_utc": "1193046791", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193107559", "ups": 3, "gilded": 0, "link_id": "t3_5ys5y", "retrieved_on": 1427425737, "score": 3, "archived": true, "body": "It seems like you'd need a linear type system to capture the notion of logic variables, so that's a pretty complex type system. My understanding of Alice ML is that a goal was to see how much they could do with only modest extensions to Standard ML (also, I imagine, in order to take advantage of the relative familiarity of Standard ML), so futures are a reasonable alternative to logic variables in a Standard ML-based setting, I think.", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c02apan", "subreddit_id": "t5_2fwo", "name": "t1_c02apan", "parent_id": "t1_c02aj1j", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "name": "t1_c02aj1j", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ys5y", "retrieved_on": 1427425817, "score_hidden": false, "body": "Alice drops Oz's dataflow variables and uses futures instead, right? Is this because it's impossible or hard to design a type system for Oz's model, or are there other reasons?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ah0f", "id": "c02aj1j", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5ys5y", "retrieved_on": 1427425843, "id": "c02ah0f", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02ah0f", "parent_id": "t1_c02af6h", "body": " Yes. I think the book ([CTM](http://www.info.ucl.ac.be/~pvr/book.html)) is awesome, and Oz is a great vehicle for it. I also think the research around typed vs. untyped (or statically typed vs. dynamically typed, if you prefer) variants in the form of [Alice ML](http://www.ps.uni-sb.de/alice/) vs. Oz is very important. But for now, the value of CTM makes Oz an extremely important system. ", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02amih", "gilded": 0, "link_id": "t3_5ys5y", "retrieved_on": 1427425773, "score": 3, "score_hidden": false, "body": "Only for the [the benchmarks game Mozart/Oz programs](http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&amp;lang=oz&amp;lang2=oz).\n\nWhat I found particularly interesting about the experience was how much more aware I became of using mutable state; when the language provided both values and mutable state, and required a clearly different syntax for accessing and assigning mutable state.\n\nOnce I got used to the syntax, it seemed possible to rework programs to be more declarative or more imperative in a playful way.", "author": "igouy", "created_utc": "1193082337", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c02af6h", "id": "c02amih", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "wozer", "created_utc": "1193083605", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02amwp", "gilded": 0, "link_id": "t3_5ys5y", "retrieved_on": 1427425767, "score": 2, "body": "I guess it is hard to use Oz for practical purposes. Lack of libraries, active community.\n\nAny problems in those regards ?\n", "id": "c02amwp", "author": "vagif", "created_utc": "1193084936", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02ampf", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5ys5y", "retrieved_on": 1427425769, "id": "c02ampf", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02ampf", "parent_id": "t1_c02af6h", "body": "I use Oz quite a lot, mostly for \"recreational\" programming.\r\n\r\nAlthough I don't use the logic programming features that much, I enjoy the language a lot. For me, Oz is a nice compromise between Python and Haskell. Excellent support for functional programming, great for prototyping, and if you really NEED explicit state, it's right at your hands.\r\n\r\nThe syntax takes time to get used to. But it is in fact very orthogonal. Oz does not even have special syntax for lambdas: anonymous functions are just a special case of the \"nesting operator\".", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02af6h", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5ys5y", "retrieved_on": 1427425867, "body": "Anyone here used Oz-mozart ?\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ys5y", "id": "c02af6h", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -9, "author": "qwe1234", "created_utc": "1193037993", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193048435", "children": [{"controversiality": 0, "retrieved_on": 1427425806, "subreddit_id": "t5_2fwo", "created_utc": "1193061642", "name": "t1_c02ajvk", "gilded": 0, "link_id": "t3_5ys5y", "downs": 0, "score": 3, "score_hidden": false, "body": "You misunderstand. I think he's releasing his autobiography on reddit, comment by comment.\n\nThey're mostly negative characteristics.", "author": "simen", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 3, "parent_id": "t1_c02aj40", "id": "c02ajvk", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02aj40", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ys5y", "retrieved_on": 1427425816, "score_hidden": false, "body": "How so?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aiq7", "id": "c02aj40", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02aiq7", "controversiality": 0, "author_flair_text": null, "ups": -9, "link_id": "t3_5ys5y", "retrieved_on": 1427425822, "body": "very stupid.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ys5y", "id": "c02aiq7", "author_flair_css_class": null}