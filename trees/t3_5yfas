{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -5, "author": "[deleted]", "created_utc": "1192559258", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "grauenwolf", "created_utc": "1192567602", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029jwn", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426272, "score": 2, "score_hidden": false, "id": "c029jwn", "author": "quhaha", "created_utc": "1192568503", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029jsr", "body": "plus s/IsNull//g   and s/IsNotNull//g", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029jsr", "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5yfas", "retrieved_on": 1427426273, "id": "c029jsr", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029isq", "body": "That would imply creating a new function to replace the old one. In this case, it is just gone.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029kct", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426267, "score": 6, "score_hidden": false, "body": "Inline method? :P", "author": "Rhoomba", "created_utc": "1192573011", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 6, "parent_id": "t1_c029isq", "id": "c029kct", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029isq", "controversiality": 0, "archived": true, "ups": -5, "link_id": "t3_5yfas", "retrieved_on": 1427426286, "id": "c029isq", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yfas", "body": "Then it's not refactoring, it's rewriting. I guess they didn't even read the book :p", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426277, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029jhs", "gilded": 0, "link_id": "t3_5yfas", "downs": 0, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "created_utc": "1192565149", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t3_5yfas", "id": "c029jhs", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -5, "author": "davidvincent2", "created_utc": "1192565426", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029jov", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426275, "score": 16, "body": "I'd like to agree with you, but did you see what they're talking about stripping out?  A method that does nothing more than obfuscate the actual intent of the program.  You shouldn't rip things out just because you don't understand them or why they are the way they are, but you should leave things better than when you found them whenever possible.  This would be a pretty clear-cut case of the latter, not the former.", "author": "48klocs", "created_utc": "1192566543", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "ups": 16, "parent_id": "t1_c029jj7", "score_hidden": false, "id": "c029jov"}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 8, "author": "smalldu", "created_utc": "1192570032", "children": [{"controversiality": 0, "retrieved_on": 1427426261, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yfas", "downs": 0, "score": 1, "id": "c029kr7", "author": "awj", "created_utc": "1192578680", "distinguished": null, "edited": false, "body": "Wow, ugly.\n\nI recently did something similar (but, you know, useful) in a class on C++. I needed functions in a base class to be able to create objects of the correct type for derived classes, so each derivation replaced a virtual 'create' method that looked similar to this.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029kr7", "parent_id": "t1_c029k2z", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 4, "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426258, "score": 4, "id": "c029kz2", "author": "grauenwolf", "created_utc": "1192582245", "distinguished": null, "edited": false, "body": "Hey kids, lets all sing \"We love factory methods!\"", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029kz2", "parent_id": "t1_c029k2z", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192582285", "name": "t1_c029kz6", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426258, "score": 6, "score_hidden": false, "id": "c029kz6", "author": "joe24pack", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 6, "parent_id": "t1_c029k2z", "body": "This sort of construct might only make sense in a factory or builder pattern where you may need to perform some sort of complex and/or configurable initialization of the object.  Obviously that is missing in the example.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 8, "name": "t1_c029k2z", "controversiality": 0, "archived": true, "link_id": "t3_5yfas", "retrieved_on": 1427426270, "score_hidden": false, "id": "c029k2z", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029jj7", "body": "This reminds me of a former co-worker. When he left, some of his project was assigned to me. One of the C# had over three thousand lines and they were like this:\n\n\tprotected DataLayer GetDataLayer()\n\t\t{\n\t\t\tDataLayer objDL = new DataLayer();\n\t\t\treturn objDL;\n\t\t}\n\n\t\tprotected English GetEnglish()\n\t\t{\n\t\t\tEnglish objEG = new English();\n\t\t\treturn objEG;\n\t\t}\n\n\t\tprotected DropDownList GetDropDownList()\n\t\t{\n\t\t\tDropDownList objDDL = new DropDownList();\n\t\t\treturn objDDL;\n\t\t}\n\n\t\tprotected LinkButton GetLinkButton()\n\t\t{\n\t\t\tLinkButton objLBT = new LinkButton();\n\t\t\treturn objLBT;\n\t\t}\n", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192573272", "ups": 12, "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426267, "score": 12, "body": "&gt; Wrong. You'd better have an idea of why the guy did that before...\n\nI do. He sucked.", "id": "c029kda", "author": "Entropy", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029kda", "parent_id": "t1_c029jj7", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029jj7", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -5, "link_id": "t3_5yfas", "retrieved_on": 1427426277, "id": "c029jj7", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yfas", "body": "Wrong.\nYou'd better have an idea of why the guy did that before, or already have implemented the same kind of thing in the past.\nElse you'll just find yourself in the same situation than the guy who wrote this, cause you'll encounter the same difficulties than the previous coder has experienced that \"forced\" him to write that kind of thing (unless he rewrote everything once he had understood how a noob he was not seeing this comin..).", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "DRMacIver", "created_utc": "1192571437", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 10, "author": "kg2", "created_utc": "1192574290", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "DRMacIver", "created_utc": "1192575251", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "schizobullet", "created_utc": "1192583942", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192608094", "name": "t1_c029mnx", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426237, "score": 11, "score_hidden": false, "body": "Ok. Great, good call. Can I have a pony too?", "author": "DRMacIver", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 11, "parent_id": "t1_c029l3s", "id": "c029mnx", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029l3s", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 7, "link_id": "t3_5yfas", "retrieved_on": 1427426256, "id": "c029l3s", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029kj5", "body": "Greenspun's isn't suggesting to throw up your arms and write ugly Java. It's suggesting that you stop using Java in the first place.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 7, "name": "t1_c029kj5", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yfas", "retrieved_on": 1427426265, "score_hidden": false, "body": "Sure. It's not like I don't know about that. Most of my non-work code is in Scala or Haskell, both of which can quite handily manage laziness without macros. But Java doesn't have macros, does it? This isn't an excuse to just throw your arms up in the air and say \"Oh well, my language doesn't have feature X that I'd really like. I'm just going to write lots of verbose and repetitive code instead!\". If you can write tidier code within the language then you should do so, even if it causes people to whine about Greenspunning at you.\n\nThe lack of short circuiting doesn't end up being much of a problem for the use cases I had for it (it mainly gets used for tidying up some if statements in which the expressions tend to be constant anyway)", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029kg8", "id": "c029kj5", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 10, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5yfas", "retrieved_on": 1427426265, "id": "c029kg8", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029kg8", "parent_id": "t1_c029k8f", "body": "Greenspun's 10th Law strikes again.  This time: programmer implements \"and\" macro as non-short-circuit method!", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029k8f", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5yfas", "retrieved_on": 1427426268, "id": "c029k8f", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yfas", "body": "I have a helper method called notNull which I sometimes use.\n\nAdmittedly it's a varargs method which returns true only if all of its arguments are non-null. So it's not quite the same thing. :-)\n", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 15, "author": "joe24pack", "created_utc": "1192575906", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "DaveBr", "created_utc": "1192615879", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192783829", "ups": 1, "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426044, "score": 1, "body": "if its on tdwtf, it would be true, false and FILENOTFOUND.", "author": "dysmas", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c02a1hc", "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a1hc", "parent_id": "t1_c029myr", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 4, "name": "t1_c029myr", "controversiality": 0, "archived": true, "link_id": "t3_5yfas", "retrieved_on": 1427426232, "score_hidden": false, "id": "c029myr", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029kky", "body": "Nobody expects the Boolean Inquisition, our two weapons are true and false... and don't care terms.... Our *three* weapons are true, false, and don't care terms... and unknown terms... *Amongst* our weaponry are such elements as... no... I'll come in again...", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 15, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yfas", "retrieved_on": 1427426263, "body": "&gt; What about\n&gt;\n&gt;public static final boolean MightBeNull(Object inObject) {\n&gt;          boolean retVal = false;\n&gt;          return true;\n&gt;     }\n\n\n*That* had to be the best comment.\n", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029kky", "parent_id": "t3_5yfas", "id": "c029kky", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": -10, "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426239, "score": -10, "body": "[deleted]", "author": "[deleted]", "created_utc": "1192604171", "distinguished": null, "edited": false, "id": "c029mgn", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029mgn", "parent_id": "t3_5yfas", "score_hidden": false, "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "roerd", "created_utc": "1192621522", "children": [{"distinguished": null, "controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029ppx", "gilded": 0, "link_id": "t3_5yfas", "retrieved_on": 1427426197, "score": 2, "score_hidden": false, "id": "c029ppx", "author": "Neoncow", "created_utc": "1192646259", "author_flair_text": null, "edited": false, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c029n65", "body": "Yes, it makes it harder for a human programmer to figure out what the code does. Abstraction is a powerful tool against complexity, but don't use it against simplicity.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -1, "name": "t1_c029n65", "controversiality": 0, "archived": true, "link_id": "t3_5yfas", "retrieved_on": 1427426230, "score_hidden": false, "id": "c029n65", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yfas", "body": "Is that code really a problem? Shouldn't the compiler be able to automatically inline those methods?\n\n[EDIT: I'm not advocating putting something into a method of its own that would be at least as concise and obvious otherwise. I'm just asking if it's really that bad and would like to get an answer rather than just downvotes alone.]", "author_flair_css_class": null}