{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193838014", "name": "t1_c02ccu9", "gilded": 0, "link_id": "t3_5ziov", "retrieved_on": 1427424893, "score": 1, "score_hidden": false, "id": "c02ccu9", "author": "iends", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5ziov", "body": "trust nothing from the user, validate everything.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "muttleee", "created_utc": "1193838140", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "Bogtha", "created_utc": "1193838917", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193839010", "ups": 3, "gilded": 0, "link_id": "t3_5ziov", "retrieved_on": 1427424891, "score": 3, "body": "Totally relevant.. I should have mentioned db in question.", "id": "c02ccy9", "author": "ambiversive", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02ccy9", "parent_id": "t1_c02ccxw", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "muttleee", "created_utc": "1193839218", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "Bogtha", "created_utc": "1193840309", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "muttleee", "created_utc": "1193843262", "children": [{"controversiality": 0, "id": "c02cf4n", "subreddit": "programming", "author_flair_text": null, "ups": 2, "gilded": 0, "link_id": "t3_5ziov", "retrieved_on": 1427424863, "score": 2, "body": "[here](http://namb.la/popular/) was a fun use of purely client-side malicious code (a cross-site scripting worm).\n\nDo also read [the explanation/post mortem](http://namb.la/popular/tech.html)", "author": "masklinn", "created_utc": "1193854721", "downs": 0, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c02cdez", "name": "t1_c02cf4n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02cdez", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5ziov", "retrieved_on": 1427424885, "id": "c02cdez", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02cd3d", "body": "I'll take your word for it.  That's beyond my limited experience of these things, I'm afraid.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5ziov", "retrieved_on": 1427424890, "id": "c02cd3d", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02cd3d", "parent_id": "t1_c02ccyy", "body": "&gt; I assumed there was a database involved\n\nI'm not saying there isn't.  I'm saying that it's not an *input* problem.\n\n&gt; otherwise there's not a lot the user can do with malicious code\n\nThere's plenty a user can do with malicious code that doesn't involve a database.  For example, if you don't check for newlines in `&lt;input type=\"text\"&gt;` in a contact form, it can often be hijacked to send spam.  Or if you invoke a shell, you need to watch your arguments.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02ccyy", "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5ziov", "retrieved_on": 1427424891, "id": "c02ccyy", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ccxw", "body": "I assumed there was a database involved because otherwise there's not a lot the user can do with malicious code etc.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ccxw", "ups": 0, "controversiality": 0, "archived": true, "link_id": "t3_5ziov", "retrieved_on": 1427424892, "score_hidden": false, "id": "c02ccxw", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ccut", "body": "That's a problem with sending output to a database, not accepting input from a form.  Entirely different things.\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02ccut", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5ziov", "retrieved_on": 1427424893, "id": "c02ccut", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5ziov", "body": "[Take heed of the wisdom of XKCD.](http://xkcd.com/327/)", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "CoastOfYemen", "created_utc": "1193838313", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193840268", "name": "t1_c02cd32", "gilded": 0, "link_id": "t3_5ziov", "retrieved_on": 1427424890, "score": 4, "score_hidden": false, "id": "c02cd32", "author": "PleaseBeSerious", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 4, "parent_id": "t1_c02ccvm", "body": "Glad you learned from your parents' mistakes.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -2, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ziov", "retrieved_on": 1427424892, "body": "I always use protection when I input.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02ccvm", "parent_id": "t3_5ziov", "id": "c02ccvm", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427424891, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02ccz4", "gilded": 0, "link_id": "t3_5ziov", "downs": 0, "score": 3, "score_hidden": false, "id": "c02ccz4", "author": "kmactane", "created_utc": "1193839251", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 3, "parent_id": "t3_5ziov", "body": "As someone with prior experience writing in Perl, I generally try to pretend I'm working in [Perl's taint mode](http://search.cpan.org/dist/perl/pod/perlsec.pod): any variable which was externally supplied is tainted. Any variable which was derived from a tainted variable is, itself, tainted.\n\nAnd variables are untainted by carefully verifying that they match a particular pattern, preferably a regex that includes initial and/or final bindings. (That is, a ^ at the beginning or a $ at the end - both if possible).\n", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 8, "author": "Bogtha", "created_utc": "1193839946", "children": [{"controversiality": 0, "retrieved_on": 1427424890, "subreddit_id": "t5_2fwo", "created_utc": "1193840489", "ups": 1, "gilded": 0, "link_id": "t3_5ziov", "downs": 0, "score": 1, "body": "That's the kind of answer that brings a tear to my eye. ", "author": "ambiversive", "archived": true, "distinguished": null, "edited": false, "id": "c02cd41", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02cd41", "parent_id": "t1_c02cd1s", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193850754", "name": "t1_c02cei7", "gilded": 0, "link_id": "t3_5ziov", "retrieved_on": 1427424871, "score": 1, "score_hidden": false, "body": "Don't just trust escaping to do the job. Don't ever concatenate anything that could have ever been entered by a user. Use stored procedures and most, if not all, sql injection attacks will fail.\r\n\r\nThe rest is all good info.", "author": "jojotdfb", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02cd1s", "id": "c02cei7", "author_flair_css_class": null}], "subreddit": "programming", "ups": 8, "name": "t1_c02cd1s", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ziov", "retrieved_on": 1427424890, "score_hidden": false, "body": "Off the top of my head:\n\n* Normalise the characters.  You probably want to throw away non-printing control characters, weird astral plane characters, etc.  You absolutely want to be sure what character encoding you are using.  Better yet, normalise everything to one character encoding, UTF-8 is usually best.  Risks mitigated: UTF-7 attacks and screwed up \"special\" characters like curly quotes.\n\n* Validate the input.  Client-side validation alone is not good enough.  Remember that users can submit anything they want, so watch out for things like newlines in `&lt;input type=\"text\"&gt;`, etc.  Risk mitigated: validation being bypassed either intentionally or unintentionally.\n\n* SQL escaping is something you do when you talk to the database.  It is not something you do to validate input.  Only SQL escape data when you are putting it into your database.  Better yet, use one of the database interfaces that escapes things for you.  Risk mitigated: SQL injection attacks.\n\n* HTML encoding is something you do when you output data.  It is not something you do to validate input.  Only HTML encode data when you are outputting it.  Better yet, use a template system that does it automatically.  Risk mitigated: XSS attacks.\n\n* Do not use `strip_tags()`.  If you don't have to allow people to post HTML, then encode everything.  If you have to allow people to post HTML, then use an element type and attribute *whitelist* (not blacklist) and encode disallowed markup so that it appears literally.  Risks mitigated: data loss from unexpected stripping, XSS attacks.\n\n* Test.  Have a standard set of inputs that contain all the unusual input you can think of, and submit them one by one to see if your application handles them correctly.  A tool like cURL is useful for this.  Risk mitigated: you forgetting something.\n\n* Use nonces.  When you need to be sure that a user submitted something intentionally (e.g. deleting an item from the database), then include a hidden field in the form that contains a random value that is only transmitted to that user.  Check for this value upon form submission and error on anything that doesn't include it.  Risk mitigated: CSRF attacks.\n\n* Don't bother checking the Referer header or IP addresses, you'll annoy legitimate users for no good reason.\n\nEdit:\n\nUnsurprisingly, people have written these things up in far more depth than this little comment.  Check out:\n\n* [Secure PHP Wiki](http://www.securephpwiki.com/)\n* [Web Application Security](http://www.phpwact.org/security/web_application_security)", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5ziov", "id": "c02cd1s", "author_flair_css_class": null}