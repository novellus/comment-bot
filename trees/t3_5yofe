{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "Wagnerius", "created_utc": "1192820441", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02a7nf", "gilded": 0, "link_id": "t3_5yofe", "retrieved_on": 1427425964, "score": 1, "body": "The wikipedia article is a good start for understanding the basics. The reference links look promising. You might want to check out reviews on the recommended reading for the Pov-Ray project[1] to see if any of the books listed are worthwhile.\n\nIf you find or anyone has recommendations on a good book I'd like to hear it as well.\n\n[1] http://www.povray.org/documentation/view/3.6.1/211/", "id": "c02a7nf", "author": "awj", "created_utc": "1192855596", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02a4ic", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "otakucode", "created_utc": "1192890955", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "theeth", "created_utc": "1192895662", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "otakucode", "created_utc": "1192897760", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "theeth", "created_utc": "1192902345", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192916701", "ups": 0, "gilded": 0, "link_id": "t3_5yofe", "retrieved_on": 1427425921, "score": 0, "score_hidden": false, "id": "c02aayw", "author": "otakucode", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02aayw", "parent_id": "t1_c02aa2r", "body": "Yes, realtime", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02aa2r", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yofe", "retrieved_on": 1427425933, "score_hidden": false, "body": "&gt; but few idiots would be dumb enough to try ray tracing with polygonal approximations of objects.\n\nStill talking about realtime rendering or is that a broad generalization that I will just have to disagree with?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a9rg", "id": "c02aa2r", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Lerc", "created_utc": "1192961344", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "otakucode", "created_utc": "1192972868", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Lerc", "created_utc": "1192994763", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193080971", "ups": 1, "gilded": 0, "link_id": "t3_5yofe", "retrieved_on": 1427425774, "score": 1, "body": " Gentlemen, i would like to participate but i would like a bit of help.\nAny reference to educate me on the subject at hand ?\n\nNote that both points seems valid : continuous surface for precision, pixel depedant speed vs  polygon dependant speed but again ...\n ", "author": "Wagnerius", "author_flair_text": null, "distinguished": null, "edited": true, "id": "c02ambg", "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02ambg", "parent_id": "t1_c02afgr", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02afgr", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yofe", "retrieved_on": 1427425863, "body": "Only if your post above actually meant the opposite of what the words say.\n\nContinuous surfaces are easier to do with ray traced rendering.  Triangles are not difficult though.   You said\n&gt;few idiots would be dumb enough to try ray tracing with polygonal approximations of objects.\n\nMany people at the forefront of raytracing are doing just that.  They are not idiots.\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02ae00", "id": "c02afgr", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02ae00", "controversiality": 0, "archived": true, "link_id": "t3_5yofe", "retrieved_on": 1427425882, "score_hidden": false, "id": "c02ae00", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02adn8", "body": "I think you misunderstood what I said.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02adn8", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yofe", "retrieved_on": 1427425887, "body": "No. There are a fair few ray-tracers out there that use triangles exclusively.   Non-triangular surfaces are not the main force pushing raytracing development.  One of the more significant factors is that when using appropriate geometry search structures, the speed is more dependant on pixel count than polygon count.  The number of polygons used is increasing at a higher rate than the number of pixels. \n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a9rg", "id": "c02adn8", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5yofe", "retrieved_on": 1427425938, "id": "c02a9rg", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a9rg", "parent_id": "t1_c02a9md", "body": "Technically that is true... but few idiots would be dumb enough to try ray tracing with polygonal approximations of objects.  Using continuous surfaces is more efficient and is almost the rule when it comes to ray tracing.  If you don't move to continuous surfaces, there really isn't much of an advantage to using ray tracing.  You can get pretty close with the current algorithms to the best a 50-polygon sphere is going to get.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a9md", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yofe", "retrieved_on": 1427425940, "body": "You do know that the raytracing concept is independent from the definition of the models,  whether it is polygonal, mathematic surfaces, CSG, ... right?", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a9al", "id": "c02a9md", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a9al", "controversiality": 0, "archived": true, "link_id": "t3_5yofe", "retrieved_on": 1427425943, "score_hidden": false, "id": "c02a9al", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a4ic", "body": "Right now it has no chance of making any headway into the gaming industry at all.  All gaming graphics since they started doing 3D have been polygonal-based, and they show no intention of ever entertaining anything besides polygonal graphics.  We need a graphics API like OpenGL or DirectX that is centered around the idea of continuous surfaces and then someone like Microsoft or someone big to kick nVidia and ATI in the ass to get them interested in making chips that accelerate such things.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a4ic", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5yofe", "retrieved_on": 1427426006, "id": "c02a4ic", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yofe", "body": " The ray-tracing problem is one of the more concurrent around. Add the fact that it could change the multi-billion game indsutry and suddendly this looks like a very very important topic.\n\nAny info on what to read first to understand what going on ? I mean to understand current SIGGRAPH papers on the subject.\n ", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Kolibri", "created_utc": "1192821073", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "dmpk2k", "created_utc": "1192827317", "children": [{"controversiality": 0, "retrieved_on": 1427425993, "subreddit_id": "t5_2fwo", "created_utc": "1192827870", "ups": 1, "gilded": 0, "link_id": "t3_5yofe", "downs": 0, "score": 1, "id": "c02a5fs", "author": "Kolibri", "archived": true, "distinguished": null, "edited": false, "body": "I'm afraid the article I wrote is long gone.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a5fs", "parent_id": "t1_c02a5di", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a5di", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yofe", "retrieved_on": 1427425994, "id": "c02a5di", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a4km", "body": "Wow, this sounds interesting. I don't suppose you have a more elaborate writeup on this elsewhere?", "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02a4km", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yofe", "retrieved_on": 1427426004, "score_hidden": false, "body": "&gt;One year latter, Tim Purcell also published a paper on GPU based photon-mapping.\r\n\r\nI tried implementing that algorithm on a Radeon 9800 pro. Two words: Not recommendable. \r\n\r\nThe radeon 9800 pro is only capable of a few texture reads per processing cycle. So I had to split a rather simple algorithm into six or so steps. After each step, I saved the intermediate result encoded as RGB colors for in the output image. Before each step I fetched the result of the previous image.\r\n\r\nDebugging it was even worse. I used some photo editing tool to manually read the colour of each pixel to get the values of intermediate results. :(", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yofe", "id": "c02a4km", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "derni", "created_utc": "1192837249", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192855056", "name": "t1_c02a7m3", "gilded": 0, "link_id": "t3_5yofe", "retrieved_on": 1427425966, "score": 1, "score_hidden": false, "id": "c02a7m3", "author": "awj", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02a6az", "body": "The PC perspective article that apparently kicked all of this off can be found here: http://www.pcper.com/article.php?aid=455\n\nThe post linked here on reddit is mostly a reply to this original blog entry here: http://blogs.intel.com/research/2007/10/real_time_raytracing_the_end_o.html\n\nIf you'd like a general explanation or understanding of raytracing, the wikipedia article does a decent job here: http://en.wikipedia.org/wiki/Raytracing#Broad_description_of_ray_tracing_computer_algorithm", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a6az", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yofe", "retrieved_on": 1427425982, "score_hidden": false, "body": "Is there an understandable version of this article somewhere? This sounds extremely interesting but I'm not a computer wizard.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yofe", "id": "c02a6az", "author_flair_css_class": null}