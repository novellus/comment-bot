{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "berklee", "created_utc": "1193271884", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193273256", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -9, "author": "berklee", "created_utc": "1193274238", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193275001", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193277052", "name": "t1_c02b5y9", "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425520, "score": -3, "score_hidden": false, "body": "Hell yes! Emacs users, use your strong fingers to poke the eyes out of those IDE heathens!", "author": "OMouse", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": -3, "parent_id": "t1_c02b5qw", "id": "c02b5y9", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425357, "score": 1, "id": "c02bd8b", "author": "grauenwolf", "created_utc": "1193353520", "distinguished": null, "edited": false, "body": "Vi and Emacs are just bloated-ware. Real programmers use edlin.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02bd8b", "parent_id": "t1_c02b5qw", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425522, "id": "c02b5qw", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02b5qw", "parent_id": "t1_c02b5o6", "body": "CLI also stands for *command line interface*, we don't need no steenkin' IDE! Vi (or Emacs) was good enough for Benjamin Franklin, it ought to be good enough for the likes of you (and me!)", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": -5, "author": "joe90210", "created_utc": "1193275805", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": -8, "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425515, "score": -8, "body": "Dear joe90210.\n\nSuck it. Seriously.\n\nLove,\nberklee.", "author": "berklee", "created_utc": "1193280766", "distinguished": null, "edited": false, "id": "c02b6ac", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02b6ac", "parent_id": "t1_c02b5tn", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02b5tn", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": -5, "link_id": "t3_5z1wo", "retrieved_on": 1427425521, "body": "someone stop feeding this troll", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b5o6", "id": "c02b5tn", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 11, "author": "derekslager", "created_utc": "1193276972", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "berklee", "created_utc": "1193280722", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193318388", "name": "t1_c02b8ha", "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425416, "score": 3, "score_hidden": false, "id": "c02b8ha", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c02b6a6", "body": "If you're interested in VS, download the VS 2008 beta (Orcas) AFAIK it's free, and I find it vastly better than 2005. If you're using it for F# on Vista, you'll need to use one of the batch files in the install directory to get it properly integrated into VS&gt;", "author_flair_css_class": null}], "subreddit": "programming", "ups": 6, "name": "t1_c02b6a6", "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425515, "score_hidden": false, "id": "c02b6a6", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02b5y0", "body": "Thanks for the info - maybe I'll stick a toe in the water and see what happens.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425416, "score": 1, "body": "I got VS 2005 for free. Thanks MSDNAA! And then I got the Orcas beta for free from a MS user group. They're quite keen on giving their software out for free. I imagine it works like crack dealers. Get ya hooked, then start jacking up the price...\r\n\r\nOr I could stick to the express versions.", "author": "[deleted]", "created_utc": "1193318297", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02b8h0", "parent_id": "t1_c02b5y0", "score_hidden": false, "id": "c02b8h0"}], "subreddit_id": "t5_2fwo", "ups": 11, "name": "t1_c02b5y0", "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425520, "score_hidden": false, "id": "c02b5y0", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02b5o6", "body": " There is no enterprise edition of C# or F#. There are some tools for writing software with these languages that cost money, such as Visual Studio, but you certainly don't need them.\n\nI currently get paid to develop software that (mostly) targets the .NET runtime, and I don't have any version of Visual Studio installed on my machine.\n\nThe runtime and the SDK (including all necessary compilers, documentation, tools, and even a _very_ high quality graphical debugger) are distributed free of charge. If it's not free enough for you, use Mono. It works quite well too, and it decouples you from Windows, which definitely ain't free. ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -9, "name": "t1_c02b5o6", "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425523, "score_hidden": false, "id": "c02b5o6", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02b5kg", "body": "But I'm not getting the framework and interop for free if I have to shell out a thousand dollars for an enterprise edition of a language...", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425525, "id": "c02b5kg", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02b5kg", "parent_id": "t1_c02b5gc", "body": "You get the .NET framework and interop with C#/VC++/VB/etc. for free. And your Windows box is good for something besides gaming and attracting malware.", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 12, "author": "[deleted]", "created_utc": "1193273796", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -3, "author": "berklee", "created_utc": "1193274146", "children": [{"controversiality": 0, "retrieved_on": 1427425518, "subreddit_id": "t5_2fwo", "created_utc": "1193278514", "name": "t1_c02b631", "gilded": 0, "link_id": "t3_5z1wo", "downs": 0, "score": 2, "score_hidden": false, "id": "c02b631", "author": "chollida1", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02b5ns", "body": " &gt; 1) Isn't that what DLLs, etc. are for?\n\nNot really, try writing code in python and seamlessly inheriting from it in Python, this is what .net allows you to do with its languages.\n\n\n\n ", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "[deleted]", "created_utc": "1193280065", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425516, "score": 1, "id": "c02b69q", "author": "berklee", "created_utc": "1193280612", "distinguished": null, "edited": false, "body": "Thanks for taking the time to answer my questions... one last one (he said in his best Columbo voice):\n\n\"It also limits the number of applications that can run simultaneously, as the operating system tries to load into memory duplicate copies of the same libraries over and over again, one copy of every library for every application.\"\n\nNot that it's a good mindset to have, but... I've yet to see any really small yet useful .NET apps - at least to the point where I would run several. Most of the ones I've encountered have been enterprise tools of various sorts, where you wouldn't be running many at the same time.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02b69q", "parent_id": "t1_c02b685", "score_hidden": false, "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193308341", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193318136", "name": "t1_c02b8g8", "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425416, "score": 7, "score_hidden": false, "id": "c02b8g8", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "ups": 7, "parent_id": "t1_c02b7u4", "body": " &gt;type inference in F# breaks when you start using objects.\r\n\r\nI've only found that it breaks when there exists multiple overloadings for the same method that are only differentiated by different types, and the types of the arguments being passed can't be inferred from the context. \r\n\r\nfor example\r\n\r\n    let getSub target = \r\n        let sub, index = \"foo\", 4 in\r\n        target.IndexOf(sub, index);;\r\n\r\ndoesn't need type annotations despite using the System.String methods.\r\n\r\nBut \r\n\r\n    let getSub target sub index = \r\n        target.IndexOf(sub, index);;\r\n\r\nWill need three annotations...\r\n\r\n    let getSub (target:string) (sub:string) (index:int) = \r\n        target.IndexOf(sub, index);;\r\n\r\nWhich isn't too surprising considering that according to the MSDN docs there's about 500 objects with an IndexOf method, and a goodly portion have two arguments.\r\n\r\nI've only written about 150 lines of F# now, but I've only used 4 type notations, and three were in the above situation. ", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425424, "id": "c02b7u4", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02b7u4", "parent_id": "t1_c02b685", "body": "I think Mono does JIT compilation, but you can only distribute a .Net binary compiled to native code on Windows.  That probably doesn't matter in Enterprise hell, but it's enough for me to write it off.\n\nI wrote a Prolog compiler for .Net when I took my compilers course, and the language-neutral aspect of .Net is a bit of a mixed blessing.  It's probably great if every language has similar semantics, but it took some serious liberties with Prolog's semantics to make it play nice with .Net, and it's been noted elsewhere on Reddit that type inference in F# breaks when you start using objects.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 9, "name": "t1_c02b685", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425516, "score_hidden": false, "body": " &gt; 1) Isn't that what DLLs, etc. are for?\n\nDLLs can be used to provide an inter-language API, but they only export a procedural interface, not an object-oriented one. The data structures and methods from one language must usually be marshalled before they can be accessed from another language, which is usually a tedious and error prone process, and different depending on which pair of languages are involved.\n\n&gt; 2) That doesn't seem like a selling feature, just less maintenance for MS. I might be wrong here, but what's gained from it?\n\nNative code speed. If you've ever tried to implement a performance sensitive application in an interpreted language, you'll realize that having everything automatically run as native code can make a big difference in execution speed.\n\n&gt; 3) That must be the 'DLL Hell' avoidance thing. Makes sense, but wouldn't it make more sense to just import the appropriate libraries into your own code, or distribute your own copies of whatever's needed into your own application directory?\n\nYou can certainly do that, although if every application has to install their own version of every library you end up wasting a lot of disk space duplicating the same code over and over again. It also limits the number of applications that can run simultaneously, as the operating system tries to load into memory duplicate copies of the same libraries over and over again, one copy of every library for every application.\n\n\n ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02b5ns", "id": "c02b685", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -3, "name": "t1_c02b5ns", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425523, "score_hidden": false, "body": "1) Isn't that what DLLs, etc. are for?\n\n2) That doesn't seem like a selling feature, just less maintenance for MS. I might be wrong here, but what's gained from it?\n\n3) That must be the 'DLL Hell' avoidance thing. Makes sense, but wouldn't it make more sense to just import the appropriate libraries into your own code, or distribute your own copies of whatever's needed into your own application directory?\n\n4) Of course, that part doesn't surprise me. Mainly because MS has to cater to a 3rd party developer market as well (whether intentional or not). ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b5mg", "id": "c02b5ns", "author_flair_css_class": null}], "subreddit": "programming", "ups": 12, "name": "t1_c02b5mg", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425524, "score_hidden": false, "body": " Well I ain't no MS champion, but I've done a fair bit of C# programming, and I can see a few advantages of having a common runtime like .Net:\n\n1) A large variety of languages can easily interoperate. Classes can be defined in one language and instantiated in another. This means that everyone on the .Net platform gets to use each other's libraries, even if they don't agree on an implementation language.\n\n2) All languages are compiled down to a common bytecode (the MSIL intermediate language), and the run-time JIT compiles that bytecode into native code on the fly. So all code, even dynamically generated code, gets the benefit of native execution speed. Most interpreted languages (Python, Ruby, perl) don't have that (yet).\n\n3) The .Net platform has a strong versioning system which allows you to specify which versions of other libraries are required by your code. Multiple versions of the same library can be installed simultaneously in the system wide library (the global assembly cache). This makes managing dependencies much  less prone to conflict.\n\n4) The standard libraries that come with .Net are pretty good (with a few exceptions). Much better than the Win32 API or MFC, at least. There are some obvious things missing, such as FTP protocol support, file archives (e.g. zip, gz, etc.); there are some things that are much harder than they should be, such as bitmap image manipulation, but overall the libraries are a lot better than anything I've seen on the Microsoft platform before, and compare pretty well with other platform APIs I've used. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02b5gc", "id": "c02b5mg", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "risomt", "created_utc": "1193280120", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193280615", "name": "t1_c02b69r", "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425516, "score": 11, "score_hidden": false, "id": "c02b69r", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 11, "parent_id": "t1_c02b68b", "body": "  &gt; is microsoft trying to push a 'pythonic' style language onto .net?\n\nNot really. F# is a version of OCaml from the functional family of languages based on \"ML\". It's heritage is much older than python. It shares some features with python e.g. high level data structures and terse code, but differs in that it is functional and statically typed.   ", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193288736", "name": "t1_c02b6wl", "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425436, "score": 6, "score_hidden": false, "id": "c02b6wl", "author": "chollida1", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 6, "parent_id": "t1_c02b68b", "body": "&gt; I agree - the first look at these examples garnered nothing more than a furrowed brow and a question: is microsoft trying to push a 'pythonic' style language onto .net?\n\nDo you mean like IronPython?  ", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425416, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02b8hk", "gilded": 0, "link_id": "t3_5z1wo", "downs": 0, "score": 1, "score_hidden": false, "body": "It's quite fun actually - assuming you're familiar with FP. I've hurt my brain trying to think recursively over the last few days. (Tail call optimised, natch).", "author": "[deleted]", "created_utc": "1193318456", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02b68b", "id": "c02b8hk", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425516, "body": " I agree - the first look at these examples garnered nothing more than a furrowed brow and a question: is microsoft trying to push a 'pythonic' style language onto .net?\n\nIt seems like a nice bridge between the two - something friendly for the familiar '#' developer, yet something that seems designed to increase productivity overall.\n\nOverall? I think this is great. It in no way even interests me as a python developer (hello ironpython), but I do admit that it looks much more 'fun' than C#. Definitely a great move for a series of languages that, to me, were boring.", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02b68b", "parent_id": "t1_c02b5gc", "id": "c02b68b", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193353288", "ups": 3, "gilded": 0, "link_id": "t3_5z1wo", "retrieved_on": 1427425355, "score": 3, "body": "As a VB6 developer, I know all to well the pain of its runtime.\r\n\r\n1. Unlike the C++ runtime, yes there is one, the VB runtime was not part of the OS. You had to distribute it yourself, greatly increasing your deployment size.\r\n\r\n2. Unlike .NET, there was no seperate installer for the VB runtime. Again, you had to distribute it yourself in your own installer.\r\n\r\n3. Most people were on dial-up. A VB exe, which is normally only a few hundred KB, suddenly was a couple of MB.\r\n\r\n4. You couldn't fit it on a floppy disk either. That means either burining CDs, not exactly cheap back then, or multiple-disks.\r\n\r\nThe VB runtime itself wasn't bad. Microsoft just didn't have a good deployment story for it. (Sounds a lot like Lisp, doesn't it?)\r\n", "id": "c02bd7m", "author": "grauenwolf", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02bd7m", "parent_id": "t1_c02b5gc", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425526, "id": "c02b5gc", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02b5gc", "parent_id": "t3_5z1wo", "body": " At the risk of sounding like an anti-MS troll, can someone explain this to me?\n\nWhen VB6 was around, people were always complaining about runtimes distribution and dependencies. Now that .NET is in the mainstream, everyone has them. Why is it okay now? All the stuff that's in the .NET runtimes was there before, only it was done with our own roll-your-own code libraries to encapsulate functionality to the Windows API, or stuff you'd download that other people had generously provided.\n\nI can't see a reason why I wouldn't use something like Python instead of this. It's not just about the cost savings (I jumped ship when .NET happened), but the fact that similar functionality seems to be readily available with many other free languages.\n\nWhat am I missing? ", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 15, "author": "millstone", "created_utc": "1193277208", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1193329695", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "grauenwolf", "created_utc": "1193353015", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193376705", "children": [{"controversiality": 0, "retrieved_on": 1427425329, "subreddit_id": "t5_2fwo", "archived": true, "score": 1, "link_id": "t3_5z1wo", "downs": 0, "name": "t1_c02bf71", "created_utc": "1193378004", "score_hidden": false, "id": "c02bf71", "author": "grauenwolf", "author_flair_text": null, "distinguished": null, "edited": false, "gilded": 0, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bf3r", "body": "Even modern versions of Java applications like Netbeans have enough little pain points to make them feel non-native.\r\n\r\nBut after playing with Anime Studio for about a week, I'm beginnning to wonder how important good GUIs really are. The thing is a royal pain because it doesn't even support Alt-F to open the file menu, but it does animation so well I find myself not caring enough to replace it.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425330, "body": "I agree partially.  Yes, it's probably a good idea to hire a GUI expert who can probably shell out a native UI for not too much money.\n\nOTOH, people report good things about WXwidgets, and my experiences with Swing aren't that bad either.  (And whatever people say about it not behaving or looking even remotely natively - well, they probably use old Java versions.  I think it looks nice on both Windows and Gtk.)", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bf3r", "parent_id": "t1_c02bd6j", "id": "c02bf3r", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c02bd6j", "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425355, "score_hidden": false, "id": "c02bd6j", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02ba04", "body": "I think he was being sarcastic. If not, there are tools to ensure you are Mono-compatible.\r\n\r\nCross-platform GUIs suck. You are better off using something like a MVC pattern to create native-looking GUI shells for each platform.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ba04", "ups": 0, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z1wo", "retrieved_on": 1427425396, "score_hidden": false, "body": "You mean the .NET whose open source implementation isn't nearly there where the MS implementation is (C# language level, but I guess also at the VM level)?\n\nThe platform that doesn't have a cross-platform GUI library, so you have to pick Windows Forms or Gtk#, and probably something else on the Mac (is there Cocoa#?)?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02b5z3", "id": "c02ba04", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 15, "controversiality": 0, "archived": true, "link_id": "t3_5z1wo", "retrieved_on": 1427425519, "id": "c02b5z3", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02b5z3", "parent_id": "t3_5z1wo", "body": "The portability of .NET with the syntax of OCaml, together at last!", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425515, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02b6a3", "gilded": 0, "link_id": "t3_5z1wo", "downs": 0, "score": -8, "score_hidden": false, "id": "c02b6a3", "author": "[deleted]", "created_utc": "1193280708", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -8, "parent_id": "t3_5z1wo", "body": "[deleted]", "author_flair_css_class": null}