{"controversiality": 0, "retrieved_on": 1427426182, "subreddit_id": "t5_2fwo", "archived": true, "ups": 6, "gilded": 0, "link_id": "t3_5yj64", "downs": 0, "score": 6, "body": "The Digital Mars C++ compiler also supports precompiled headers. It's also the fastest C++ compiler. -Walter Bright, Digital Mars", "author": "WalterBright", "created_utc": "1192654511", "distinguished": null, "edited": false, "id": "c029qv4", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029qv4", "parent_id": "t3_5yj64", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029r36", "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426179, "score": 1, "id": "c029r36", "author": "[deleted]", "created_utc": "1192656673", "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5yj64", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426179, "subreddit_id": "t5_2fwo", "created_utc": "1192656748", "ups": 3, "gilded": 0, "link_id": "t3_5yj64", "downs": 0, "score": 3, "body": "if you are into large scale c++ software (giga lines of code), check out \" large scale c++ design\" by john-lakos. pretty nice.\n", "author": "daddyc00l", "archived": true, "distinguished": null, "edited": false, "id": "c029r3f", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029r3f", "parent_id": "t3_5yj64", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "CaveMike", "created_utc": "1192660367", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192689517", "ups": 3, "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426145, "score": 3, "body": "[deleted]", "id": "c029tob", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029tob", "parent_id": "t1_c029rhg", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192693694", "children": [{"controversiality": 0, "retrieved_on": 1427426138, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029u9p", "gilded": 0, "link_id": "t3_5yj64", "downs": 0, "score": 2, "score_hidden": false, "id": "c029u9p", "author": "TrueTom", "created_utc": "1192704058", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t1_c029tus", "body": "Most compilers have an option to read the command line from file because of that.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yj64", "retrieved_on": 1427426143, "body": ";-)\n\nErm... Isn't there a limit on the command size in the shell and/or the compiler? Will it work for, wait... some 300-ish sources?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029tus", "parent_id": "t1_c029rhg", "id": "c029tus", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029rhg", "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yj64", "retrieved_on": 1427426174, "score_hidden": false, "body": "There's another case similar to the 'Single Compilation Unit' case: Specify all the .cpp files on a single compiler command-line.  This eliminates the overhead of loading the compiler and targets into memory without the drawbacks of combining the .cpp files into a single .cpp file.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yj64", "id": "c029rhg", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "deong", "created_utc": "1192661871", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426143, "score": 1, "body": "&gt;It was (and is) absolutely hideous, but that's what I like about C++.\n\nErm... I am not sure how to read this... ;-)", "author": "Gotebe", "created_utc": "1192693847", "distinguished": null, "edited": false, "id": "c029tv0", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029tv0", "parent_id": "t1_c029rni", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c029rni", "controversiality": 0, "archived": true, "link_id": "t3_5yj64", "retrieved_on": 1427426172, "score_hidden": false, "id": "c029rni", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yj64", "body": "It's worth noting that heavy use of templates pretty much devolves into the single compilation unit as well.\n\nIn one of my more memorable abuses against the template instantiation mechanism, I wrote a system in which nearly everything depended on a template class that in turn depended on another template class.\n\nSomething like\n\n    template &lt;typename T&gt;\n    class Internal {...};\n\n    template &lt;typename T&gt;\n    class External\n    {\n    private:\n        vector&lt;Internal&lt;T&gt;*&gt; xxx;\n    };\n\nwhere there are currently multiple instantiations of each template class (something like three of one and five of the other).  Thus, there were lots of other classes like\n\n    template &lt;template &lt;typename&gt; class ExtType, typename IntType&gt;\n    class Container\n    {\n    private:\n        deque&lt;ExtType&lt;IntType&gt; &gt; stuff;\n    };\n\neach of which gets instantiated and compiled for each combination of ExtType and IntType.\nWith about 70 classes that depend on this same pair of template parameter and template template parameter, touching almost any file triggered a full rebuild.  It currently takes about three minutes for a compile, and g++ consumes about 400MB during compilation.\n\nIt was (and is) absolutely hideous, but that's what I like about C++.  Any other language would have prevented me from doing something like this.  While it does suck horribly (and I'm working on cleaning it up a bit), it let me have the efficiency of primitive types where I needed them and prevented about 5X duplication of code, or at least shifted the responsibility for maintaining the duplicates to the compiler, which is the next best thing.", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "icefox", "created_utc": "1192662586", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "bdash", "created_utc": "1192666051", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "bluGill", "created_utc": "1192680514", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192693225", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c029ux8", "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426129, "score": 1, "score_hidden": false, "id": "c029ux8", "author": "bluGill", "created_utc": "1192714943", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029tu2", "body": "&gt;You can install things on your company's CEO computer\r\n\r\nNot this job.   But there are enough people here that IF our stupid programs were VS 6.0 specific (with plugins that we don't have the source to and those who do don't want to port it) I could get a nice speed up from the other developer's machines.   One of my ideas if I ever get moved to the next project...\r\n\r\nIn a smaller company IT and developer are generally the same person, and there you can do things to the CEO's computer.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029tu2", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yj64", "retrieved_on": 1427426143, "score_hidden": false, "id": "c029tu2", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029t2e", "body": " ;-)\n\nYou can install things on your company's CEO computer!? Wow, kudos!\n\nNo, wait! Are **you** the CEO? Even better, are you **doing** her (him?) ?\n\nKudos, anyway! ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029t2e", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yj64", "retrieved_on": 1427426153, "body": "IF you are a one person company perhaps.   Otherwise you have the CEO's computer, the computers of sales, tech support, and your other developers (who often are not compiling at the same time that you are).\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029s1c", "id": "c029t2e", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029tyu", "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426142, "score": 1, "score_hidden": false, "body": "Not even a second spare machine from IT?  Perhaps one of the computers that are being fazed out, or a test machine or if anything else it should be easy to order a $150 headless box (or pick up a dozen off cl) that you can make into a second box to boost your productivity.", "author": "icefox", "created_utc": "1192696631", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c029s1c", "id": "c029tyu", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5yj64", "retrieved_on": 1427426168, "id": "c029s1c", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029s1c", "parent_id": "t1_c029rq9", "body": "Not every developer has a stack of idle machines laying around to use as a build farm.", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426145, "score": 3, "body": "[He knows about Incredibuild](http://www.gamesfromwithin.com/articles/0502/000069.html)\n\nYou need to remember that at the base case it's still important to isolate quick build times, because if an developer is on site or away from build servers/environments and needs to build packages a system needs to be in place to do those builds quickly.", "author": "nglynn", "created_utc": "1192690669", "distinguished": null, "edited": false, "id": "c029tqb", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029tqb", "parent_id": "t1_c029rq9", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029rq9", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5yj64", "retrieved_on": 1427426171, "body": "How in the world does he not know about distcc, icecream,  teambuilder or incredabuild?  I can't imagine building without a buildfarm these days.  Heck just get a dual core machine and cut your build time in almost half.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yj64", "id": "c029rq9", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "xuhu", "created_utc": "1192668137", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c029tog", "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426145, "score": 3, "id": "c029tog", "author": "[deleted]", "created_utc": "1192689571", "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c029s7l", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426145, "subreddit_id": "t5_2fwo", "created_utc": "1192690796", "ups": 3, "gilded": 0, "link_id": "t3_5yj64", "downs": 0, "score": 3, "id": "c029tqk", "author": "nglynn", "archived": true, "distinguished": null, "edited": false, "body": "The problem with it is it sucks for quick builds, it's a great approach for nightly builds or building release versions but for developers making  incremental changes it can impose a big overhead.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029tqk", "parent_id": "t1_c029s7l", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c029s7l", "controversiality": 0, "archived": true, "link_id": "t3_5yj64", "retrieved_on": 1427426164, "score_hidden": false, "id": "c029s7l", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yj64", "body": "  Halfway through the article, I was ready to conclude that the author came up with two optimizations that weren't worth it and one that was (precompiled headers) ... such a great article indeed.  \nBut the last one -- a file that #include's all the .cpp files, sort of a poor man's-precompiled-headers -- would be kind of nice to have for a lot of projects. Especially since it results in smaller binaries due to ... whatever (cross-file optimizations probably).   ", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Gotebe", "created_utc": "1192695910", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yj64", "retrieved_on": 1427426120, "score": 1, "created_utc": "1192720917", "body": "&gt; how to effectively reorganize existing code\n&gt; bases for gains in compilation speed\n\nThe Lakos book he mentions goes into that a bit.  Definitely worth a read if you work on large c++ codebases.", "author": "pl0nk", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c029vmu", "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c029txt", "name": "t1_c029vmu", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c029txt", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yj64", "retrieved_on": 1427426142, "score_hidden": false, "id": "c029txt", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yj64", "body": "I was rather hoping to see something about how to effectively reorganize existing code bases for gains in compilation speed, or what to do in that respect to go faster with new designs.\n\nPre-compiled headers and one neat trick? I'm underwhelmed.", "author_flair_css_class": null}