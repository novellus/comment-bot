{"controversiality": 0, "retrieved_on": 1427426014, "subreddit_id": "t5_2fwo", "created_utc": "1192814605", "ups": 13, "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 13, "id": "c02a3tw", "author": "jkkramer", "archived": true, "distinguished": null, "edited": false, "body": "Here's the original proposal this guy wrote for doing this sort of thing:\nhttp://www.puffinry.freeserve.co.uk/regex-extension.html\n\nI believe the feature is now implemented in PCRE.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a3tw", "parent_id": "t3_5yoky", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 14, "author": "jsolson", "created_utc": "1192821933", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "rrenaud", "created_utc": "1192831040", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192835992", "ups": 2, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425983, "score": 2, "body": "&gt; regular expression matching is NP-hard\n\nIt certainly is O(n) in the length of the text; that is, firmly in P. What is NP-complete is matching in the presence of repeated captured subgroups; this is a special case of CDG.\n\nThe matching expression in the article follows a FIFO discipline when matching a named captured; hence, it is something that could be matched by a push-down automaton and thus context-free.", "author": "notfancy", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a67i", "parent_id": "t1_c02a5sm", "score_hidden": false, "id": "c02a67i"}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 11, "author": "Xiphorian", "created_utc": "1192837711", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "rrenaud", "created_utc": "1192859411", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 10, "author": "Xiphorian", "created_utc": "1192859936", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192869925", "ups": 3, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425954, "score": 3, "body": "Spreading the kind of misconception as the author does is indeed a very bad practise. She's making it sound like there is some kind of conflict between Regular Expressions (RE's) in theory and practise. When there isn't and can never be.", "id": "c02a8f1", "author": "theytookmystapler", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a8f1", "parent_id": "t1_c02a7xc", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192874020", "ups": 1, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425952, "score": 1, "id": "c02a8kc", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "vitriol. I learned a word today.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a8kc", "parent_id": "t1_c02a7xc", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192886240", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "theytookmystapler", "created_utc": "1192898009", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "[deleted]", "created_utc": "1192898592", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "theytookmystapler", "created_utc": "1192900215", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "[deleted]", "created_utc": "1192901745", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192907024", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02aadc", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425929, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "created_utc": "1192907672", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02aac8", "id": "c02aadc", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aac8", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yoky", "retrieved_on": 1427425929, "body": "[deleted]", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aa16", "id": "c02aac8", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "Xiphorian", "created_utc": "1192907568", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -1, "author": "[deleted]", "created_utc": "1192907930", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "Xiphorian", "created_utc": "1192909355", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "[deleted]", "created_utc": "1192909873", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Xiphorian", "created_utc": "1192910561", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192910925", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Xiphorian", "created_utc": "1192911232", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192911407", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02aaln", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425926, "score": 1, "score_hidden": false, "id": "c02aaln", "author": "[deleted]", "created_utc": "1192911695", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02aakt", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02aakt", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425926, "score_hidden": false, "id": "c02aakt", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aakh", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aakh", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yoky", "retrieved_on": 1427425926, "body": "I'm sorry, but that's a complete non sequitur.\n\nBecause the Internet packets composing this conversation flow through languages that have regular expression engines, that somehow proves your point? \n\nYou're getting crazier as this thread gets longer.\n\nThere are probably 5 or 10 different languages whose code has routed these packets (C, C++, Python, others) and each language has a regular expression engine.  But how that connects to this conversation... only makes sense in your mind :-(", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02aajy", "id": "c02aakh", "author_flair_css_class": null}], "subreddit": "programming", "ups": 0, "name": "t1_c02aajy", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425927, "score_hidden": false, "id": "c02aajy", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02aaj7", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02aaj7", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425927, "score_hidden": false, "body": " &gt; Since we're talking about RE:s, I'm sure there are lots of people out there that know why it's somehow relevant. (Hint: I wrote the RE engine you're using to flame me.)\n\nPython is *not* a regular expression engine.  Python uses a proper [parser](http://en.wikipedia.org/wiki/Parser).\n\nFrom the [Python Reference Manual](http://docs.python.org/ref/lexical.html):\n\n&gt; A Python program is read by a parser. Input to the parser is a stream of tokens, generated by the lexical analyzer. This chapter describes how the lexical analyzer breaks a file into tokens.\n\nAs I've said before, and I guess I will have to say again, there is a big difference between matching a regular language and matching a context-free language.  This difference is both theoretical and practical. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aahn", "id": "c02aaj7", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02aajs", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425927, "score": 1, "score_hidden": false, "id": "c02aajs", "author": "Xiphorian", "created_utc": "1192910874", "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02aahn", "body": "  &gt; (but obviously lots of sockpuppets ;-)\n\nThe hell you talking about?  Sockpuppets don't even **work** on Reddit.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -2, "name": "t1_c02aahn", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425927, "score_hidden": false, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aags", "id": "c02aahn", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425927, "subreddit_id": "t5_2fwo", "created_utc": "1192909873", "ups": 1, "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "id": "c02aaho", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02aaho", "parent_id": "t1_c02aags", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02aags", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yoky", "retrieved_on": 1427425928, "body": "&gt; It's indeed rather cute that you're using an application written in Python to tell me that I don't know anything about regular expressions,\n\nOnly in your mind is this somehow relevant to the conversation.\n\n&gt; and are not qualified to get a job.\n\nWhere did I say this?  I didn't.  You need better reading comprehension.  (Not even in any version of my posts.  I merely said that I think it's funny people without CS educations lament about problems finding jobs when they lack important knowledge and don't recognize its value)\n\n&gt; (and for the bystanders, this guy has been deleting and changing his comment over and over again, so my reply probably makes no sense at all when you see this ;-)\n\nThere is an edit button for a reason.  I have a tendency to write more than I need to to make a point.  Especially on forums like Reddit, I find it is important to reduce the number of paragraphs as much as possible, because people mostly don't read long posts.\n\nI'll point out that you don't either, as you haven't actually addressed any points I've made above.\n\nSo OK, you actually don't know computer science theory.  That's okay.  There are a lot of things you can still do professionally, but you're really limiting yourself by not knowing these things.  You'll never be able to get a job at top-tier companies like Amazon.com, Google, Microsoft -- that sort -- without knowing algorithms and theory pretty well.\n\nBeing the nice guy I am, I have put together a reading list for you:\n\n[Introduction to Algorithms](http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262032937/ref=pd_bbs_2/102-8980997-2242508?ie=UTF8&amp;s=books&amp;qid=1192909290&amp;sr=8-2)\n\n[Introduction to the Theory of Computation](http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/0534950973/ref=pd_bbs_sr_1/102-8980997-2242508?ie=UTF8&amp;s=books&amp;qid=1192909295&amp;sr=8-1)\n\n[Introduction to Automata Theory, Languages, and Computation](http://www.amazon.com/Introduction-Automata-Theory-Languages-Computation/dp/0321455363/ref=sr_1_5/102-8980997-2242508?ie=UTF8&amp;s=books&amp;qid=1192909445&amp;sr=1-5) \n\nThe last two are the most pertinent to this conversation.  (You'll note the original author even mentioned the word \"automata\" in her post!) ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aae0", "id": "c02aags", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02aae0", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -1, "link_id": "t3_5yoky", "retrieved_on": 1427425929, "id": "c02aae0", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02aad5", "body": "[deleted]", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1192912802", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "Xiphorian", "created_utc": "1192915737", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "[deleted]", "created_utc": "1192916495", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "Xiphorian", "created_utc": "1192918262", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192918922", "name": "t1_c02ab5q", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425919, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02ab3t", "id": "c02ab5q", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02ab6x", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425918, "score": 2, "body": " Why are there so many deleted comments in this thread??\n\nSome comments show up in my \"Reply\" inbox but show up as deleted in the thread.  What's going on?", "id": "c02ab6x", "author": "Xiphorian", "created_utc": "1192919281", "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02ab3t", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 5, "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425919, "id": "c02ab3t", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02ab3t", "parent_id": "t1_c02aayc", "body": "I'm sorry to say, but the presence of this paragraph negates the clarity that any other piece may have added:\n\n&gt; If you have ever studied automata theory, perhaps you remember that\nnested brackets are the classic example of something that *can't* be\nmatched by a regular expression. So you might be surprised (or\ndisbelieving) to see a regular expression that does exactly that.\n\nThis paragraph presents his changes as if they represent some kind of contradiction.\n \nSorry, but no such regular expression will ever exist, nor could such a one exist.\n\nLook at the very beginning of the posting:\n\n&gt; The OP expressed curiosity as to how it\nworks, and since he probably isn't the only one who found it\nconfusing, I thought I'd post an explanation to the list.\n\nIt wouldn't be confusing if you presented it as *what it is*, which is, a context-free matching system.  What's confusing about that?  **Nothing**.  The confusion stems from presentation as a Regular matching system, which it isn't.\n\n&gt; Robin and I have been involved in the development of widely used RE engines. \n\nPlease pay attention.  I am not addressing any other work anyone has done.  I am addressing the *post* that is this Reddit article.  Robin may have done amazing work in many places.  Is that relevant to this post?  Absolutely not.\n\nI'm not even judging the *idea itself*, but only the *presentation thereof*, which is confusing.  How is this hard to understand?\n\n&gt; What have you done?\n\nOh *please*.  Personal attacks?  Ideas stand or fall on their own merit.  It doesn't matter who said them.\n\nOr do you believe a smart person can never say something stupid?", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425919, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02ab5z", "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "score_hidden": false, "id": "c02ab5z", "author": "armchare-philosopher", "created_utc": "1192918986", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02aayc", "body": "i dont see him judging anything but ideas, troll.\n\nyou, on the otherhand...", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": -1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425921, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02aayc", "parent_id": "t1_c02aaw7", "id": "c02aayc", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "name": "t1_c02aaw7", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425923, "score_hidden": false, "body": "&gt; What woman, btw? Robin?\n\nApologies to Robin.  Robin is (often but not always) a woman's name in America.  I'm sure he will forgive me.\n\n&gt; As far as I know, he's at the Computer Science department at the University of Manchester, doing research in semantics of computation and other stuff. I'm pretty sure he knows what he's talking about, and in this case, knew what audience he was writing for. And he probably has an education, too.\n\nFrom his profile page, he is a mathematician.  Whether he has studied Automata and Formal Languages, I don't know.  I see him claim to be interested in them.  He does not have divine knowledge about these things; he would not know the precise definition of \"regular language\" or \"context-free language\" or the differences between them unless he has actually studied them.  Being knowledgeable about one part of CS does not give knowledge of others.  He seems to have focused on category theory, and linear logic, and game theory more than automata theory.\n\nRegular expressions cannot be recursive, by definition.\n\nHe writes to imply that he has made some kind of advancement, such that parenthesis matching can now be accomplished with a Regular language.  That is not what he has done.  He has just made a Context-Free matching language.\n\nWhether or not he understands properly what he is doing (I do not judge that), he is being sloppy in his presentation of it.  \n\nHe writes in a way that would confuse a reader who doesn't already know Automata Theory.  This reader would assume that Regular languages can (now) match balanced parentheses; when in reality the term is simply being misused.\n\nJust because other people have done it doesn't make it right.  Just because lots of professionals are ignorant of the theory and call their software \"regular expressions\" when it's actually \"context-free expressions\", still doesn't make it right. \n\nComputer Science (like most fields that involve mathematics) is sensitive to precise definitions of concepts.\n\nThe whole point is that while *well-educated* programmers understand the 'common' and 'correct' meanings of \"regular expression (engine)\", anyone else, such as novices, will not.  They will have elaborate, inaccurate ideas of what these things are.  They will not even know they're missing the bigger picture!   \n\nDon't get me wrong, he looks like a very smart guy.  But consider this:  I know computer science theory fairly well.  Does this suddenly give me license to write on Category Theory, and misuse its concepts and terms with impunity?  Is it wrong for a Category Theory-focused mathematician to criticize my lackluster treatment of the subject?  No. \n\nIt would be like me saying \"Wow, I just made this new program that lets my [Monoid](http://en.wikipedia.org/wiki/Monoid) be involved in formulae it couldn't before!\"  Then the mathematician would come in and say, \"No, doofus, you just turned your primitive Monoid into a full [Monad](http://en.wikipedia.org/wiki/Monad)\".    ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aaof", "id": "c02aaw7", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02aaof", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425925, "score_hidden": false, "body": "[deleted]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02aad5", "id": "c02aaof", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 6, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425929, "body": "&gt; I guess my point is that \"in the wild\", the concept of a \"regular expression\" involves lots of stuff, including:\n\nMaybe among people who have never studied computer science properly.  We're talking about *extremely well-established theory* here.\n\nIf your views of \"what computer science is\" solely pay attentional to the professional but not scientific/theoretical aspects, then you are missing an enormous chunk of necessary knowledge.\n\nThis is why you constantly hear people without CS degrees whining about not being able to get jobs.  *\"But I have years of experience!\"*, they say.  It's hard for those people to get jobs because of the huge gaps in their knowledge that **they don't even recognize is important**.  Look at you, what you just said right now:\n\n&gt; You know, in my experience, the \"I studied this in college and you're all wrong\" approach (or the more common \"my professor told me\" variant) is a sign of ignorance and lack of real-world experience\n\nI am sorry, but it is you who is betraying his ignorance.  You're *dismissing* the Theory of Computation as being unimportant in \"the real world\".  The distinctions made in theory are not trivial, unimportant ones.  The difference between a regular language, a context-free language, a context-sensitive language, and a recursively enumerative language are **enormous** and effectively form the foundation of the idea of Computation.\n\nThe author who posted this original article said something like \"I bet you think a regular expression can't match parentheses, huh?  But it can!  *Mind trick!*\" just looks like a complete and total moron to anyone with a CS education.  \n\nShe cannot realize that her advancement is insignificant, because a context-free language matcher is nothing special.  She thinks, because she's calling it a \"regular expression engine\", that she has done something special.  That's just sad.\n\nBefore you go into digressions again, I will point out *one more time* in this message that it's not just about *naming* the software.  It's fine to not rename your program when it changes from Regular to Context-Free.  But it *is* important to **correctly** reason about it.  That is what the author failed to do.  If a SQL database author made some achievement in his software and said, *\"you all said the Relational Model couldn't do this, but I did it!  Look at me, I am amazing!  I bet you thought you knew theory but you're wrong!\"* he would be making the same error and looking just as stupid.  That's what this woman did here:\n\n&gt; If you have ever studied automata theory, perhaps you remember that\nnested brackets are the classic example of something that *can't* be\nmatched by a regular expression. So you might be surprised (or\ndisbelieving) to see a regular expression that does exactly that.\n\nI just have to say to myself \"oohhhh boy\" every time I read that quote again.\n\nI am not arguing about people who know the difference in naming, and ignore it, or are lazy.  I am arguing against people who, like this woman, actually don't know the difference!\n\nThis is the danger of not properly understanding the theory that underlies your field.\n\nOn the bright side, reading articles like this makes me want to start a Wiki or other website for independent study by computer programmers.  A good, solid resource for learning the theory that so many programmers seem to have ignored.  If anyone is interested in helping me with this, send me a message.   ", "archived": true, "distinguished": null, "edited": true, "name": "t1_c02aad5", "parent_id": "t1_c02aa16", "id": "c02aad5", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -2, "name": "t1_c02aa16", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425933, "score_hidden": false, "id": "c02aa16", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a9xj", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a9xj", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5yoky", "retrieved_on": 1427425935, "body": "Unnecessary re-defenition of established terms can't be good for any one. Perhaps I'll have to talk to someone from the \"real world\" like yourself some day, and when we discuss RE's you'll be thinking about something else. ;-)", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a9tp", "id": "c02a9xj", "author_flair_css_class": null}], "subreddit": "programming", "ups": -1, "name": "t1_c02a9tp", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425937, "score_hidden": false, "id": "c02a9tp", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a9sa", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "name": "t1_c02a9sa", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425938, "score_hidden": false, "body": " You can re-define any terms you like and call them \"real world\" interpretations, it doesn't make it right. No-one gains from people thinking they know what something is, when they really don't.\n\nAs long as we all know that the sort of \"regular expression\" covered in this article isn't really a regular expression, the damage may at least be controlled.\n\n ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a91s", "id": "c02a9sa", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a91s", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425946, "id": "c02a91s", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a7xc", "body": "[deleted]", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192962819", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425886, "score": 1, "score_hidden": false, "id": "c02adp5", "author": "jsolson", "archived": true, "distinguished": null, "edited": false, "body": "Your previous deleted post did not get deleted from my inbox however. If you'll reread my comment you'll notice that I never in fact say the grammar I present is regular. I clearly state that the regexp engine in question is behaving like a pushdown automaton. I also present a grammar that matches the set of languages matched by the decidedly non-regular expression in the example (that is, balanced sets of parentheses with at least one pair).\n\nThe fact that it is not in fact strict a regular expression matching engine is neither here nor there as that's what the author has decided to call it. On one hand I agree. Calling something like that a regular expression engine confuses people who don't have some basis in automata theory. On the other hand, the primary thing typical people will use it for is matching regular languages. I would also be willing to bet that it's dog slow trying to match any vaguely complicated CFG, and thus can't really be consider a general purpose CFG matcher.\n\nI was simply saying that if you're going to write an engine which behaves like a PDA (even if only in a limited fashion), why not allow it to accept inputs in a format more amenable to expressing the computational power of a PDA.\n\nPerhaps next time you'll realize that if someone knows what a pushdown automaton is they probably also know the basics from Automata Theory 101 (or, in my case, Languages and Computation CS3240), and that they're more than likely at least vaguely familiar with the contents of the Sipser book.\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02adp5", "parent_id": "t1_c02a7xc", "ups": 1, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a7xc", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 10, "link_id": "t3_5yoky", "retrieved_on": 1427425961, "body": "&gt; Did you click the link I posted?\n\nYes.  I did click the link, and I was angered by the author who seems to look with disdain on computer scientists, and people who bother to properly define \"regular language\" or \"regular expression\".  I deleted a previous post I made, because I realized it was too filled with vitriol.\n\nBut I'll say it again here: The author is a moron.  She doesn't seem to know much about the proper definition of \"regular language\", nor care.  That kind of disdain for well-understood theory astonishes and angers me.  I think a software developer should try his or her hardest to understand the theory that underlies their profession.  This one writes condescending phrases like: \n\n&gt;&gt; So you might be surprised (or\ndisbelieving) to see a regular expression that does exactly that. The\nexplanation, of course, is that theory and practice are closer in\ntheory than in practice: Onigurama regular expressions, in common with\nmany other flavours, are more powerful than the things that computer\nscientists call \"regular expressions\"\n\nUhhh...... **because they are not regular expression*!!  You have simply written a parser for a context-free language.\n\n&gt; What about Perl regular expressions? Where are they on the Chomsky hierarchy?\n\nPerl 'expressions' are not regular.  They fall firmly within Context-Sensitive languages, which is one step **above** even context-free languages.  This is because they have backreferencing, which allows them to match the same full word twice.  Context-free languages can match something like \"abccba\" ( a word and its reverse) but cannot match \"abcabc\", a word repeated twice, in general.\n\nA proper regular grammar must be in this form:\n\n    A -&gt; BC\n    A -&gt; a\n\n(Where `A`, `B`, `C`, are productions and `a` is a terminal).   That's the actual, theoretical definition of a regular grammar.  If you take an example like parenthesis matching, you can never fit into a grammar of that form.  It is actually a good exercise to take common grammars of various kinds, like parenthesis matching in CFG:\n   Expr -&gt; ( B ) \nTry to put that in proper Regular Grammar form (each production's body is 2 other productions, or terminal).  It's a good exercise.\n\nTo put in expression (rather than grammar) form, you get grouping and alternation (this|that) and Klein-star.  The rest is syntactical sugar.\n\nThe last course I took before leaving college was the theory of computation, covering this stuff.  I can show you some simple proofs and the basic theory (offline) if you are interested!  I would caution you, though... because once you're learn it, you're condemned to see software developers the rest of your life misuse terms in the stupidest ways! \n\nWould it be useful if I wrote a Wiki page or blog that introduced this kind of Theory of Computation material, and walked through simple proofs?  It's actually quite a complete, thoughtful subject.  ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a7vv", "id": "c02a7xc", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "name": "t1_c02a7vv", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425961, "score_hidden": false, "body": "What about Perl regular expressions?  Where are they on the Chomsky hierarchy?  Did you click the link I posted?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a6bz", "id": "c02a7vv", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 11, "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425981, "id": "c02a6bz", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02a6bz", "parent_id": "t1_c02a5sm", "body": "Errr, you are confusing a lot of things.  Let me clear some things up:\n\nFirst of all, regular expressions, regular grammars, and discrete finite automatons are all equivalent representations for the same matching concept.\n\n&gt; If regular expression matching is NP-hard\n\nNot only is regular expression matching O(N), it can never actually be more than exactly N steps.  NP-hard?  Are you kidding?\n\n&gt; CFG matching is polynomial time\n\n*What?*  Matching context-free grammars is harder than regular expressions.\n\n&gt; converting a regular expression to a CFG must also be NP-hard\n\nNo, no, no.  A regular expression (in grammar form) is *already* a valid context-free grammar.  In terms of expressiveness, RE &lt; CFG.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a5sm", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425988, "body": " This actually brings up an interesting theoretical insight for me.  Thanks!\n\nIf (edit: perl compatible) regular expression matching is NP-hard, and CFG matching is polynomial time, then converting a regular expression to a CFG must also be NP-hard.  Otherwise we could do regular expression matching via conversion to CFG and CFG matching.\n\nhttp://perl.plover.com/NPC/ ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a4oe", "id": "c02a5sm", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02a66w", "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425983, "score": 2, "id": "c02a66w", "author": "username223", "created_utc": "1192835778", "distinguished": null, "edited": true, "body": "Well, if you've got Perl 5.9:\n\n\tm{(?&amp;S)\n\t  (?(DEFINE)\n\t    (?&lt;S&gt;\\((?&amp;B)\\))\n\t    (?&lt;B&gt; | \\((?&amp;B)\\) | (?&amp;B)(?&amp;B)))}x", "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02a4oe", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425982, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02a695", "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "score_hidden": false, "id": "c02a695", "author": "[deleted]", "created_utc": "1192836607", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02a4oe", "body": "[deleted]", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "schala09", "created_utc": "1192842336", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1192857625", "children": [{"controversiality": 0, "retrieved_on": 1427425886, "subreddit_id": "t5_2fwo", "created_utc": "1192961869", "ups": 1, "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "body": "To be fair, most parser generators generate LALR(1) parsers which can recognize a strict subset of the CFLs recognized by LR(1) parsers which are capable of recognizing the full set of CFLs (iirc). Just because it only functions on a subset of grammars doesn't make it not useful.\n\nHell, antlr only generates LL(k) grammars, but that's fine if you're using it for practical purposes and have a finite maximum term length on any given expression.", "author": "jsolson", "archived": true, "distinguished": null, "edited": false, "id": "c02adnw", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02adnw", "parent_id": "t1_c02a7sb", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a7sb", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425962, "score_hidden": false, "id": "c02a7sb", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02a6o3", "body": " No, it handles PEGs. Besides this you need to disambiguate PEGs manually to make them work. That's not much unlike the preparation it needs to fit a grammar into an LL(1) parser scheme - with the exception that PEGs are more capable dealing with lookaheads.\n\n\n\n\n\n ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "name": "t1_c02a6o3", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425977, "score_hidden": false, "id": "c02a6o3", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a4oe", "body": "Check out [packrat parsing](http://en.wikipedia.org/wiki/Parsing_expression_grammar#Implementing_parsers_from_parsing_expression_grammars). It technically doesn't handle all CFGs, but the algorithm is O(n)...", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "psykotic", "created_utc": "1192876459", "children": [{"controversiality": 0, "retrieved_on": 1427425921, "subreddit_id": "t5_2fwo", "created_utc": "1192916899", "ups": 1, "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "body": "Set of states CFG parsing looks like it should be linear for regular languages or non-ambiguous grammars, and O(n^3) worst case. That's not bad :)", "author": "pkhuong", "archived": true, "distinguished": null, "edited": false, "id": "c02aaz9", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02aaz9", "parent_id": "t1_c02a8mz", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425898, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02acsl", "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 1, "score_hidden": false, "id": "c02acsl", "author": "[deleted]", "created_utc": "1192943401", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02a8mz", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a8mz", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 5, "link_id": "t3_5yoky", "retrieved_on": 1427425952, "id": "c02a8mz", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a4oe", "body": " &gt; Of course, the best generic CFG matching algorithm I know of is O(n^3)\n\nThe good ones, such as GLR parsing, are O(n) on grammar fragments that fall in a nice class like LL(1) or LR(1). So they're perfectly practical, despite their theoretical worst-case behavior.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a4oe", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 14, "link_id": "t3_5yoky", "retrieved_on": 1427426003, "body": "Or, written more succinctly:\n\n    S -&gt; (B)\n    B -&gt; epsilon\n    B -&gt; (B)\n    B -&gt; BB\n\nGiven that these regexp engines are capable of behaving like PDAs, why don't they accept input in the form of actual CFGs written out as productions like above?\n\nOf course, the best generic CFG matching algorithm I know of is O(n^3), so perhaps that's why they try to make it hard to write expression that will require a lot of backtracking.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5yoky", "id": "c02a4oe", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 24, "author": "theytookmystapler", "created_utc": "1192831469", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "notfancy", "created_utc": "1192836009", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192870417", "ups": 2, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425954, "score": 2, "body": "Perhaps, but then you have no idea of how expressive your expression really can be. And in extension you have no idea of worst case execution time.", "author": "theytookmystapler", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a8fq", "parent_id": "t1_c02a67j", "score_hidden": false, "id": "c02a8fq"}], "subreddit": "programming", "ups": 1, "name": "t1_c02a67j", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425983, "score_hidden": false, "body": "Matching expression?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a5u0", "id": "c02a67j", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "raldi", "created_utc": "1192846294", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "bacila", "created_utc": "1192862312", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "theytookmystapler", "created_utc": "1192870191", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "bacila", "created_utc": "1192871456", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192894200", "ups": 2, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425940, "score": 2, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02a9ik", "parent_id": "t1_c02a8gt", "id": "c02a9ik", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02a8gt", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yoky", "retrieved_on": 1427425954, "score_hidden": false, "body": "conex sounds good. I feel that we are talking about context-free grammars together with attributes; we use the later to plug-in context-sensitive features. Perhaps, Knuth's attribute-grammars are quite close to what's going on with perl's \"regexes\". ", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a8fg", "id": "c02a8gt", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a8fg", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yoky", "retrieved_on": 1427425954, "id": "c02a8fg", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a82p", "body": " Personally I would like conex, contexps or something like that. :)\n\nAs a side-note the all-on-one-line syntax of jsolson's grammar below could look something like\n\nS:(\\\\(B\\\\)),B:()|(\\\\(B\\\\))|BB ", "author_flair_css_class": null}], "subreddit": "programming", "ups": 4, "name": "t1_c02a82p", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425959, "score_hidden": false, "id": "c02a82p", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6ya", "body": "hmm.. this is still misleading. What about \"nregex: nregex is not a regex\"?", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -2, "author": "sjf", "created_utc": "1192937622", "children": [{"controversiality": 0, "retrieved_on": 1427425901, "subreddit_id": "t5_2fwo", "created_utc": "1192939623", "ups": 2, "gilded": 0, "link_id": "t3_5yoky", "downs": 0, "score": 2, "id": "c02acjx", "author": "raldi", "archived": true, "distinguished": null, "edited": false, "body": "Gee, thanks, i never would have noticed that if you hadn't pointed it out.", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02acjx", "parent_id": "t1_c02acfk", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": -2, "name": "t1_c02acfk", "controversiality": 0, "archived": true, "link_id": "t3_5yoky", "retrieved_on": 1427425902, "score_hidden": false, "id": "c02acfk", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a6ya", "body": "Maybe because regex is just a contraction of REGular EXPression, hmm?", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02a6ya", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 5, "link_id": "t3_5yoky", "retrieved_on": 1427425973, "id": "c02a6ya", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02a5u0", "body": "That's one of the reasons Perl 6 won't call them regular expressions, but rather regexes.\n\n[Quoth Wikipedia:](http://en.wikipedia.org/wiki/Perl_6#Regular_expressions)\n\n&gt; Since Perl's pattern-matching constructs have exceeded the capabilities of formal regular expressions for some time, Perl 6 documentation will exclusively refer to them as regexes, distancing the term from the formal definition.\n", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192885667", "ups": 0, "gilded": 0, "link_id": "t3_5yoky", "retrieved_on": 1427425946, "score": 0, "body": "[deleted]", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02a90y", "parent_id": "t1_c02a5u0", "score_hidden": false, "id": "c02a90y"}], "subreddit": "programming", "name": "t1_c02a5u0", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 24, "link_id": "t3_5yoky", "retrieved_on": 1427425988, "id": "c02a5u0", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5yoky", "body": " Adding features to a regular expression engine, until it accepts non-regular languages is fine. But to keep calling it a regular expression is just making people confused. Call it what it is, context free languages. ", "author_flair_css_class": null}