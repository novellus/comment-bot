{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "mbrezu", "created_utc": "1192553476", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Bogtha", "created_utc": "1192554241", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "mbrezu", "created_utc": "1192554921", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "Bogtha", "created_utc": "1192656192", "children": [{"created_utc": "1192715008", "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5yfev", "retrieved_on": 1427426129, "score": 1, "controversiality": 0, "body": "Hi,\n\nthis looks like an excellent find. The bayesian filtering idea sounds great. I'll try it ASAP.\n\nThanks!", "author": "mbrezu", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c029uxk", "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c029r1k", "name": "t1_c029uxk", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029r1k", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5yfev", "retrieved_on": 1427426179, "body": "I found [the newsreader with a recommendation engine](http://caterpillar.masukomi.org/) I was thinking of, via [this excellent submission](http://programming.reddit.com/info/5yj83/comments).  I'm not sure if it's what you are looking for, but have a look and see.  It uses Bayesian filtering rather than popularity to determine how good an article is.\n", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029i9d", "id": "c029r1k", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5yfev", "retrieved_on": 1427426293, "id": "c029i9d", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029i9d", "parent_id": "t1_c029i6f", "body": "   Well, I'm not really interested in putting everything on a main page.\n\nJust show me my feeds in a manner similar to the rest of the readers, but sort posts by popularity in decreasing order.\n\n[edit: don't even sort, leave them in chronological order, just mark the popular ones by changing the background or something; constant reordering can be unpleasant]\n\nYep, the popularity of posts seems to require a RSS extension, but what about counting the number of times a given post was opened/read using the reader's interface? (and add those \"open\" points from different users behind scenes, for any given post)?\n   ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029i6f", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 1, "link_id": "t3_5yfev", "retrieved_on": 1427426294, "body": "I haven't heard of one, but it sounds similar to an idea I had a while back about a crossover between Reddit and [Planet](http://www.planetplanet.org/).  I subscribe to a couple of Planet aggregators, but they all seem to be high-traffic and full of a lot of personal stuff I don't want to read.\n\nIt would be nice to have a cross between Reddit and Planet where you submit feeds instead of articles, and every article in each feed shows up on the new page automatically.  The personal stuff would get  voted down and the relevant stuff would end up on the front page.  Feeds which rarely get articles onto the front page would be flagged for removal.  Bonus points for aggregating comments according to [RFC 4685](http://www.ietf.org/rfc/rfc4685.txt)\n\nThe real downside is that the target audience mainly use feed readers, so a voting extension for Atom would need to be devised and the clients would need to be updated for it to really take off.\n\nEdit: Now that I think of it, I do seem to recall hearing about a startup recently that had a recommendation engine of sorts for feeds.  I can't remember the name of it though, sorry.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029i3h", "id": "c029i6f", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c029i3h", "controversiality": 0, "archived": true, "link_id": "t3_5yfev", "retrieved_on": 1427426295, "score_hidden": false, "id": "c029i3h", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5yfev", "body": " I have a ton of rss blog subscriptions and never enough time to read what's interesting (or even select what's interesting in the first place).\n\nIs there any online rss aggregator that is capable of showing me the most popular entries in the blogs, so I can have a web2.0 criterion to order the posts for reading (popular ones first, for want of a better \"best ones\" approximation).\n\nSuch a tool would probably share subscriptions behind the scenes, and track the popularity of every post. Ways of tracking popularity: count number of times the post was read/opened, use some upvote/downvote mechanism a la reddit/digg.\n\nWhy this is in some ways better than reddit/digg: I only see stuff from blogs I subscribed to, so this takes care of the recommendations mess. Instead of filtering everything that's new on the web, just filter the bits of the web I'm actually interested in.\n\nAny such aggregator out there? Anyone building something like this?\n\nThanks!\n ", "author_flair_css_class": null}