{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "filesalot", "created_utc": "1193409700", "children": [{"controversiality": 0, "retrieved_on": 1427425294, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bhv6", "gilded": 0, "link_id": "t3_5z5pp", "downs": 0, "score": 4, "score_hidden": false, "body": "JS is powerful enough as it is, although I think the idea of a machine checkable spec (in Standard ML! Who says industry doesn't do FP?) is pretty awesome.", "author": "bitwize", "created_utc": "1193416243", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 4, "parent_id": "t1_c02bh2o", "id": "c02bhv6", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193497592", "ups": 1, "gilded": 0, "link_id": "t3_5z5pp", "retrieved_on": 1427425219, "score": 1, "body": "[deleted]", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "score_hidden": false, "name": "t1_c02bnnx", "parent_id": "t1_c02bh2o", "id": "c02bnnx", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bh2o", "ups": 4, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z5pp", "retrieved_on": 1427425306, "score_hidden": false, "body": " Yes, all this stuff is overkill for simple scripting, but given all the uses to which people are putting JS (web2.0, flash, svg, rhino on rails, etc), it's clear the designers have in mind to make JS competitve as the next big application programming language.\n\nThus the features target program organization, expressive power, reliability, and improved performance of compiled code.\n\nI make no claim as to whether they've succeeded in any of these goals. ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5z5pp", "id": "c02bh2o", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "TheManWithNoName", "created_utc": "1193411266", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 10, "author": "AndrewO", "created_utc": "1193420256", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "DRMacIver", "created_utc": "1193427273", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "AndrewO", "created_utc": "1193430434", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "riffraff", "created_utc": "1193438985", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193442946", "name": "t1_c02bl2w", "gilded": 0, "link_id": "t3_5z5pp", "retrieved_on": 1427425253, "score": 1, "score_hidden": false, "id": "c02bl2w", "author": "AndrewO", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bkp4", "body": "I confess that in my ignorance I didn't know the term, but yes, you're right.  In fact, the [Wikipedia article](http://en.wikipedia.org/wiki/Double_dispatch) gives this as an example:\n\n&gt; A typical example is in a game environment where the collision between a spaceship and an asteroid will be computed differently than the collision between a spaceship and a spacestation.\n\nSo, yes, you're doubly right (assuming you didn't just edit the article).\n\nI think my point stands though: different functionality based on different \"type\" is possible without a typesystem.  ", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c02bkp4", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z5pp", "retrieved_on": 1427425258, "score_hidden": false, "body": "this is OT but isn't the example in Io a normal double dispatch?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bjs8", "id": "c02bkp4", "author_flair_css_class": null}], "subreddit": "programming", "ups": 4, "name": "t1_c02bjs8", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z5pp", "retrieved_on": 1427425269, "score_hidden": false, "body": "  Noted.  However going through the [PDF](http://www.ecmascript.org/es4/spec/overview.pdf), I'm not convinced the trade off is worth it.  For instance, take the example at the bottom of p. 27.  \n\nYour normal Javascript coder is going to say \"What's all this ``generic intrinsic`` nonsense?\"  And, I think they have right to do so without anyone calling them unmotivated know-nothings that don't want to learn.  It's just so much extra baggage to add to a previously relatively lean frame.\n\nAs a counterexample, I'll turn to Ruby.  Operators are just methods on the number.  If someone's adding a new number class (which no one ever really does), they define a + method that deals with the intricacies.  I'd say that's plenty serviceable and doesn't require the addition of a type system.\n\nAnother example is [Io](http://www.iolanguage.com/), which I think is a good example of what the new ECMAScript should have been like.  See [here](http://www.iolanguage.com/blog/blog.cgi?do=item&amp;id=106) for a relevant post.\n\nSo I'm not saying that multimethod dispatch is bad.  I'm saying that it's not worth it in ECMAScript where simplicity and ease of use are the top goals.  It's not worth having to bolt on a fairly naive type-system (1995 called...) and redefine a whole language from prototypal to classical.  I know a lot of these things are optional, but what does that leave us with?  \n\nAn ugly hybrid language that's too big and complex and has too many conflicting ways of doing the same thing, that's what.  ", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02bjda", "id": "c02bjs8", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bjda", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5z5pp", "retrieved_on": 1427425275, "body": "Well, note that ES4 uses those classes and interfaces for far more than Java does - it has multiple dispatch! This makes its object system much closer to something like CLOS than to Java's. \n\n(I've only just discovered this, and I'm really excited about it :-) )", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02biex", "id": "c02bjda", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "dmpk2k", "created_utc": "1193443714", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193446353", "ups": 2, "gilded": 0, "link_id": "t3_5z5pp", "retrieved_on": 1427425249, "score": 2, "score_hidden": false, "id": "c02blck", "author": "AndrewO", "archived": true, "distinguished": null, "edited": true, "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02blck", "parent_id": "t1_c02bl4x", "body": "  I'm well aware, as I assume most people reading [this site](http://programming.reddit.com/info/t7v9/comments) are, of the multiple (often conflicting) definitions of strong vs. weak.  I figured that I'd rather not add any more qualifiers to an already lengthy comment.  \n\nI'm going with these, though:\n\n&gt; It is a dynamic, weakly typed, prototype-based language with first-class functions. [Wikipedia](http://en.wikipedia.org/wiki/Javascript)\n\n&gt; The JavaScript language resembles Java but does not have Java's static typing and strong type checking. [Mozilla](http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Guide:JavaScript_Overview#What_is_JavaScript.3F)\n\nI think you'd be hard pressed to find anyone who'd say that Javascript as it is now is strongly typed.   ", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5z5pp", "retrieved_on": 1427425252, "id": "c02bl4x", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bl4x", "parent_id": "t1_c02biex", "body": "Javascript is weakly typed?\n\nYou might need to elaborate a bit on what you mean.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c02biex", "controversiality": 0, "archived": true, "ups": 10, "link_id": "t3_5z5pp", "retrieved_on": 1427425287, "id": "c02biex", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02bh9q", "body": "  Except here ECMAScript seems to be evolving away from it's prototypal, semi-functional, dynamic and weak typed roots in Self* and going toward Java.\n\nInterfaces?  That doesn't sound like the ECMAScript I know that allows module-like mixin.  Compile-time directives?  Namespaces as actual language constructs?  Arcane and paranoid visibility controls?  I thought we were trying to get away from this?\n\nI've got an idea: let's make a language where everything is a object, including classes and namespaces.  Objects privately encapsulate their own state and method invocation/message passing is the primary means of computation.  No more, no less.  \n\nI think I might be onto something here... \n\n(BTW: My ire here is directed at ECMAScript 4, not at the parent.  It was just a convenient place to post.)\n\n*: and Smalltalk, and Lisp, and probably others. ", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bh9q", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 4, "link_id": "t3_5z5pp", "retrieved_on": 1427425302, "id": "c02bh9q", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5z5pp", "body": "All programming languages evolve towards each other.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "dmpk2k", "created_utc": "1193412106", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "riffraff", "created_utc": "1193470594", "children": [{"controversiality": 0, "retrieved_on": 1427425212, "subreddit_id": "t5_2fwo", "archived": true, "gilded": 0, "link_id": "t3_5z5pp", "downs": 0, "score": 1, "score_hidden": false, "body": "It's likewise been a while.\n\nThis is something I've observed though, which is why I interpret it this way. Over-ambition and over-engineering are ofter manifest in more features or more generality, but not always.", "author": "dmpk2k", "created_utc": "1193505915", "distinguished": null, "edited": false, "id": "c02bo86", "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bmow", "name": "t1_c02bo86", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bmow", "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z5pp", "retrieved_on": 1427425233, "score_hidden": false, "id": "c02bmow", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bhdj", "body": "I thought the SSE in \"the mythical man month\" was defined as the problem of using in the second system design all the bits that were not included in the first due to various constraints.\n\nI may be wrong though, it's been a long time since I read the book.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bhdj", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 6, "link_id": "t3_5z5pp", "retrieved_on": 1427425301, "id": "c02bhdj", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5z5pp", "body": " Unrelated, but I disagree on his interpretation of the second-system effect.\n\nRather, I think it is that after being successful with the first version you bite off more than you can chew for the second. This does not necessarily entail too many features or a larger piece of software.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193423247", "ups": 2, "gilded": 0, "link_id": "t3_5z5pp", "retrieved_on": 1427425282, "score": 2, "body": "hm, they should name it something like \"ubercool\" then, maybe \"UberScript\"?", "author": "killerstorm", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bit6", "parent_id": "t3_5z5pp", "score_hidden": false, "id": "c02bit6"}
{"controversiality": 0, "retrieved_on": 1427425246, "subreddit_id": "t5_2fwo", "created_utc": "1193449818", "ups": 0, "gilded": 0, "link_id": "t3_5z5pp", "downs": 0, "score": 0, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c02blm9", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02blm9", "parent_id": "t3_5z5pp", "score_hidden": false, "author_flair_css_class": null}