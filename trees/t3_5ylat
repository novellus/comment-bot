{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "jojotdfb", "created_utc": "1192724735", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1192746768", "children": [{"created_utc": "1192747142", "downs": 0, "subreddit": "programming", "archived": true, "ups": 3, "gilded": 0, "link_id": "t3_5ylat", "retrieved_on": 1427426078, "score": 3, "controversiality": 0, "body": "That may be it. Mind you I haven't touched assembly in a few years. Maybe I should pick it backup. I always did want to write a forth or classic basic interpreter.", "author": "jojotdfb", "author_flair_text": null, "distinguished": null, "edited": false, "id": "c029yw0", "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c029yup", "name": "t1_c029yw0", "author_flair_css_class": null}], "subreddit": "programming", "ups": 6, "name": "t1_c029yup", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ylat", "retrieved_on": 1427426078, "score_hidden": false, "id": "c029yup", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029w3e", "body": "It has a special place in mine for many good reasons: syntax is nice, macros and labeling is nice, small, fast, and open source.  GAS is nice and all, but it's AT&amp;T style syntax is hard to write without breaking your fingers.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "archived": true, "link_id": "t3_5ylat", "retrieved_on": 1427426114, "id": "c029w3e", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c029w3e", "parent_id": "t3_5ylat", "body": "NASM has always had a special place in my heart for no real good reason. This was interesting. Maybe I should look at gas again.", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "filesalot", "created_utc": "1192731756", "children": [{"controversiality": 0, "retrieved_on": 1427426090, "subreddit_id": "t5_2fwo", "created_utc": "1192738488", "ups": 3, "gilded": 0, "link_id": "t3_5ylat", "downs": 0, "score": 3, "id": "c029xxk", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "[The Art of Assembly Language](http://books.google.com/books?id=094tYob7ipQC&amp;dq=art+of+assembly+language&amp;pg=PP1&amp;ots=e586GQtdH5&amp;sig=G0BcAZ_TThi3NmuErDsNOtbtPVc&amp;prev=http://www.google.com/search%3Fq%3Dart%2Bof%2Bassembly%2Blanguage%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dorg.mozilla:en-US:official%26client%3Dfirefox-a&amp;sa=X&amp;oi=print&amp;ct=title&amp;cad=one-book-with-thumbnail)", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029xxk", "parent_id": "t1_c029wzd", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426088, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029y2t", "gilded": 0, "link_id": "t3_5ylat", "downs": 0, "score": 4, "score_hidden": false, "id": "c029y2t", "author": "sickofthisshit", "created_utc": "1192739546", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t1_c029wzd", "body": "[Henry Baker](http://home.pipeline.com/~hbaker1/) has a \"medium-level\" approach to assembler, called\n[COMFY](http://home.pipeline.com/~hbaker1/sigplannotices/COMFY.TXT)\nimplemented for the [6502 in Emacs Lisp](http://home.pipeline.com/~hbaker1/sigplannotices/CFYCMP1.LSP)\n\nAn implementation of his ideas for Intel x86 apparently exists, and is called [Sassy](http://www.call-with-current-continuation.org/eggs/sassy.html)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029wzd", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5ylat", "retrieved_on": 1427426103, "id": "c029wzd", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5ylat", "body": "Huh.  I'm having a lot of trouble understanding why anyone would care.  If I'm someone who has to choose which to use, on what basis should I make the choice?  The article doesn't really say which is better or why it matters.  Ok, the syntax is different, I get it.  Isn't compatibility with existing or surrounding code going to be the overriding factor?\n\n\nBy the way, why didn't a higher-level syntax for asm ever take off?  You know, like C but with a 1-1 translation to machine code.  People have been talking about that for 25 years at least.\n\n    _start {\n      // Move the contents of variables\n      $ecx = *var1;        // mov ecx,[var1]\n      if($ecx &lt;= *var2)    // cmp ecx [var2],jg\n        $ecx = *var2;\n      else if($ecx &lt;= *var3)\n        $ecx = *var3;\n\n      $eax = 1;\n      $ebx = $ecx;\n      int(0x80);\n    }\n     ", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1192731768", "ups": 4, "gilded": 0, "link_id": "t3_5ylat", "retrieved_on": 1427426103, "score": 4, "body": " NASM is better in some ways, and the original authors had their hearts in the right places, but overall it feels like trading one set of quirks for another.  At least GAS has been through the wringer a lot more than NASM.\n\nFor Windows I'd still use NASM, because it breaks free of the rest of the GNU tooolchain (I'd also seriously look at FASM).  For Linux and OS X, I'd stick with GAS. ", "author": "happyhappyhappy", "author_flair_text": null, "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c029wzh", "parent_id": "t3_5ylat", "score_hidden": false, "id": "c029wzh"}
{"controversiality": 0, "retrieved_on": 1427426076, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029z21", "gilded": 0, "link_id": "t3_5ylat", "downs": 0, "score": 4, "score_hidden": false, "body": "The [Yasm](http://www.tortall.net/projects/yasm/) Modular Assembler Project is a complete rewrite of the NASM assembler which accepts NASM and GAS assembler syntaxes, outputs binary, ELF32, ELF64, 32 and 64-bit Mach-O, RDOFF2, COFF, Win32, and Win64 object formats.", "author": "gamepad", "created_utc": "1192748794", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 4, "parent_id": "t3_5ylat", "id": "c029z21", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192759056", "gilded": 0, "link_id": "t3_5ylat", "retrieved_on": 1427426066, "name": "t1_c029zvb", "score_hidden": false, "body": "Learn both syntaxes.  Once you know assembly language the syntactical differences are trivial.", "author": "snarfy", "archived": true, "distinguished": null, "edited": false, "score": 0, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t3_5ylat", "id": "c029zvb", "author_flair_css_class": null}
{"created_utc": "1192770727", "downs": 0, "subreddit": "programming", "archived": true, "ups": 1, "gilded": 0, "link_id": "t3_5ylat", "retrieved_on": 1427426053, "score": 1, "controversiality": 0, "score_hidden": false, "id": "c02a0rq", "author": "fmota", "author_flair_text": null, "distinguished": null, "edited": false, "subreddit_id": "t5_2fwo", "name": "t1_c02a0rq", "parent_id": "t3_5ylat", "body": "Nobody's mentioned [fasm](http://flatassembler.net/) yet? Well, that's fixed.", "author_flair_css_class": null}