{"controversiality": 0, "retrieved_on": 1427425375, "subreddit_id": "t5_2fwo", "created_utc": "1193340977", "ups": -8, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": -8, "body": "Bash.", "author": "skorgu", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bbm3", "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bbm3"}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193340984", "ups": -9, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score": -9, "body": "ruby", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bbm5", "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bbm5"}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193341006", "name": "t1_c02bbmb", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score": 1, "score_hidden": false, "id": "c02bbmb", "author": "theDrWho", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t3_5z4hl", "body": "PHP", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193341016", "ups": -3, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score": -3, "body": "Scala", "author": "amichail", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bbmg", "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bbmg"}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "[deleted]", "created_utc": "1193341252", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "mbarnett", "created_utc": "1193341989", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02becu", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425340, "score": 2, "body": "One of the espoused goals of \"Javascript on Rails\" type things (using Javascript as the server programming language) is to attempt some reduction in the sheer number of languages. You still have to know *some* basics of a presentation language though, whether that's the HTML you emit (although if you are generating it using a Javascript API, are you writing \"HTML\"?) or Flash, etc.", "author": "sblinn", "created_utc": "1193366394", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02bbr2", "score_hidden": false, "id": "c02becu"}], "subreddit_id": "t5_2fwo", "name": "t1_c02bbr2", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 6, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "id": "c02bbr2", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bbnx", "body": "I agree, for \"advanced web development\" you \"may\" need to know a number of AJAX frameworks that may cover several languages, need to know HTML, CSS, JavaScript, one of many server side languages (ASP.NET/C#, PHP, Ruby, Python, etc.), how to do REST, POX, web services, HTTP, SSL, certs, and on it goes, with no end in sight.\r\n\r\nPersonally, I have been doing so called advanced web development since 1997 and after 10 years wondering if that was a mistake because it does require you to know all of this... stuff.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 4, "name": "t1_c02bbnx", "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score_hidden": false, "id": "c02bbnx", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5z4hl", "body": "web-development crosses many paradigms: databases, distributed computing, sequential processing, client-server architechure.\n\n1 language alone wont suffice for all those areas of computing. Better to understand the nuts and bolts of application design, analysis and profiling ... and when you're done with all that. Pick a set of languages to meet your project goals.", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425375, "subreddit_id": "t5_2fwo", "created_utc": "1193341298", "ups": -14, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": -14, "id": "c02bbo0", "author": "mindslight", "archived": true, "distinguished": null, "edited": false, "body": "write real apps, not web toys", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bbo0", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425375, "subreddit_id": "t5_2fwo", "created_utc": "1193341316", "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 2, "body": "ASP.NET together with C# and you nail two birds in one.  ", "id": "c02bbo5", "author": "krelian", "author_flair_text": null, "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "name": "t1_c02bbo5", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193341637", "name": "t1_c02bbph", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score": -11, "score_hidden": false, "id": "c02bbph", "author": "jojotdfb", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": -11, "parent_id": "t3_5z4hl", "body": "C#", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": -2, "author": "berlinbrown", "created_utc": "1193341654", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "janl", "created_utc": "1193342071", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "jbellis", "created_utc": "1193342776", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "janl", "created_utc": "1193342883", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 3, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425371, "score": 3, "body": ":)\r\n\r\nI was actually thinking of something more along the lines of GFS or, more db-like, BigTable.  My understanding of CouchDB is that it tackles distribution-through-replication but not distrubution-where-one-machine-can't-fit-the-data.  But I could be wrong.", "id": "c02bbyg", "author": "jbellis", "created_utc": "1193343261", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bbyg", "parent_id": "t1_c02bbw9", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "body": "Like CouchDB? :-)", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bbw9", "parent_id": "t1_c02bbvn", "id": "c02bbw9", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "body": "Yup, I would use erlang for the next fault-tolerant petabyte storage engine I write, but not for the next web app. :)", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bbvn", "parent_id": "t1_c02bbrm", "id": "c02bbvn", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425352, "subreddit_id": "t5_2fwo", "created_utc": "1193355427", "ups": 3, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 3, "body": "beerriot.com is in Yaws... how fast we forget.", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c02bddy", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bddy", "parent_id": "t1_c02bbrm", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 6, "name": "t1_c02bbrm", "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425373, "score_hidden": false, "id": "c02bbrm", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bbpm", "body": "Web development involves a lot of work with strings. This is not one of Erlang's strengths. That might be why.", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193342470", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "sblinn", "created_utc": "1193343702", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "Bogtha", "created_utc": "1193344146", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425367, "score": 1, "body": "I agree, which is why I talked later about lighttpd. Certainly other web servers, Apache being the biggest, provide similar coverage. To carefully construct an application though that is transparent (seems single-housed for important things like, say, transactional processing) in this environment of web server processes, database processes, etc., becomes the real trick.", "author": "sblinn", "created_utc": "1193344924", "distinguished": null, "edited": true, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bc86", "parent_id": "t1_c02bc45", "score_hidden": false, "id": "c02bc86"}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425369, "body": "&gt; Vertical meaning multiple instances on the same machine or machine image, otherwise standard Python does not take advantage of multiple cores or CPUs.\n\nGraham Dumpleton wrote [an article](http://blog.dscpl.com.au/2007/09/parallel-python-discussion-and-modwsgi.html) that I think is relevant here.  People seem to forget that the GIL isn't particularly relevant to Python web development because Apache's prefork MPM is the \"defacto standard\".\n", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bc45", "parent_id": "t1_c02bc12", "id": "c02bc45", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02bc12", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425370, "score_hidden": false, "body": "If your Python deployment and/or web framework handles both vertical (required, IMHO) and horizontal clustering (optional), you are doing OK.\n\n(Vertical meaning multiple instances on the same machine or machine image, otherwise standard Python does not take advantage of multiple cores or CPUs. Horizontal meaning fairly seamless use across multiple machines or machine images.)\n\nUsing \"best practices\" Python web app deployment you are probably OK:\n\nLighttpd -&gt; multiple instances of your Python FastCGI or SCGI code running on several servers -&gt; database cluster that handles the distributed load from these multiple non-communicating python instances.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02bbtm", "id": "c02bc12", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "sblinn", "created_utc": "1193343945", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193414173", "name": "t1_c02bhmg", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425297, "score": 1, "score_hidden": false, "id": "c02bhmg", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bc2n", "body": "[deleted]", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bc2n", "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425369, "score_hidden": false, "body": "And for the other side:\n\n&gt; What's wrong with Python\n\nI touched on it from the other perspective, mainly:\n\n1. you have to configure and use other tooling to scale beyond one processor\n2. code reloading is a bit ... fragile\n3. lambda syntax makes me weep\n4. some of the other syntax makes me weep\n\nBut saying you might as well use C and CGI? That's just inflammatory baiting, probably a throwaway joke line.\n\nHere is some older reddit discussion on Python's \"warts\":\n\nhttp://programming.reddit.com/info/w820/comments\n\nNote: Python is a fine language! Don't crucify me, I use Jython every day...", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bbtm", "id": "c02bc2n", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02bbtm", "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425373, "score_hidden": false, "id": "c02bbtm", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bbpm", "body": "[deleted]", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 11, "author": "jbellis", "created_utc": "1193342906", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": -3, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425299, "score": -3, "body": "They do actually. They're all ad-hoc, informally specified, bug ridden implementations of 1/2 of common lisp. ", "id": "c02bhlu", "author": "david_ncl", "created_utc": "1193414063", "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bhlu", "parent_id": "t1_c02bbwf", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bbwf", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 11, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "id": "c02bbwf", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bbpm", "body": "&gt; Oh yea; don't say python, ruby, or php. You might as well just use C and cgi.\r\n\r\nHaving actually written a few CGI in C, that is complete hogwash.\r\n\r\n&gt; PHP is a crap language\r\n\r\nAgreed, but you do know that Python and Ruby have virtually nothing in common with it, right?", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": -2, "name": "t1_c02bbpm", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score_hidden": false, "body": "I dont know why more projects don't use erlang.  I would go with erlang/yaws.  The concurrent, distrubuted nature of the language works well for fault tolerant systems.\r\n\r\nFactor also makes sense. I can where Factor might work well for server binary files.\r\n\r\nOh yea; don't say python, ruby, or php.  You might as well just use C and cgi.  I know the libraries are infinitely better but we will bite our selves in the butt trying to maintain php/ruby apps down the road.  But lets get serious and quit eating fanboy bullsh*t.  PHP is a crap language and I don't care if facebook which was originally written in PHP can handle 5 trillion users.  It is still a crap language.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5z4hl", "id": "c02bbpm", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193341732", "ups": -5, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "score": -5, "body": "[COBOL](http://www.google.com/search?q=cobol+cgi)\nAnd JavaScript. Oh dang, that's two already.", "author": "adamv", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bbq0", "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bbq0"}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 9, "author": "sblinn", "created_utc": "1193341906", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193345863", "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425367, "score": 2, "score_hidden": false, "body": "Also on the \"built on Java\" side of things, Groovy and Grails:\n\nhttp://grails.codehaus.org/\n\nhttp://jasonrudolph.com/\n\nI met Jason at a BarCamp and his presentation for his Getting Started with Grails book was actually pretty darned slick for a simple \"plug and play\" web framework that got things going really quickly. (YMMV on whether you consider this \"advanced\" or not but some people like things that just work and don't require much if any coding or configuration, whether or not you have closures, continuations, or function composition, etc. But it won't blow your mind or teach you much about programming language design, type theory, etc. It will just let you publish JVM-based web apps pretty quickly using minimal configuration and modeling.)", "author": "sblinn", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bcd3", "parent_id": "t1_c02bbqo", "id": "c02bcd3", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 9, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425375, "body": "I will redact \"advanced\" from this question in order to answer without worrying whether I am offending someone for including or excluding something. (But I wonder what languages you mean to exclude by this terminology... Python? Ruby? Lisp? By what do you mean \"advanced\"?)\n\nAnyway, if you defined \"Advanced\" as \"something less than 5 years old\", I would probably look at Scala and its main web framework, \"Lift\". Here's a fairly recent tiny blog article mentioning it:\n\nhttp://davidrupp.blogspot.com/2007/10/fun-with-scala-things-im-learning-from.html\n\nIn a world where almost everything has already been implemented in some Java library somewhere, Scala lets you tap into that, and happens to be an interesting \"advanced\" language to boot.\n\nhttp://www.scala-lang.org/\n\nhttp://liftweb.net/index.php/Main_Page\n\nLift is probably further along and further refined than many of the other \"advanced\" (read: 5 years old or less) languages like Factor, which would certainly be a mind-bending experience in which to write a web application. (You would be at the edge; working with [brilliant people](http://www.bluishcoder.co.nz/), some with [strong personalities](http://programming.reddit.com/user/slava_pestov/).)\n\nHere's a snippet of what some web handling code in Factor might look like:\n\nhttp://www.bluishcoder.co.nz/2007/01/json-web-services-with-factor.html\n\nBut things that are \"old language\" can be quite useful, too. Say, UCW (uncommon web, a pretty darned interesting Lisp web framework), Hunchentoot (also Lisp), Yaws (Erlang), etc.\n\nWhy don't you tell us more about what you're looking for?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bbqo", "parent_id": "t3_5z4hl", "id": "c02bbqo", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193342263", "name": "t1_c02bbsg", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425373, "score": -6, "score_hidden": false, "body": "HTML", "author": "surajbarkale", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": -6, "parent_id": "t3_5z4hl", "id": "c02bbsg", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425373, "subreddit_id": "t5_2fwo", "created_utc": "1193342291", "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 2, "body": "Perl on any kind of MVC framework.", "author": "damog", "archived": true, "distinguished": null, "edited": false, "id": "c02bbsm", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bbsm", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "desnotes", "created_utc": "1193342663", "children": [{"controversiality": 0, "retrieved_on": 1427425152, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bsu7", "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "created_utc": "1193586211", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bbux", "id": "c02bsu7", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bbux", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 3, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "id": "c02bbux", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5z4hl", "body": "Python first, for now and Erlang second. These are two languages I am focusing on as a web developer.", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": -11, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "score": -11, "body": "logo", "id": "c02bbv4", "author": "gsiener", "created_utc": "1193342681", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bbv4", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 30, "author": "Bogtha", "created_utc": "1193342694", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "ericlavigne", "created_utc": "1193344591", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "procrastitron", "created_utc": "1193349565", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 4, "author": "[deleted]", "created_utc": "1193360038", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "procrastitron", "created_utc": "1193360548", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 0, "author": "[deleted]", "created_utc": "1193360828", "children": [{"controversiality": 0, "retrieved_on": 1427425344, "subreddit_id": "t5_2fwo", "created_utc": "1193362675", "ups": 0, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 0, "body": "&gt; If your main concern is digging through the hierarchy\n\nNo, that was just an example of one of the side effects of inheritance. My actual concern is making program structure match the problem it is trying to solve. When multiple things are related, then they should be in the same object, otherwise they shouldn't be. Not using inheritance forces you to properly think about which things are related and how tightly they are related.", "author": "procrastitron", "archived": true, "distinguished": null, "edited": false, "id": "c02be2h", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02be2h", "parent_id": "t1_c02bdw6", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 0, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425346, "id": "c02bdw6", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bdw6", "parent_id": "t1_c02bdvb", "body": "In that case the caller would have additional complexity to deal with. You just can't sweep this under the rug -- there are situations where inheritance is appropriate.\n\nIf your main concern is digging through the hierarchy, use a tool to list all effective methods.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 2, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425346, "body": "&gt; Why does everybody like to say that their favorite feature that they like to pick on is the \"X equivalent of goto\"?\n\nBecause the thing that makes goto bad (the lack of structure) is not limited to goto.\n\n&gt; If this is all you can do, then you end up with tons of methods which do nothing but forward a call onto some other object.\n\nNo, instead you would just make it possible to retrieve the shared object, so that way who ever is trying to call the base methods can call them directly. They can also know exactly which version is being called, as opposed to digging through class hierarchies.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bdvb", "parent_id": "t1_c02bdtc", "id": "c02bdvb", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 4, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425347, "id": "c02bdtc", "author_flair_text": null, "distinguished": null, "edited": true, "name": "t1_c02bdtc", "parent_id": "t1_c02bcv7", "body": " &gt; It is basically the encapsulation equivalent of goto.\n\nWhy does everybody like to say that their favorite feature that they like to pick on is the \"X equivalent of goto\"?\n\n&gt; If a specific implementation needs to be shared between multiple classes, then the part that needs to be shared should be split off and put into it's own class.\n\nIf this is all you can do, then you end up with tons of methods which do nothing but forward a call onto some other object. This is a form of obfuscation in itself.\n\n(Multiple) inheritance certainly has its place. The fact that some people abuse it doesn't make it inherently bad.", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425360, "id": "c02bcv7", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bcv7", "parent_id": "t1_c02bc6i", "body": "I agree that Java is poorly designed, but I think you're wrong that *lack* of multiple inheritance prevents good OOP style.\n\nInheritance *at all* is bad OOP style because it allows for a form of unstructured implementation. It is basically the encapsulation equivalent of goto. If a specific implementation needs to be shared between multiple classes, then the part that needs to be shared should be split off and put into it's own class. This enables the sharing of code, but prevents the obfuscation that method overriding can result in.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bc6i", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 6, "link_id": "t3_5z4hl", "retrieved_on": 1427425368, "body": "&gt; Other contenders include Java and the languages available with ASP.NET, but somebody else will have to comment on them. There are other languages, of course, but I think that unless there are a lot of people working on something, it's risky to use it for anything other than experimental purposes unless there are major advantages.\n\nI would avoid Java because the language is poorly designed and gets in the way a lot. Lack of multiple inheritance prevents good object-oriented style in many situations. Lack of first class functions prevents functional programming, or at least makes it clumsy and verbose.\n\nFor beginning web programming, I would recommend Python. Django and Web.py are both good options that are easy to set up and easy to learn.\n\nFor advanced web programming, take a look at the Lisp options (sblinn mentioned a couple - there are others). They tend to be very well designed, and the language is also excellent. The reason I don't recommend Lisp for new web developers is that the programming tools are more difficult to install. If you have the patience to get past that step, Lisp is definitely worth it.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bbv6", "id": "c02bc6i", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 15, "author": "[deleted]", "created_utc": "1193344690", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193348481", "ups": 3, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425361, "score": 3, "body": "&gt; Is PHP really faster? I've noticed it on some legacy apps as well, so I know there's something to it. But PHP doesn't even cache bytecodes by default and shootouts show it to be slower when compared to Python. I think that PHP apps end up being faster a lot of the time simply because a lot of PHP libraries are wrappers around C code. If anyone could confirm this that would be great.\n\nI think some of it is down to the fact that Python usually gets used with frameworks while that's less common with PHP.\n\n&gt; In the future, if we are talking about 'advanced' frameworks, I really can't help but to wonder if Seaside-type frameworks will pick up.\n\nI haven't really investigated them properly, but if I'm not mistaken, they try to abstract away the request/response nature of HTTP entirely, don't they?\n\nMy guess is that this type of abstraction is intrinsically too leaky.  There's too many fine details regarding HTTP that can't be swept under the rug away from web developers' eyes.\n", "author": "Bogtha", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bcr7", "parent_id": "t1_c02bc6y", "score_hidden": false, "id": "c02bcr7"}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "malcontent", "created_utc": "1193349807", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425357, "score": 2, "body": "mod_ruby does exist, but it isn't used for a variety of reasons. IIRC, it's mostly because Ruby's interpreter can't unload things, so a single Ruby interpreter for the whole server isn't acceptable in shared hosting environments or when you're hosting more than one app on the same web server.\n\nEarly in the game, the Rails folk were claiming that FastCGI was faster than mod_ruby, and that killed some of the interest too. I think if you tried you could get it to work though.", "id": "c02bd8y", "author": "[deleted]", "created_utc": "1193353663", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bd8y", "parent_id": "t1_c02bcw0", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bcw0", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5z4hl", "retrieved_on": 1427425360, "id": "c02bcw0", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bc6y", "body": "If you go with ruby there is basically rails and merb. The vast majority of ruby users go with rails. This means the community is extremely active and there are tons of plug ins and \"meta frameworks\" (like hobo) built on top of rails.  \n\nRails is fully baked. Pretty much anything you may want to do is in there.\n\nThere are a few books on rails as well as dozens of web sites dedicated to documentation (bookmark gotapi).\n\nWhile it's true that ruby is slower then python and there is no mod_ruby (why oh why not!!!) you are likely to find that ruby is \"fast enough\" for your needs. As the parent points out there are numerous projects working very hard to make ruby much faster then it is now. Right now the preliminary results show that rubinious and YARV will be as fast if not faster then python. \n\nThe ruby library is easier to use due to gems. Python community just recently got behind eggs (took them long enough) but you will find that gems are much easier to install, update, freeze and unfreeze). For example if you rails project needs a particular version of a gem you can \"freeze\" that gem into your rails project so that it always uses that version.\n\nRails has testing built in at a very deep level. It encourages you to write test driven web sites and that's a very good thing. \n\nJruby is a very robust port of ruby to the JVM. You can use all the java libraries if you want, you can deploy as a war file into java containers if you want. \n\nRuby is fun.\n\nI was in your position of evaluating web frameworks and I chose ruby for the reasons stated above. I wanted to abandon PHP and considered .net, ruby, python, and java frameworks and decided that ruby was the one I liked best.  \n\nI know a lot of it has to do with your personal preferences but so far I have been pretty happy with my choice. \n\nBTW: At first there were no decent IDEs for rails and ruby but now they are coming out of the woodwork. Lately I have been going back and forth between netbeans and aptana. ", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "shit", "created_utc": "1193355067", "children": [{"controversiality": 0, "retrieved_on": 1427425153, "subreddit_id": "t5_2fwo", "created_utc": "1193585175", "ups": 1, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 1, "body": " I'd be interested as well. As Ruby 1.8 is nearly 3 times as slow as Python ( http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&amp;lang=all ), it would benefit the Ruby community to show 1.9 addresses this. ", "author": "mcantelon", "archived": true, "distinguished": null, "edited": true, "id": "c02bsrz", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bsrz", "parent_id": "t1_c02bdcx", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425353, "body": "&gt; but Ruby loses to Python in speed\n\nIt would be interesting to benchmark Ruby 1.9 against Python. I was surprised to find that Ruby 1.9 was several times faster than 1.8 on some casual benchmarks I did.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bdcx", "parent_id": "t1_c02bc6y", "id": "c02bdcx", "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bdsy", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425347, "score": 1, "score_hidden": false, "body": "&gt; Ruby loses to Python in [...] consistency.\r\n\r\nHow?", "author": "ayrnieu", "created_utc": "1193359919", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02bc6y", "id": "c02bdsy", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bc6y", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 15, "link_id": "t3_5z4hl", "retrieved_on": 1427425368, "id": "c02bc6y", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bbv6", "body": "I'd like to back your Python suggestion.\r\n\r\nReally all Ruby has at this time is Rails and the hype that surrounded it (and don't get me wrong, Rails *is* a good framework), but Ruby loses to Python in speed, libraries, and consistency. Though I'd like to keep my eyes on Rubinius. Pylons or Django are roughly equivalent to Rails (and even have some things that are better than Rails), so there's no real advantage to Ruby there either.\r\n\r\nScala or something else on the JVM is another interesting approach, but any interfacing with Java comes with learning more tools, and imo, unless you really need a specific library that Java has and Python doesn't (and I haven't run into the problem), I don't see what the JVM buys you.\r\n\r\n&gt; Python has a few big frameworks \u2014 Turbogears, Pylons, Django. Some of these are easily decomposable, meaning that you can pick and choose various parts without having to deal with the entire framework. Paste is also useful if you want to roll your own, which is actually quite feasible.\r\n\r\nDefinitely. They all interoperate pretty well and despite Django not being as decoupled I've even used parts of it inside a Pylons app. That's one of the great things about Python web frameworks is you have a wide variety of tools and libraries to piece together what you want even if the 'big' frameworks don't work for you.\r\n\r\n&gt; There seems to be significant momentum behind all of these projects, plus Python in general. Things like Python 3, PyPy and mod_wsgi should produce some very interesting results in the future, and Django seems like a focal point for framework advancements.\r\n\r\nWell, I wouldn't narrow it down to Django as the focal point for framework advancements. I like newforms a lot, but there are certain features of Pylons which I really appreciate. Being able to easily deploy an app on another machine because each Pylons app is an egg is wonderful, for example. And the dead-simple REST support you can get with Pylons controllers is great as well. Keep in mind TG 2 will be built on top of Pylons. There's lots of great advancements in Python web frameworks in general.\r\n\r\n&gt; Ruby and Python don't perform as well as PHP, but the bottleneck is usually programmer performance, not CPU performance. Don't optimise for the wrong thing.\r\n\r\nIs PHP really faster? I've noticed it on some legacy apps as well, so I know there's something to it. But PHP doesn't even cache bytecodes by default and shootouts show it to be slower when compared to Python. I *think* that PHP apps end up being faster a lot of the time simply because a lot of PHP libraries are wrappers around C code. If anyone could confirm this that would be great.\r\n\r\nAnyway, I'd second Python. It is relatively stable right now but there are still advancements being made. While something like Scala's lift interests me, it is still very much a work in progress.\r\n\r\nIn the future, if we are talking about 'advanced' frameworks, I really can't help but to wonder if Seaside-type frameworks will pick up.", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 7, "author": "noamsml", "created_utc": "1193345454", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193347885", "name": "t1_c02bcnt", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425362, "score": 5, "score_hidden": false, "body": "I used mod\\_python for quite a while myself, but I'm more fond of mod\\_wsgi these days.  It doesn't give you as much control over the Apache processes as mod\\_python, but it's far more polished despite being far younger.\n\nIf you don't like dealing with WSGI directly and want replacements for the mod\\_python objects, I like [WebOb](http://pythonpaste.org/webob/) for Request and Response objects, [Genshi](http://genshi.edgewall.org/) for templates and [Beaker](http://beaker.groovie.org/) for sessions.\n", "author": "Bogtha", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 5, "parent_id": "t1_c02bcal", "id": "c02bcnt", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bcal", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 7, "link_id": "t3_5z4hl", "retrieved_on": 1427425367, "body": "I'm a Python guy myself. I'd like to add that if you just want to write the code without dealing with a complex framework or protocol, and you're willing to bind yourself to Apache, there's mod_python, which is very easy to use and provides just enough tools to make a good web application without too much sweat.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bbv6", "id": "c02bcal", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425339, "subreddit_id": "t5_2fwo", "created_utc": "1193366960", "ups": 3, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 3, "id": "c02beeb", "author": "jlc", "archived": true, "distinguished": null, "edited": false, "body": "I agree.  Python also has Zope 3, which is a bear to learn (I needed the von Weitershausen book to make any headway), but is for the most part well thought out, at least compared to TurboGears, the other web app framework I know fairly well.  I think Z3 is maybe over-complicated for smaller projects, but with the [grok](http://grok.zope.org) project coming along, I wouldn't count it out.\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02beeb", "parent_id": "t1_c02bbv6", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 30, "name": "t1_c02bbv6", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425372, "score_hidden": false, "body": "I'd say Python is your best bet.\n\nPHP is ubiquitous, so if it were for throwaway stuff or little projects, then it would be competitive.  But the language just isn't very nice, and when you come to write a *lot* of code in it, it starts to become a serious factor.  Furthermore, its main advantage &amp;mdash; cheap hosting that almost everybody offers &amp;mdash; isn't an advantage for serious projects where you are likely to be the server admin.\n\nThere's a lot of hype regarding Rails, which pushes Ruby along.  To be perfectly honest, there's no clear winner between Python and Ruby when it comes to the language itself, so you are left comparing libraries and frameworks.  And while Rails certainly gets a lot of attention, it isn't a panacea and I wouldn't say that there's anything that puts it significantly further ahead of the major Python frameworks.\n\nOf course, Ruby has more than one web framework, but they seem like much smaller projects with less people behind them.\n\nPython has a few big frameworks &amp;mdash; Turbogears, Pylons, Django.  Some of these are easily decomposable, meaning that you can pick and choose various parts without having to deal with the entire framework.  Paste is also useful if you want to roll your own, which is actually quite feasible.\n\nThere seems to be significant momentum behind all of these projects, plus Python in general.  Things like Python 3, PyPy and mod\\_wsgi should produce some very interesting results in the future, and Django seems like a focal point for framework advancements.\n\nI'm much more of an outsider with respect to Ruby, but it really seems to me that the community is significantly smaller with less interesting things going on compared with Python's community.  In 10\u201215 years, I'm certain Python will still be a major player, but I'm not sure at all about Ruby.\n\nRuby and Python don't perform as well as PHP, but the bottleneck is usually programmer performance, not CPU performance.  Don't optimise for the wrong thing.\n\nOther contenders include Java and the languages available with ASP.NET, but somebody else will have to comment on them.  There are other languages, of course, but I think that unless there are a lot of people working on something, it's risky to use it for anything other than experimental purposes unless there are major advantages.\n", "archived": true, "distinguished": null, "edited": true, "parent_id": "t3_5z4hl", "id": "c02bbv6", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "loverollercoaster", "created_utc": "1193343014", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 6, "author": "kemitchell", "created_utc": "1193348086", "children": [{"controversiality": 0, "retrieved_on": 1427425359, "subreddit_id": "t5_2fwo", "created_utc": "1193350475", "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 2, "id": "c02bcyo", "author": "malcontent", "archived": true, "distinguished": null, "edited": false, "body": "Having moved from PHP I do miss it sometimes. I get over it soon enough though :)", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bcyo", "parent_id": "t1_c02bcoz", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bega", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425339, "score": 2, "score_hidden": false, "body": " &gt; quips\n\nqualms?  quibbles?", "author": "Tommah", "created_utc": "1193367557", "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "ups": 2, "parent_id": "t1_c02bcoz", "id": "c02bega", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 6, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425361, "id": "c02bcoz", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bcoz", "parent_id": "t1_c02bbxb", "body": "seconded.\nPHP is a server-side web language first, and its ubiquity is a serious plus from a practical standpoint.\nI have my fair share of quips (e.g. the meaning of \"static\" in php5), but that doesn't change the fact that it works, almost immediately, and with little fuss.\nThe syntax certainly isn't the cleanest or the \"purest\", but that doesn't mean that it is impossible to write excellent (or even \"agile\") apps in PHP. PHP isn't going to make organization decisions for you in that respect. \"Enough rope to save or hang yourself...\"", "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "kikaerter", "created_utc": "1193400453", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "lennox125", "created_utc": "1193457791", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425229, "score": 1, "body": "You don't need Lisp for that stuff. Python or Ruby work fine.  And it's not like you can't write the stuff in PHP, you just end up with very verbose, copy-pasted-ish code.", "author": "kikaerter", "created_utc": "1193476821", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02bmws", "parent_id": "t1_c02bm5d", "score_hidden": false, "id": "c02bmws"}], "subreddit": "programming", "ups": 2, "name": "t1_c02bm5d", "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425239, "score_hidden": false, "id": "c02bm5d", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bg94", "body": "&gt;You actually can't really do any functional methodology in PHP, which can be a real problem when creating certain kinds of abstractions.\n\nAs it turns out, though, having the ability to make those abstractions isn't very important for most Web apps - which is why PHP powers so many prominent web apps while Lisp powers almost none ;)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "name": "t1_c02bg94", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425315, "score_hidden": false, "body": "You actually can't really do any functional methodology in PHP, which can be a real problem when creating certain kinds of abstractions.  Some things are really only nicely implemented either with Lisp-style macros or with higher-order functions.  PHP has neither.  And \"create_function\" is a real bear -- it leaks memory if done in a loop and it forces you to use _string_ _interpolation_ to parameterize the resulting function object.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bbxb", "id": "c02bg94", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bbxb", "ups": 6, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425371, "score_hidden": false, "body": "I'll throw down a vote for the (much maligned) PHP.\n\nOn the upside it's available everywhere, has extremely quick dev time, and doesn't lock you into one way of doing anything (especially in relation to using a specific \nOO/Functional &amp; DB/CRUD methodology), and there are enough current libraries to ensure that you never need to reinvent the wheel, not to mention a million tutorials out there (although thier quality is highly variable).\n\nOn the downside the syntax can be messy (function argument order in particular often makes no sense) and group programming can be tough without using a framework/templating. \n\nBut if you already understand programming/design/security fundamentals and where to find good information, PHP is a great fit, and its middle-age relative to some of the other options (perl on the old side, ruby/python/c# on the newer side) means it stays current without eschewing stability.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5z4hl", "id": "c02bbxb", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bbzm", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425370, "score": 2, "score_hidden": false, "id": "c02bbzm", "author": "procrastitron", "created_utc": "1193343496", "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "ups": 2, "parent_id": "t3_5z4hl", "body": "I would go with [Wadler's Links](http://groups.inf.ed.ac.uk/links/). It collapses all the web development tiers (Client, Server, Database) into a single language.\n\nOtherwise, I would have to suggest Java (not high level enough) combined with Google's Web Toolkit for the UI and Hibernate for the database access.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 6, "author": "[deleted]", "created_utc": "1193343828", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193354472", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "martinbishop", "created_utc": "1193356162", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193357651", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "martinbishop", "created_utc": "1193360155", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193370142", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "Lee_Nukes", "created_utc": "1193608701", "children": [{"controversiality": 0, "retrieved_on": 1427425120, "subreddit_id": "t5_2fwo", "archived": true, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 1, "score_hidden": false, "body": "I'd rather IE 6 users upgrade to Firefox, but I'll take IE 7 over IE 6.", "author": "[deleted]", "created_utc": "1193619641", "distinguished": null, "edited": false, "id": "c02bvc5", "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02buj7", "name": "t1_c02bvc5", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "score_hidden": false, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425131, "body": "You mean worse?", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02buj7", "parent_id": "t1_c02ben3", "id": "c02buj7", "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02ben3", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425336, "score_hidden": false, "id": "c02ben3", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bdtr", "body": "IE 7 doesn't have much market penetration yet. Presumably this will get better with time.", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02bdtr", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 3, "link_id": "t3_5z4hl", "retrieved_on": 1427425347, "body": "I was joking, also, the website says they support IE 7", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bdlw", "id": "c02bdtr", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02bdlw", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425349, "score_hidden": false, "body": "Not when you like getting paid.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bdh1", "id": "c02bdlw", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 2, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425351, "body": "&gt; One problem the presenter mentioned is that it doesn't support IE at all in its current form.\n\nThat's a feature.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bdh1", "parent_id": "t1_c02bdbg", "id": "c02bdh1", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425353, "id": "c02bdbg", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bdbg", "parent_id": "t1_c02bc20", "body": "HOP is extremely cool. I have high hopes for it. I also saw a presentation about it last week, at the Albuquerque Lisp/Scheme User Group meeting.\n\nOne problem the presenter mentioned is that it doesn't support IE at all in its current form.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 6, "name": "t1_c02bc20", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425370, "score_hidden": false, "body": "HOP is worth looking into: http://hop.inria.fr/\n\nI watched the lead developer present at MSLUG the other day. He's also the guy behind Bigloo Scheme. Fascinating stuff.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5z4hl", "id": "c02bc20", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425369, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bc2q", "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 1, "score_hidden": false, "body": " \"Advanced web development\" implies the use of interactive pages, which implies the use of Javascript.\n\nIf you want to learn ONE language to do web development, that language needs to be Javascript. \n\nIf you mean 1 serverside language, then go python or php.  Python is probably better, but php is more ubiquitous.", "author": "fryguy8", "created_utc": "1193343960", "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "ups": 1, "parent_id": "t3_5z4hl", "id": "c02bc2q", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 15, "author": "natrius", "created_utc": "1193344090", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 3, "author": "sbrown123", "created_utc": "1193345713", "children": [{"controversiality": 0, "retrieved_on": 1427425364, "subreddit_id": "t5_2fwo", "author_flair_text": null, "name": "t1_c02bcl8", "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 5, "score_hidden": false, "id": "c02bcl8", "author": "natrius", "created_utc": "1193347364", "distinguished": null, "edited": true, "archived": true, "subreddit": "programming", "ups": 5, "parent_id": "t1_c02bcc6", "body": " It doesn't matter for the uninitiated. The easiest Python framework to get started with is Django. The fact that there's more than one option doesn't matter that much for beginners. I've never heard of a new Python programmer (and especially not a new web developer) going with a different framework. The excellent documentation and automatically generated admin interface will do that to people.\n\nIf a new programmer goes with Ruby, by the time they advance to the point where they can even realize that Rails might not be a perfect fit for their brain, learning a new programming language won't be a big deal.\n\nRuby has the benefit of hype, so more new programmers are learning it. If you have friends who are trying to learn web programming at the same time, more of them will end up going with Ruby, and having people to bounce questions off of is pretty valuable.\n\nLike I said, I think Python is the better choice, but in a couple of years, it really won't matter. ", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "malcontent", "created_utc": "1193349925", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193351248", "ups": 2, "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425357, "score": 2, "body": "Merb and camping are not full stacks (or intended to be) like Rails.  Merb, which I have never heard of, appears to be more of a Mongrel handler from what I just googled up.\n\nPython has three major full stacks: Django, TurboGears, and Pylons.  There are dozens of small use frameworks similar to camping and Merb.", "id": "c02bd11", "author": "sbrown123", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "name": "t1_c02bd11", "parent_id": "t1_c02bcwl", "score_hidden": false, "author_flair_css_class": null}], "subreddit": "programming", "ups": 2, "name": "t1_c02bcwl", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425360, "score_hidden": false, "body": "Ruby has three major web frameworks and some minor ones. \n\nRails, Merb and camping. They all use activerecord but there are alternatives to activerecord as well.\n\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02bcc6", "id": "c02bcwl", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 3, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425367, "body": "&gt;Pick Python or Ruby. It honestly doesn't matter.\n\nActually it matters a lot.  For example, if you pick Ruby there is only \"one true road\" in the framework department.  Not so with Python.  Besides choices, Python also offers superior performance which can really matter for scaling (unless scaling doesn't matter).", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bcc6", "parent_id": "t1_c02bc3s", "id": "c02bcc6", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02bc3s", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 15, "link_id": "t3_5z4hl", "retrieved_on": 1427425369, "id": "c02bc3s", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5z4hl", "body": "  Pick Python or Ruby. It honestly doesn't matter.\n\nI use Python for several reasons:\n\n1. I learned Python before the Rails hype, so I didn't even know about Ruby. Why switch when Python's working fine for me?\n2. I don't like the TMTOWTDI philosophy that Perl has, and from what I've heard, Ruby has inherited from it. I've rarely read someone's Python code that didn't make sense immediately because the language leads everyone to code in similar ways. It's a far cry from what I experienced when I programmed in Perl.\n3. Python is established in more areas than just web programming. My operating system (Ubuntu) is scriptable with it and many of the utilities are written in it. My revision control system (bzr) is scriptable with it. Even my web browser (Firefox) is scriptable with it if I feel like compiling PyXPCOM. Libraries for doing anything are easy to find, though I hear this is getting better in Ruby as well.\n4. As Bogtha noted, there are several established web frameworks for Python. If I feel like Django is too monolithic for me, I can play around with Pylons or web.py to see if they're a better fit for me.\n\nEither way, you'll be fine. I suggest either going with Python or flipping a coin.\n\nAnd make sure you learn JavaScript as well if you don't already know it.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 12, "author": "freeradical97", "created_utc": "1193344376", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "malcontent", "created_utc": "1193350497", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193404047", "name": "t1_c02bgho", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425312, "score": 1, "score_hidden": false, "id": "c02bgho", "author": "depleater", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 1, "parent_id": "t1_c02bcys", "body": "As freeradical97 suggests, if [there can be only one](http://en.wikiquote.org/wiki/Highlander_%28film%29), then... Javascript. Client-side *and* [server-side](http://en.wikipedia.org/wiki/Server-side_JavaScript).\n(yes, there are actually quite a few options for using Javascript server-side).", "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "name": "t1_c02bcys", "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425359, "score_hidden": false, "id": "c02bcys", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02bc5o", "body": "Actually you could use javascript on the server end with helma.\n", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 12, "controversiality": 0, "archived": true, "link_id": "t3_5z4hl", "retrieved_on": 1427425368, "id": "c02bc5o", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02bc5o", "parent_id": "t3_5z4hl", "body": "JavaScript, obviously. =)", "author_flair_css_class": null}
{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193355663", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193473174", "name": "t1_c02bms9", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425231, "score": 2, "score_hidden": false, "id": "c02bms9", "author": "abw", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": 2, "parent_id": "t1_c02bdey", "body": "&gt; why no love for Perl? \n\nPerl is much loved. Although it has lost its crown as *the* language for web programming (back when web programming == CGI scripts or mod_perl), it's still the most popular general-purpose scripting language in terms of installation base and usage.  \n\nSure, the language itself has its fair share of warts and isn't recommended for novices or the faint-hearted.  I personally prefer the cleaner syntax of Python and Ruby, but Perl wins big on pure expressive power.  But the thing that makes Perl tower above all the other scripting languages is CPAN.  A good development language is syntax + libraries.\nPerl++ in that respect.\n\nSo it's not that there's no love for Perl.  But it's been around a long time, so we're long past the fanboy stage.  \n\nAnd let's not forget that Perl directly spawned or indirectly inspired Python, PHP, Ruby and various other Perl-alike languages.  So it will always be an important cornerstone of the scripting language clan, even if it's no longer the hottest, latest thing on everyone's lips.\n", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 1, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5z4hl", "retrieved_on": 1427425352, "body": "why no love for Perl?  Where does the python/ruby crowd get its heartbeat?\n\nSome how I see the two aforementioned languages as simple jails into the OOP abstraction layer the mainstream so loves.", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02bdey", "parent_id": "t3_5z4hl", "id": "c02bdey", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425326, "subreddit_id": "t5_2fwo", "created_utc": "1193381741", "ups": -3, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": -3, "body": "C++. \r\nYes, it sucks. And no, I wouldn't use it. But remember, we are talking 1 language. \r\nWhat if you really really need performance? Or you really really need a library? \r\n\r\nWhen I use Python/Haskell/Ruby/(Whatever other language I like to use) I have the option of dropping into C if I need something like that. But if we are talking one language, you can't do that.\r\n\r\nSo if we are talking one language, it has to be C++. But why only one?", "author": "Prozen", "archived": true, "distinguished": null, "edited": false, "id": "c02bfew", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bfew", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02bg9v", "gilded": 0, "link_id": "t3_5z4hl", "retrieved_on": 1427425315, "score": 4, "body": "If you're thinking of developing applications rather than sites, it would be worth looking at Seaside, a continuation-based web framework based on Smalltalk. Its key point (from http://seaside.st ) is that it provides a layered set of abstractions over HTTP and HTML that let you build highly interactive web applications quickly, reusably and maintainably. \n\nIt provides programmatic HTML generation, callback-based request handling, embedded components, modal session management, and integrated support for Ajax. \n\nIt's written in Smalltalk, which can be a great environment for developers, with rich introspection, refactoring, debugging and extensibility out of the box. Have a look at http://squeak.org/Documentation/ for more information.\n\nYou may well decide Seaside/Smalltalk don't meet your needs, but evaluating it will give you a very different perspective by which to judge other languages &amp; frameworks.", "author": "mykdavies", "created_utc": "1193400733", "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit_id": "t5_2fwo", "ups": 4, "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bg9v"}
{"controversiality": 0, "retrieved_on": 1427425306, "subreddit_id": "t5_2fwo", "created_utc": "1193409051", "ups": 5, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 5, "body": "For \"advanced\" web development, I'd go with Smalltalk and the [Seaside](http://seaside.st) web framework. The continuations and callback features are great. You're completely liberated from the request/response cycle and can allow your code to follow alternate paths, interact with the user, etc, in a more linear patterns, with ALL state preserved between requests.\n\nFor advanced development, there's really nothing else like it. There are some imitators in other languages, but many of them never seemed to get past the experimental phase.\n\nIf you'd like to stay with more traditional languages, I'd go with Python. I've been making a living doing web development with Python for more than a decade now, using the same basic publishing stack! The Zope 3 project has a lot of maturity and history behind it, and it's pieces are now being broken out into small individual libraries that should interact well with other systems. In theory anyways.\n\nPlus Python has SQLAlchemy which is one of the best database-interaction systems I've seen since NeXT's old Enterprise Objects Framework (now buried away in WebObjects). SQLAlchemy does rich object-relational mapping (many more options than Rails' ActiveRecord, but still relatively simple to use); but it's also a great toolkit for generic database use. And Python also has a couple of good object databases which work better for certain web scenarios (such as hierarchical and arbitrary content - like a file system on steroids) than an RDBMS.\n\nStackless Python (and possibly PyPy) can be used to get the benefits of continuations as in Smalltalk+Seaside. The recent generator features of Python 2.5 *might* be usable here too.\n\nFinally, if by 'advanced' you mean high performance, concurrent, distributed, capable of taking advantage of modern multi-core/multi-processer systems effectively, etc, than Erlang should be high on your list.\n\nPersonally, I've been thinking of experimenting with [IO](http://iolanguage.com/) and seeing where that leads me. There doesn't seem to be much in the way of deep web stuff built in or built for it, yet, which could be part of the fun.\n\n", "author": "jshell", "author_flair_text": null, "distinguished": null, "edited": false, "author_flair_css_class": null, "archived": true, "subreddit": "programming", "name": "t1_c02bh00", "parent_id": "t3_5z4hl", "score_hidden": false, "id": "c02bh00"}
{"controversiality": 0, "retrieved_on": 1427425295, "subreddit_id": "t5_2fwo", "created_utc": "1193415898", "ups": 0, "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 0, "body": "Erlang.   Because I already know Python, so I can't learn it anymore.  Ruby is not as different in significant ways as Erlang is, so I will expand my brain more by learning Erlang.\r\n\r\nNote the there are significant differences between Python and Runy.   However there are even more significant differences between Python and Erlang.\r\n\r\nIf was just which language to learn next I might pick Haskel or Common Lisp.  However Erlang's forte is distributed networked applications, which describes web development, so why not learn something that could work well.", "author": "bluGill", "archived": true, "distinguished": null, "edited": false, "id": "c02bhtu", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02bhtu", "parent_id": "t3_5z4hl", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425153, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02bsr2", "gilded": 0, "link_id": "t3_5z4hl", "downs": 0, "score": 2, "score_hidden": false, "id": "c02bsr2", "author": "mcantelon", "created_utc": "1193584645", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t3_5z4hl", "body": "   I would say if you want breadth (the ability to deliver a lot of functionality fast) and community then Drupal is a good framework, although you need to live in PHP. For depth and community and a more advanced language I'd say Python (Django, TurboGears, or roll your own with WSGI). For depth and speed, I'm starting to look at Scala/Lift to leverage its concurrency support and the speed of Java, although Python also can theoretically be made faster through RPython and Stackless Python, both of which I know little about but seem like they could be useful for addressing scalability.\n\nRuby is a nice language, but, to quote Zed Shaw, is \"slower than pigshit\" so until Rubinius gels other options seem more appealing.\n ", "author_flair_css_class": null}