{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": -1, "author": "millstone", "created_utc": "1193706169", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "mjd", "created_utc": "1193707063", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 2, "gilded": 0, "link_id": "t3_5zdf4", "retrieved_on": 1427424999, "score": 2, "id": "c02c4oc", "author": "taejo", "created_utc": "1193741367", "distinguished": null, "edited": false, "body": "Hmm... I see that as referring more to\n   int* ptr = NULL;\n   *ptr = 4;\n\nwhich *is* undefined.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02c4oc", "parent_id": "t1_c02c2p4", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "[deleted]", "created_utc": "1193755670", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "mjd", "created_utc": "1193757998", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "[deleted]", "created_utc": "1193759412", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "name": "t1_c02cd3u", "gilded": 0, "link_id": "t3_5zdf4", "retrieved_on": 1427424890, "score": 1, "created_utc": "1193840437", "id": "c02cd3u", "author": "mjd", "author_flair_text": null, "distinguished": null, "edited": false, "body": "&gt; Constants have no storage.\n\nBut they do have a type.  And the constant 4 has object type even though it is not an object.\n", "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t1_c02c649", "ups": 1, "author_flair_css_class": null}], "subreddit": "programming", "ups": 1, "name": "t1_c02c649", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zdf4", "retrieved_on": 1427424980, "score_hidden": false, "id": "c02c649", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02c5y1", "body": "&gt; I think you are mistaken about the meaning of \"object type\".\n\nThis is obviously hair-splitting territory, but \"object types\" are \"types that fully describe objects\" and \"objects\" are \"regions of data storage\".  Constants have no storage.\n\nAlso note that constants don't exist on their own; in a C program, they appear as primary expressions, and the relevant clause (6.5.1) explicitly mentions, for each kind of primary, if it can be an lvalue.  Identifiers, string literals, and parenthesized expressions that contain lvalues can be lvalues, constants can not.\n\n(bulk downmodded for reading the specification?  programming.reddit.com is definitely no longer what it used to be...)", "author_flair_css_class": null}], "subreddit": "programming", "ups": 3, "name": "t1_c02c5y1", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zdf4", "retrieved_on": 1427424983, "score_hidden": false, "body": "&gt; The relevant clause is 6.5.16, which states that an assignment \"shall have a modifiable lvalue as its left operand\".\n\nYes, you're right.  I see what my mistake was: 6.5.16#2 says \"An assignment operator shall have a modifiable lvalue as its left operand.\"  Since the program violated a \"shall\" clause, aha, undefined behavior.  Except that no, I had forgotten that violations of \"shall\" clauses in constraints are *not* undefined, and that is a constraint.  So thanks for the correction.\n\nI think you are mistaken about the meaning of \"object type\".  \"Object type\" is used in the standard as the opposite of \"function type\".  The constant 4 has type int, and int is an object type. \n\n", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02c5pr", "id": "c02c5y1", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02c5pr", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 2, "link_id": "t3_5zdf4", "retrieved_on": 1427424985, "body": "Except that the clause you quote doesn't apply here.\r\n\r\nThe relevant clause is 6.5.16, which states that an assignment \"shall have a modifiable lvalue as its left operand\".  Constants cannot be modified.\r\n\r\nAnd constants are not lvalues either -- an \"lvalue\" is defined as an \"expression with an object type\", and an \"object\" in C is a \"region of data storage in the execution environment\".  Constants don't have storage, so 6.3.2.1 doesn't apply at all.\r\n\r\nAnd even if a constant *had* been a non-modifiable lvalue, the compiler would still have to report this; 5.1.1.3 explains why.", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c02c2p4", "id": "c02c5pr", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02c2p4", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 12, "link_id": "t3_5zdf4", "retrieved_on": 1427425024, "id": "c02c2p4", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c2mz", "body": "Gee, I included a citation to the exact clause standard and everything.  It says \"if an  lvalue  does  not\n       designate  an  object  when it is evaluated, the behavior is\n       undefined.\"\n\n", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02c2mz", "score_hidden": false, "controversiality": 0, "archived": true, "ups": -1, "link_id": "t3_5zdf4", "retrieved_on": 1427425025, "id": "c02c2mz", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5zdf4", "body": "This fellow gives an incorrect example of undefined behavior in C.  4 = x; is not undefined behavior: the compiler is required to produce a diagnostic.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 5, "author": "[deleted]", "created_utc": "1193709054", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193725804", "name": "t1_c02c43d", "gilded": 0, "link_id": "t3_5zdf4", "retrieved_on": 1427425006, "score": 3, "score_hidden": false, "body": "Funny, that's what Placido said too.  I'll fix it shortly.\n\n\n", "author": "mjd", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit_id": "t5_2fwo", "ups": 3, "parent_id": "t1_c02c2vn", "id": "c02c43d", "author_flair_css_class": null}], "subreddit": "programming", "ups": 5, "name": "t1_c02c2vn", "controversiality": 0, "archived": true, "link_id": "t3_5zdf4", "retrieved_on": 1427425022, "score_hidden": false, "id": "c02c2vn", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t3_5zdf4", "body": "The picture of MJD is gone! Also, where's Placido? Who's the thick-necked thistlehead in the current picture?! :)", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 1, "author": "martinbishop", "created_utc": "1193713208", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "ayrnieu", "created_utc": "1193719740", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 2, "author": "martinbishop", "created_utc": "1193721645", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "ayrnieu", "created_utc": "1193722574", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 2, "author": "martinbishop", "created_utc": "1193760186", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1193793298", "ups": 1, "gilded": 0, "link_id": "t3_5zdf4", "retrieved_on": 1427424929, "score": 1, "body": "Add to that list:\n\n* local exceptions\n* better user-defined operators\n* option types instead of exceptions for \"not found\" conditions\n* an algebraic result for comparators\n* local `open`\n\nFull disclosure: I'm an OCaml fan.", "author": "notfancy", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit": "programming", "score_hidden": false, "name": "t1_c02ca3l", "parent_id": "t1_c02c67j", "id": "c02ca3l", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02c67j", "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zdf4", "retrieved_on": 1427424979, "score_hidden": false, "id": "c02c67j", "author_flair_text": null, "distinguished": null, "edited": true, "parent_id": "t1_c02c3wt", "body": "No, that is not a syntax comparison.  Read the paragraphs under some of the comparisons and you'll find the semantics are quite different.\n\nImmutable stings, first class constructors, lack of polymorphic variants, etc.\n\nEDIT:  And why did me and ayrnieu get voted down for having a discussion? :|", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 4, "score_hidden": false, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zdf4", "retrieved_on": 1427425010, "body": "&gt; See here\r\n\r\nYou've pointed me to a syntax comparison.\r\n\r\nSo, what relation do you suppose standardization has to relative syntatic 'purity'?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02c3wt", "parent_id": "t1_c02c3v2", "id": "c02c3wt", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "ups": 2, "controversiality": 0, "archived": true, "link_id": "t3_5zdf4", "retrieved_on": 1427425010, "id": "c02c3v2", "author_flair_text": null, "distinguished": null, "edited": false, "name": "t1_c02c3v2", "parent_id": "t1_c02c3qs", "body": "Well, I've used both, and like both, but I just get the feeling SML is cleaner.  Apparently, I'm not alone, however. See [here](http://www.cs.berkeley.edu/~adamc/mlcomp/)", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02c3qs", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 2, "link_id": "t3_5zdf4", "retrieved_on": 1427425011, "id": "c02c3qs", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02c37s", "body": "&gt; SML being much cleaner and more \"pure\" than OCaml.\r\n\r\nWhat is this assertion based on?  Your random preference for SML's syntax?", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02c37s", "ups": 1, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5zdf4", "retrieved_on": 1427425018, "score_hidden": false, "body": "It always seems, however, that languages with a standard come out a lot cleaner.\n\nFor example, Ocaml is implementation-defined, whereas SML has a formal definition.  SML being much cleaner and more \"pure\" than OCaml.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5zdf4", "id": "c02c37s", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427424996, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02c4va", "gilded": 0, "link_id": "t3_5zdf4", "downs": 0, "score": 2, "score_hidden": false, "body": "Along the same lines as the XML example is gcc's behavior of _unconditionally_ defining `__STDC__`, even when not operating in Standard C mode.  Their rationale goes like this:\n\n&gt; Sometimes people say that defining `__STDC__` in a compiler that\n&gt; does not completely conform to the ISO C standard somehow violates\n&gt; the standard.  This is illogical.  The standard is a standard for\n&gt; compilers that claim to support ISO C, such as \"gcc -ansi\" -- not for\n&gt; other compilers such as plain \"gcc\".  Whatever the ISO C standard\n&gt; says is relevant to the design of plain \"gcc\" without \"-ansi\" only\n&gt; for pragmatic reasons, not as a requirement.\n\n\n", "author": "dododge", "created_utc": "1193745934", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 2, "parent_id": "t3_5zdf4", "id": "c02c4va", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193806142", "ups": 1, "gilded": 0, "link_id": "t3_5zdf4", "retrieved_on": 1427424915, "score": 1, "score_hidden": false, "body": "[deleted]", "author": "[deleted]", "author_flair_text": null, "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "name": "t1_c02cb4z", "parent_id": "t3_5zdf4", "id": "c02cb4z", "author_flair_css_class": null}