{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 12, "author": "sartak", "created_utc": "1192848957", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 15, "author": "theytookmystapler", "created_utc": "1192870681", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "awb", "created_utc": "1192887670", "children": [{"controversiality": 0, "retrieved_on": 1427425944, "subreddit_id": "t5_2fwo", "created_utc": "1192889721", "ups": 5, "gilded": 0, "link_id": "t3_5ypl3", "downs": 0, "score": 5, "id": "c02a97u", "author": "Poromenos", "archived": true, "distinguished": null, "edited": false, "body": "You mean *that's* interactive commits? That's very useful! I've held off a bugfix because I made many changes to the file that had the bug and couldn't commit it. With this feature, I can just commit the bugfix and leave the rest of the file intact.  \r\n\r\nToo bad there are no Windows binaries yet, I'm going to hunt for my VS 2005 CD...", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a97u", "parent_id": "t1_c02a948", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 2, "gilded": 0, "link_id": "t3_5ypl3", "retrieved_on": 1427425895, "score": 2, "id": "c02ad1r", "author": "gxti", "created_utc": "1192947166", "distinguished": null, "edited": false, "body": "Hot! Currently, I dump all my changes to disk with hg diff, store the patch somewhere where I hopefully won't accidentally nuke it, revert everything, cut out the part of the patch I want to commit, re-apply it, and commit. Then, hopefully I remember to re-apply the rest of the patch so I don't lose it.", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02ad1r", "parent_id": "t1_c02a948", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "neilc", "created_utc": "1193029942", "children": [{"controversiality": 0, "retrieved_on": 1427425809, "subreddit_id": "t5_2fwo", "created_utc": "1193057828", "score": 1, "link_id": "t3_5ypl3", "downs": 0, "name": "t1_c02ajlg", "score_hidden": false, "body": "I've broken the build a few times accidentally using interactive commits - mostly when I make related changes and then check them in one at a time.  darcs has a nice hook to run regression tests before each checkin on a pristine copy, and I find using that prevents mistakes.", "author": "awb", "archived": true, "distinguished": null, "edited": false, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 1, "parent_id": "t1_c02ai8i", "id": "c02ajlg", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02ai8i", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 1, "link_id": "t3_5ypl3", "retrieved_on": 1427425827, "body": "I like interactive commits, but I think they're somewhat dangerous: the way that most people use them, they don't compile or test the actual change that they're checking in. Sure, for typo fixes, this is fairly safe, especially if the other, unrecorded changes to the file are small -- but it's quite possible that if you've made a bunch of changes you don't want to record as well as a few changes that you do, the recorded changes are dependent on the unrecorded ones, so you end up with a broken commit.", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a948", "id": "c02ai8i", "author_flair_css_class": null}], "subreddit": "programming", "ups": 7, "name": "t1_c02a948", "controversiality": 0, "archived": true, "link_id": "t3_5ypl3", "retrieved_on": 1427425945, "score_hidden": false, "id": "c02a948", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c02a8g0", "body": "darcs record is fantastic.\n\nFor all their talk about not being CVS, most SCMs have a file-level granularity for checking in changes - you either check in changes for a file, or you don't, and you have to specify which files you want to check in ahead-of-time.\n\nDarcs interactively prompts you for each patch hunk.  If you make several unrelated changes to a file, and they're separate enough, you can easily check them in as such without using editdiff or any other crazy scheme.\n\nIt's really handy and usable, and changed the way I use my SCM.", "author_flair_css_class": null}], "subreddit": "programming", "ups": 15, "name": "t1_c02a8g0", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ypl3", "retrieved_on": 1427425954, "score_hidden": false, "body": "I don't know what I am missing. :-) Could you explain them (very) briefly?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c02a74o", "id": "c02a8g0", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425946, "subreddit_id": "t5_2fwo", "created_utc": "1192886217", "ups": 2, "gilded": 0, "link_id": "t3_5ypl3", "downs": 0, "score": 2, "body": "&gt; If your SCM of choice doesn't, then you don't know what you're missing!\n\nWait till you try `vimdiff`/`ediff` instead!", "author": "pjdelport", "archived": true, "distinguished": null, "edited": true, "id": "c02a91q", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02a91q", "parent_id": "t1_c02a74o", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c02a74o", "score_hidden": false, "controversiality": 0, "author_flair_text": null, "ups": 12, "link_id": "t3_5ypl3", "retrieved_on": 1427425971, "body": "&gt; * record - darcs-style interactive change selection during commit\r\n\r\nExcellent. I am immensely addicted to interactive commits. Glad to see more SCMs are picking the feature up. darcs, Hg, SVK, (probably) git have it. If your SCM of choice doesn't, then you don't know what you're missing!", "archived": true, "distinguished": null, "edited": false, "parent_id": "t3_5ypl3", "id": "c02a74o", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425916, "subreddit_id": "t5_2fwo", "created_utc": "1192921670", "ups": 1, "gilded": 0, "link_id": "t3_5ypl3", "downs": 0, "score": 1, "id": "c02abcp", "author": "derekslager", "archived": true, "distinguished": null, "edited": false, "body": "`imerge` sounds rather interesting ... more here:\n\nhttp://www.selenic.com/mercurial/wiki/index.cgi/ImergeExtension", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02abcp", "parent_id": "t3_5ypl3", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "name": "t1_c02abms", "gilded": 0, "link_id": "t3_5ypl3", "retrieved_on": 1427425913, "score": -8, "score_hidden": false, "body": "Mercurial is yet another distributed SCM, named after the liquidity of the chemical element, and the shrewdness of the imaginary Greek god. Until this moment, I'd never heard of it.", "author": "[deleted]", "created_utc": "1192925764", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": -8, "parent_id": "t3_5ypl3", "id": "c02abms", "author_flair_css_class": null}
{"controversiality": 0, "id": "c02b91g", "subreddit": "programming", "author_flair_text": null, "ups": 1, "gilded": 0, "link_id": "t3_5ypl3", "retrieved_on": 1427425409, "score": 1, "body": "Also notable is the addition of support for Darcs and Subversion to the [\"convert\" extension](http://www.selenic.com/mercurial/wiki/index.cgi/ConvertExtension) (which already handled CVS and Git repos).", "author": "pbx", "created_utc": "1193322682", "downs": 0, "distinguished": null, "edited": true, "archived": true, "subreddit_id": "t5_2fwo", "score_hidden": false, "parent_id": "t3_5ypl3", "name": "t1_c02b91g", "author_flair_css_class": null}