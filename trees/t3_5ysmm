{"controversiality": 0, "retrieved_on": 1427425866, "subreddit_id": "t5_2fwo", "archived": true, "ups": 8, "gilded": 0, "link_id": "t3_5ysmm", "downs": 0, "score": 8, "body": " Looks legit (it's under one of the [authors' homepage](http://www.ecp6.jussieu.fr/pageperso/bondy/main.html)s, so it doesn't look stolen). Way awesome, God bless these days of information bounty! \n\nMore convenient [link including semi-browsable html](http://www.ecp6.jussieu.fr/pageperso/bondy/books/gtwa/gtwa.html) (as well as link to full book). ", "author": "queensnake", "created_utc": "1192992077", "distinguished": null, "edited": true, "id": "c02af8a", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02af8a", "parent_id": "t3_5ysmm", "score_hidden": false, "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 12, "author": "jamarcus", "created_utc": "1192994321", "children": [{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "archived": true, "ups": 2, "gilded": 0, "link_id": "t3_5ysmm", "retrieved_on": 1427425852, "score": 2, "id": "c02agfd", "author": "leoc", "created_utc": "1193006590", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "score_hidden": false, "name": "t1_c02agfd", "parent_id": "t1_c02affb", "body": "([Reddit](http://reddit.com/info/26332/comments)).", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c02affb", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 12, "link_id": "t3_5ysmm", "retrieved_on": 1427425863, "id": "c02affb", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t3_5ysmm", "body": "I highly recommend http://www.math.uni-hamburg.de/home/diestel/books/graph.theory/ instead, also free and online, but covers much more material and with greater rigor.", "author_flair_css_class": null}
{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 3, "author": "[deleted]", "created_utc": "1193002876", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 8, "gilded": 0, "link_id": "t3_5ysmm", "retrieved_on": 1427425852, "score": 8, "body": "stay up all night having nightmares about Hamiltonian Cycles and other NP Complete problems.", "author": "jon_titor", "created_utc": "1193005443", "distinguished": null, "edited": false, "id": "c02agb7", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02agb7", "parent_id": "t1_c02ag3x", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425838, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c02ahf9", "gilded": 0, "link_id": "t3_5ysmm", "downs": 0, "score": 9, "score_hidden": false, "id": "c02ahf9", "author": "queensnake", "created_utc": "1193018866", "distinguished": null, "edited": true, "author_flair_text": null, "subreddit": "programming", "ups": 9, "parent_id": "t1_c02ag3x", "body": " Graph theory isn't a single tool, but something you can boil down and represent all structure as. Then you tap into whatever the world knows about the properties of graphs that matter to your problem. \n\nEg Google's Page Rank represents pages and links as a graph; cities and the routes between them make a graph, or stages of a complicated process, and steps between them make one. Houses and street plumbing make one. Then you can use what people know about them to figure out: which the popular pages are, the fastest way to visit all cities (or do your best), figure out which steps have to be done first, figure out whether you can lay the pipes so that they don't overlap (respectively). All sorts. Just an abstraction to hang knowledge on.  ", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425830, "subreddit_id": "t5_2fwo", "archived": true, "ups": 6, "gilded": 0, "link_id": "t3_5ysmm", "downs": 0, "score": 6, "body": "Queensnake's explanation about path finding is a good example.\r\n\r\nYou can also do pattern recognition using subgraph isomorphism and automorphism algorithms.  This is an extremely powerful tool, sometimes used in scene processing in image analysis applications, or to analyze chemical compounds.  Subgraph querys show whether a scene contains a particular relationship of elements, or a compound contains a particular reactive moiety.  This can useful if you want to compute chemical reactions over a generic set of molecules.  \r\n\r\nGraph automorphism allows you to quickly compare graphs to see whether they're the same.  Sometimes you want to know a canonical form of a complex object.  If the structure is hierarchical, you can use some kind of lexical ordering, but if it has cycles (chemical compounds are a good example), you can use graph automorphism to compute the \"canonical\" description given any of the equivalent forms.   ", "author": "abudabu", "created_utc": "1193026788", "distinguished": null, "edited": true, "id": "c02ai04", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02ai04", "parent_id": "t1_c02ag3x", "score_hidden": false, "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427425825, "subreddit_id": "t5_2fwo", "created_utc": "1193031592", "score": 10, "link_id": "t3_5ysmm", "downs": 0, "name": "t1_c02aid2", "score_hidden": false, "body": " A professor I once had (Impagliazzo) said whenever people come to him asking for help designing an algorithm for a real-world problem, it is almost always solvable with either dynamic programming or min-cut/max-flow (chapter 11). ", "author": "Mr_Smartypants", "archived": true, "distinguished": null, "edited": true, "gilded": 0, "author_flair_text": null, "subreddit": "programming", "ups": 10, "parent_id": "t1_c02ag3x", "id": "c02aid2", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 3, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5ysmm", "retrieved_on": 1427425856, "body": "I work in a different area, so I am curious. What are some cool things that one can do with graph theory?", "archived": true, "distinguished": null, "edited": false, "name": "t1_c02ag3x", "parent_id": "t3_5ysmm", "id": "c02ag3x", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427425852, "subreddit_id": "t5_2fwo", "created_utc": "1193005362", "ups": 3, "gilded": 0, "link_id": "t3_5ysmm", "downs": 0, "score": 3, "body": "thanks reddit. i like practical links like this. not some coding mumbo jumbo.", "author": "cindybin", "archived": true, "distinguished": null, "edited": false, "id": "c02agb2", "author_flair_text": null, "subreddit": "programming", "name": "t1_c02agb2", "parent_id": "t3_5ysmm", "score_hidden": false, "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit": "programming", "created_utc": "1193020659", "ups": 7, "gilded": 0, "link_id": "t3_5ysmm", "retrieved_on": 1427425836, "score": 7, "id": "c02ahji", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "body": "[deleted]", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c02ahji", "parent_id": "t3_5ysmm", "score_hidden": false, "author_flair_css_class": null}