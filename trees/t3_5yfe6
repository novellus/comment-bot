{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 7, "author": "dons", "created_utc": "1192555345", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 15, "author": "[deleted]", "created_utc": "1192555985", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 23, "author": "dons", "created_utc": "1192562910", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 4, "author": "neilk", "created_utc": "1192563290", "children": [{"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 16, "author": "dons", "created_utc": "1192563574", "children": [{"subreddit": "programming", "gilded": 0, "downs": 0, "score": 1, "author": "OMouse", "created_utc": "1192571614", "children": [{"controversiality": 0, "downs": 0, "subreddit": "programming", "archived": true, "ups": 8, "gilded": 0, "link_id": "t3_5yfe6", "retrieved_on": 1427426267, "score": 8, "body": "Galois is hiring, so that's a sign that there are customers. :)", "author": "augustss", "created_utc": "1192573077", "distinguished": null, "edited": false, "id": "c029kcw", "author_flair_text": null, "subreddit_id": "t5_2fwo", "name": "t1_c029kcw", "parent_id": "t1_c029k93", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "name": "t1_c029k93", "ups": 1, "controversiality": 0, "archived": true, "link_id": "t3_5yfe6", "retrieved_on": 1427426268, "score_hidden": false, "id": "c029k93", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029jbc", "body": "&gt;I work at Galois, and we're building (and have built) a whole range of things in Haskell (from kernels, to file systems, to compilers, network servers, to web apps), all focused at the high assurance/reliability end of the spectrum.\n\nIs it easy to find customers?", "author_flair_css_class": null}, {"controversiality": 0, "retrieved_on": 1427426208, "subreddit_id": "t5_2fwo", "archived": true, "name": "t1_c029ov0", "gilded": 0, "link_id": "t3_5yfe6", "downs": 0, "score": 0, "score_hidden": false, "body": "From an analytical standpoint, one might think it possible to do worst-case space analysis assuming strict evaluation, and then factor in lazy evaluation to come up with an amortized space-complexity measure. Am I wrong?\n\n(Yes, I've been reading Okasaki lately. Can you tell?)", "author": "bitwize", "created_utc": "1192639933", "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": 0, "parent_id": "t1_c029jbc", "id": "c029ov0", "author_flair_css_class": null}], "subreddit": "programming", "ups": 16, "name": "t1_c029jbc", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yfe6", "retrieved_on": 1427426280, "score_hidden": false, "body": "Space profiling, heap profiling and code coverage analysis are built into GHC. So if you've a leak you can't understand, you just compile with: `ghc -prof` and inspect the resulting graph of what's allocating what. The profiler's had 15 years of research put into it, and seems to be all we need in practice. These tools (code coverage and profiling) seem if anything to be better supported in GHC than in any other language I've used. They just work out of the box.\n\nThe other major tool is QuickCheck + HPC (GHC's code coverage tool), which quickly identifies code that's not being tested properly.\n\nI work at Galois, and we're building (and have built) a whole range of things in Haskell (from kernels, to file systems, to compilers, network servers, to web apps), all focused at the high assurance/reliability end of the spectrum.", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029ja2", "id": "c029jbc", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 4, "name": "t1_c029ja2", "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yfe6", "retrieved_on": 1427426280, "score_hidden": false, "body": "You're building an app in Haskell? Do tell.\n\nI'm interested in the rest of the support environment for Haskell. Are there decent profilers or anything else that can help you determine inefficiencies?", "archived": true, "distinguished": null, "edited": false, "parent_id": "t1_c029j8g", "id": "c029ja2", "author_flair_css_class": null}, {"subreddit_id": "t5_2fwo", "gilded": 0, "downs": 0, "score": 12, "author": "astrolabe", "created_utc": "1192572157", "children": [{"controversiality": 0, "retrieved_on": 1427426267, "subreddit_id": "t5_2fwo", "created_utc": "1192573363", "ups": 7, "gilded": 0, "link_id": "t3_5yfe6", "downs": 0, "score": 7, "id": "c029kdl", "author": "augustss", "archived": true, "distinguished": null, "edited": false, "body": "Finding space leaks in large programs can be challenging.  It's easier to practice on small programs.\nBut it really is a skill; you need to switch between different profiles and slice them the right way.\n", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029kdl", "parent_id": "t1_c029kaf", "score_hidden": false, "author_flair_css_class": null}, {"subreddit": "programming", "gilded": 0, "downs": 0, "score": 5, "author": "halu", "created_utc": "1192578043", "children": [{"controversiality": 0, "retrieved_on": 1427426253, "subreddit_id": "t5_2fwo", "created_utc": "1192586808", "ups": 1, "gilded": 0, "link_id": "t3_5yfe6", "downs": 0, "score": 1, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c029lbz", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029lbz", "parent_id": "t1_c029kpp", "score_hidden": false, "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "score_hidden": false, "name": "t1_c029kpp", "controversiality": 0, "author_flair_text": null, "ups": 5, "link_id": "t3_5yfe6", "retrieved_on": 1427426262, "body": " Exactly the same here. I *love* Haskell. But my most serious complains are \r\n\r\n* bloated executables w/ GHC (which is a technical problem)\r\n\r\n* unpredictable space (and sometimes, time) behaviour (which is more like a theoretical problem) - though I wouldn't call it \"leaks\" \r\n\r\n[edit: markdown]", "archived": true, "distinguished": null, "edited": true, "parent_id": "t1_c029kaf", "id": "c029kpp", "author_flair_css_class": null}], "subreddit": "programming", "name": "t1_c029kaf", "score_hidden": false, "controversiality": 0, "archived": true, "ups": 12, "link_id": "t3_5yfe6", "retrieved_on": 1427426268, "id": "c029kaf", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029j8g", "body": "I'm very much sold on haskell.  It is my favorite programming language.  I find space leaks to be a problem that it is not always easy to solve.  Possibly I'm not a 'competent programmer'.  I certainly wouldn't describe myself as an expert.  However, I have spent more time than I would like studying graphs from the profiler and scratching my head.  Once I ended up just inserting strictness annotations until the problem went away because I couldn't understand what the problem was.\nDespite this, and despite the difficulties I had debugging haskell (this was before the ghci debugger), I still love Haskell.  The code I produce with haskell is so much more beautiful, clearer, shorter and more refactorable than in other languages I've used.", "author_flair_css_class": null}], "subreddit_id": "t5_2fwo", "ups": 23, "name": "t1_c029j8g", "controversiality": 0, "archived": true, "link_id": "t3_5yfe6", "retrieved_on": 1427426281, "score_hidden": false, "id": "c029j8g", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029ie5", "body": "I work at the same company as Fergus (prior to his Google move) :)\n\nThe experience here has been that this concern about space usage analysis doesn't seem to be an issue in practice -- there are no strange space leaks in the code we're working on, so I'm skeptical about how serious an issue this is. `Space usage' appears to be used more as a hook for obfuscation and doubt.\n\nIf you've had experience building real Haskell applications with competent programmers, and reasoning about space has been a concern, I'd love to know about it!", "author_flair_css_class": null}], "subreddit": "programming", "ups": 15, "name": "t1_c029ie5", "controversiality": 0, "archived": true, "link_id": "t3_5yfe6", "retrieved_on": 1427426293, "score_hidden": false, "id": "c029ie5", "author_flair_text": null, "distinguished": null, "edited": false, "parent_id": "t1_c029ib7", "body": "[deleted]", "author_flair_css_class": null}], "subreddit": "programming", "score_hidden": false, "ups": 7, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5yfe6", "retrieved_on": 1427426293, "body": "Heh, lithper's personal Haskell backlash -- apparently Haskell is dangerous enough to inspire enemies now :)", "archived": true, "distinguished": null, "edited": false, "name": "t1_c029ib7", "parent_id": "t3_5yfe6", "id": "c029ib7", "author_flair_css_class": null}
{"controversiality": 0, "downs": 0, "subreddit_id": "t5_2fwo", "created_utc": "1192560857", "name": "t1_c029iz4", "gilded": 0, "link_id": "t3_5yfe6", "retrieved_on": 1427426284, "score": -6, "score_hidden": false, "id": "c029iz4", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -6, "parent_id": "t3_5yfe6", "body": "[deleted]", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426261, "subreddit_id": "t5_2fwo", "created_utc": "1192578310", "name": "t1_c029kq9", "gilded": 0, "link_id": "t3_5yfe6", "downs": 0, "score": -8, "score_hidden": false, "id": "c029kq9", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "author_flair_text": null, "subreddit": "programming", "ups": -8, "parent_id": "t3_5yfe6", "body": "*sigh* More anti-intellectual nonsense.\n\nTo anyone who cares, if you want to comment on lazy evaluation, its impact and its consequences, please learn the fundamentals of the topic at hand FIRST. Is this an unreasonable request? I sincerely hope not.", "author_flair_css_class": null}
{"controversiality": 0, "retrieved_on": 1427426239, "subreddit_id": "t5_2fwo", "created_utc": "1192604174", "ups": -10, "gilded": 0, "link_id": "t3_5yfe6", "downs": 0, "score": -10, "body": "[deleted]", "author": "[deleted]", "archived": true, "distinguished": null, "edited": false, "id": "c029mgp", "author_flair_text": null, "subreddit": "programming", "name": "t1_c029mgp", "parent_id": "t3_5yfe6", "score_hidden": false, "author_flair_css_class": null}
{"body": "[deleted]", "controversiality": 0, "downs": 0, "subreddit": "programming", "author_flair_text": null, "gilded": 0, "link_id": "t3_5yfe6", "retrieved_on": 1427426212, "score": -15, "score_hidden": false, "id": "c029oit", "author": "[deleted]", "created_utc": "1192636823", "distinguished": null, "edited": false, "archived": true, "subreddit_id": "t5_2fwo", "ups": -15, "parent_id": "t3_5yfe6", "name": "t1_c029oit", "author_flair_css_class": null}